/*
* generated by Xtext
*/
grammar InternalLuceneQuery;

options {
	superClass=AbstractInternalAntlrParser;
	
}

@lexer::header {
package org.eclipselabs.recommenders.codesearchquery.rcp.dsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.eclipselabs.recommenders.codesearchquery.rcp.dsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.eclipselabs.recommenders.codesearchquery.rcp.dsl.services.LuceneQueryGrammarAccess;

}

@parser::members {

 	private LuceneQueryGrammarAccess grammarAccess;
 	
    public InternalLuceneQueryParser(TokenStream input, LuceneQueryGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "Exp1";	
   	}
   	
   	@Override
   	protected LuceneQueryGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleExp1
entryRuleExp1 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExp1Rule()); }
	 iv_ruleExp1=ruleExp1 
	 { $current=$iv_ruleExp1.current; } 
	 EOF 
;

// Rule Exp1
ruleExp1 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
    { 
        newCompositeNode(grammarAccess.getExp1Access().getExp2ParserRuleCall_0()); 
    }
    this_Exp2_0=ruleExp2
    { 
        $current = $this_Exp2_0.current; 
        afterParserOrEnumRuleCall();
    }
((
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExp1Access().getExp1LeftAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExp1Access().getBBinaryExpEnumRuleCall_1_1_0()); 
	    }
		lv_b_2_0=ruleBinaryExp		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp1Rule());
	        }
       		set(
       			$current, 
       			"b",
        		lv_b_2_0, 
        		"BinaryExp");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getExp1Access().getRightExp1ParserRuleCall_1_2_0()); 
	    }
		lv_right_3_0=ruleExp1		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp1Rule());
	        }
       		set(
       			$current, 
       			"right",
        		lv_right_3_0, 
        		"Exp1");
	        afterParserOrEnumRuleCall();
	    }

)
))?)
;





// Entry rule entryRuleExp2
entryRuleExp2 returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExp2Rule()); }
	 iv_ruleExp2=ruleExp2 
	 { $current=$iv_ruleExp2.current; } 
	 EOF 
;

// Rule Exp2
ruleExp2 returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getExp2Access().getValueClauseExpressionParserRuleCall_0_0()); 
	    }
		lv_value_0_0=ruleClauseExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExp2Rule());
	        }
       		set(
       			$current, 
       			"value",
        		lv_value_0_0, 
        		"ClauseExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |((
    { 
        newCompositeNode(grammarAccess.getExp2Access().getUnaryExpressionParserRuleCall_1_0()); 
    }
ruleUnaryExpression
    { 
        afterParserOrEnumRuleCall();
    }
)?	otherlv_2='(' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getExp2Access().getLeftParenthesisKeyword_1_1());
    }

    { 
        newCompositeNode(grammarAccess.getExp2Access().getExp1ParserRuleCall_1_2()); 
    }
    this_Exp1_3=ruleExp1
    { 
        $current = $this_Exp1_3.current; 
        afterParserOrEnumRuleCall();
    }
	otherlv_4=')' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getExp2Access().getRightParenthesisKeyword_1_3());
    }
))
;





// Entry rule entryRuleClauseExpression
entryRuleClauseExpression returns [EObject current=null] 
	@init { 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
	}
	:
	{ newCompositeNode(grammarAccess.getClauseExpressionRule()); }
	 iv_ruleClauseExpression=ruleClauseExpression 
	 { $current=$iv_ruleClauseExpression.current; } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule ClauseExpression
ruleClauseExpression returns [EObject current=null] 
    @init { enterRule(); 
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_WS");
    }
    @after { leaveRule(); }:
((
    { 
        newCompositeNode(grammarAccess.getClauseExpressionAccess().getUnaryExpressionParserRuleCall_0()); 
    }
ruleUnaryExpression
    { 
        afterParserOrEnumRuleCall();
    }
)?((
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getDefaultSimpleFieldValueParserRuleCall_1_0_0()); 
	    }
		lv_default_1_0=ruleSimpleFieldValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		set(
       			$current, 
       			"default",
        		lv_default_1_0, 
        		"SimpleFieldValue");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |(((
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getFieldSimpleFieldParserRuleCall_1_1_0_0_0()); 
	    }
		lv_field_2_0=ruleSimpleField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		set(
       			$current, 
       			"field",
        		lv_field_2_0, 
        		"SimpleField");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_3=':' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getClauseExpressionAccess().getColonKeyword_1_1_0_1());
    }
(((
    { 
        newCompositeNode(grammarAccess.getClauseExpressionAccess().getUnaryExpressionParserRuleCall_1_1_0_2_0_0()); 
    }
ruleUnaryExpression
    { 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getValuesSimpleFieldValueParserRuleCall_1_1_0_2_0_1_0()); 
	    }
		lv_values_5_0=ruleSimpleFieldValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_5_0, 
        		"SimpleFieldValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_6='(' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getClauseExpressionAccess().getLeftParenthesisKeyword_1_1_0_2_1_0());
    }
((
    { 
        newCompositeNode(grammarAccess.getClauseExpressionAccess().getUnaryExpressionParserRuleCall_1_1_0_2_1_1_0()); 
    }
ruleUnaryExpression
    { 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getValuesSimpleFieldValueParserRuleCall_1_1_0_2_1_1_1_0()); 
	    }
		lv_values_8_0=ruleSimpleFieldValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_8_0, 
        		"SimpleFieldValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_9=')' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getClauseExpressionAccess().getRightParenthesisKeyword_1_1_0_2_1_2());
    }
)))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getFieldTypeFieldParserRuleCall_1_1_1_0_0()); 
	    }
		lv_field_10_0=ruleTypeField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		set(
       			$current, 
       			"field",
        		lv_field_10_0, 
        		"TypeField");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_11=':' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getClauseExpressionAccess().getColonKeyword_1_1_1_1());
    }
(((
    { 
        newCompositeNode(grammarAccess.getClauseExpressionAccess().getUnaryExpressionParserRuleCall_1_1_1_2_0_0()); 
    }
ruleUnaryExpression
    { 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getValuesTypeFieldValueParserRuleCall_1_1_1_2_0_1_0()); 
	    }
		lv_values_13_0=ruleTypeFieldValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_13_0, 
        		"TypeFieldValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_14='(' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getClauseExpressionAccess().getLeftParenthesisKeyword_1_1_1_2_1_0());
    }
((
    { 
        newCompositeNode(grammarAccess.getClauseExpressionAccess().getUnaryExpressionParserRuleCall_1_1_1_2_1_1_0()); 
    }
ruleUnaryExpression
    { 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getValuesTypeFieldValueParserRuleCall_1_1_1_2_1_1_1_0()); 
	    }
		lv_values_16_0=ruleTypeFieldValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_16_0, 
        		"TypeFieldValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_17=')' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getClauseExpressionAccess().getRightParenthesisKeyword_1_1_1_2_1_2());
    }
)))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getFieldMethodFieldParserRuleCall_1_1_2_0_0()); 
	    }
		lv_field_18_0=ruleMethodField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		set(
       			$current, 
       			"field",
        		lv_field_18_0, 
        		"MethodField");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_19=':' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getClauseExpressionAccess().getColonKeyword_1_1_2_1());
    }
(((
    { 
        newCompositeNode(grammarAccess.getClauseExpressionAccess().getUnaryExpressionParserRuleCall_1_1_2_2_0_0()); 
    }
ruleUnaryExpression
    { 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getValuesMethodFieldValueParserRuleCall_1_1_2_2_0_1_0()); 
	    }
		lv_values_21_0=ruleMethodFieldValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_21_0, 
        		"MethodFieldValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_22='(' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getClauseExpressionAccess().getLeftParenthesisKeyword_1_1_2_2_1_0());
    }
((
    { 
        newCompositeNode(grammarAccess.getClauseExpressionAccess().getUnaryExpressionParserRuleCall_1_1_2_2_1_1_0()); 
    }
ruleUnaryExpression
    { 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getValuesMethodFieldValueParserRuleCall_1_1_2_2_1_1_1_0()); 
	    }
		lv_values_24_0=ruleMethodFieldValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_24_0, 
        		"MethodFieldValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_25=')' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getClauseExpressionAccess().getRightParenthesisKeyword_1_1_2_2_1_2());
    }
)))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getFieldFilePathFieldParserRuleCall_1_1_3_0_0()); 
	    }
		lv_field_26_0=ruleFilePathField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		set(
       			$current, 
       			"field",
        		lv_field_26_0, 
        		"FilePathField");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_27=':' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getClauseExpressionAccess().getColonKeyword_1_1_3_1());
    }
(((
    { 
        newCompositeNode(grammarAccess.getClauseExpressionAccess().getUnaryExpressionParserRuleCall_1_1_3_2_0_0()); 
    }
ruleUnaryExpression
    { 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getValuesFilePathFieldValueParserRuleCall_1_1_3_2_0_1_0()); 
	    }
		lv_values_29_0=ruleFilePathFieldValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_29_0, 
        		"FilePathFieldValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_30='(' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getClauseExpressionAccess().getLeftParenthesisKeyword_1_1_3_2_1_0());
    }
((
    { 
        newCompositeNode(grammarAccess.getClauseExpressionAccess().getUnaryExpressionParserRuleCall_1_1_3_2_1_1_0()); 
    }
ruleUnaryExpression
    { 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getValuesFilePathFieldValueParserRuleCall_1_1_3_2_1_1_1_0()); 
	    }
		lv_values_32_0=ruleFilePathFieldValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_32_0, 
        		"FilePathFieldValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_33=')' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getClauseExpressionAccess().getRightParenthesisKeyword_1_1_3_2_1_2());
    }
)))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getFieldNumberFieldParserRuleCall_1_1_4_0_0()); 
	    }
		lv_field_34_0=ruleNumberField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		set(
       			$current, 
       			"field",
        		lv_field_34_0, 
        		"NumberField");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_35=':' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getClauseExpressionAccess().getColonKeyword_1_1_4_1());
    }
(((
    { 
        newCompositeNode(grammarAccess.getClauseExpressionAccess().getUnaryExpressionParserRuleCall_1_1_4_2_0_0()); 
    }
ruleUnaryExpression
    { 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getValuesNumberFieldValueParserRuleCall_1_1_4_2_0_1_0()); 
	    }
		lv_values_37_0=ruleNumberFieldValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_37_0, 
        		"NumberFieldValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_38='(' 
    {
    	newLeafNode(otherlv_38, grammarAccess.getClauseExpressionAccess().getLeftParenthesisKeyword_1_1_4_2_1_0());
    }
((
    { 
        newCompositeNode(grammarAccess.getClauseExpressionAccess().getUnaryExpressionParserRuleCall_1_1_4_2_1_1_0()); 
    }
ruleUnaryExpression
    { 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getValuesNumberFieldValueParserRuleCall_1_1_4_2_1_1_1_0()); 
	    }
		lv_values_40_0=ruleNumberFieldValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_40_0, 
        		"NumberFieldValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_41=')' 
    {
    	newLeafNode(otherlv_41, grammarAccess.getClauseExpressionAccess().getRightParenthesisKeyword_1_1_4_2_1_2());
    }
)))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getFieldModifierFieldParserRuleCall_1_1_5_0_0()); 
	    }
		lv_field_42_0=ruleModifierField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		set(
       			$current, 
       			"field",
        		lv_field_42_0, 
        		"ModifierField");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_43=':' 
    {
    	newLeafNode(otherlv_43, grammarAccess.getClauseExpressionAccess().getColonKeyword_1_1_5_1());
    }
(((
    { 
        newCompositeNode(grammarAccess.getClauseExpressionAccess().getUnaryExpressionParserRuleCall_1_1_5_2_0_0()); 
    }
ruleUnaryExpression
    { 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getValuesModifierFieldValueParserRuleCall_1_1_5_2_0_1_0()); 
	    }
		lv_values_45_0=ruleModifierFieldValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_45_0, 
        		"ModifierFieldValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_46='(' 
    {
    	newLeafNode(otherlv_46, grammarAccess.getClauseExpressionAccess().getLeftParenthesisKeyword_1_1_5_2_1_0());
    }
((
    { 
        newCompositeNode(grammarAccess.getClauseExpressionAccess().getUnaryExpressionParserRuleCall_1_1_5_2_1_1_0()); 
    }
ruleUnaryExpression
    { 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getValuesModifierFieldValueParserRuleCall_1_1_5_2_1_1_1_0()); 
	    }
		lv_values_48_0=ruleModifierFieldValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_48_0, 
        		"ModifierFieldValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_49=')' 
    {
    	newLeafNode(otherlv_49, grammarAccess.getClauseExpressionAccess().getRightParenthesisKeyword_1_1_5_2_1_2());
    }
)))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getFieldTimeFieldParserRuleCall_1_1_6_0_0()); 
	    }
		lv_field_50_0=ruleTimeField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		set(
       			$current, 
       			"field",
        		lv_field_50_0, 
        		"TimeField");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_51=':' 
    {
    	newLeafNode(otherlv_51, grammarAccess.getClauseExpressionAccess().getColonKeyword_1_1_6_1());
    }
(((
    { 
        newCompositeNode(grammarAccess.getClauseExpressionAccess().getUnaryExpressionParserRuleCall_1_1_6_2_0_0()); 
    }
ruleUnaryExpression
    { 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getValuesTimeFieldValueParserRuleCall_1_1_6_2_0_1_0()); 
	    }
		lv_values_53_0=ruleTimeFieldValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_53_0, 
        		"TimeFieldValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_54='(' 
    {
    	newLeafNode(otherlv_54, grammarAccess.getClauseExpressionAccess().getLeftParenthesisKeyword_1_1_6_2_1_0());
    }
((
    { 
        newCompositeNode(grammarAccess.getClauseExpressionAccess().getUnaryExpressionParserRuleCall_1_1_6_2_1_1_0()); 
    }
ruleUnaryExpression
    { 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getValuesTimeFieldValueParserRuleCall_1_1_6_2_1_1_1_0()); 
	    }
		lv_values_56_0=ruleTimeFieldValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_56_0, 
        		"TimeFieldValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_57=')' 
    {
    	newLeafNode(otherlv_57, grammarAccess.getClauseExpressionAccess().getRightParenthesisKeyword_1_1_6_2_1_2());
    }
)))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getFieldDocumentTypeFieldParserRuleCall_1_1_7_0_0()); 
	    }
		lv_field_58_0=ruleDocumentTypeField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		set(
       			$current, 
       			"field",
        		lv_field_58_0, 
        		"DocumentTypeField");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_59=':' 
    {
    	newLeafNode(otherlv_59, grammarAccess.getClauseExpressionAccess().getColonKeyword_1_1_7_1());
    }
(((
    { 
        newCompositeNode(grammarAccess.getClauseExpressionAccess().getUnaryExpressionParserRuleCall_1_1_7_2_0_0()); 
    }
ruleUnaryExpression
    { 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getValuesDocumentTypeFieldValueParserRuleCall_1_1_7_2_0_1_0()); 
	    }
		lv_values_61_0=ruleDocumentTypeFieldValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_61_0, 
        		"DocumentTypeFieldValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_62='(' 
    {
    	newLeafNode(otherlv_62, grammarAccess.getClauseExpressionAccess().getLeftParenthesisKeyword_1_1_7_2_1_0());
    }
((
    { 
        newCompositeNode(grammarAccess.getClauseExpressionAccess().getUnaryExpressionParserRuleCall_1_1_7_2_1_1_0()); 
    }
ruleUnaryExpression
    { 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getValuesDocumentTypeFieldValueParserRuleCall_1_1_7_2_1_1_1_0()); 
	    }
		lv_values_64_0=ruleDocumentTypeFieldValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_64_0, 
        		"DocumentTypeFieldValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_65=')' 
    {
    	newLeafNode(otherlv_65, grammarAccess.getClauseExpressionAccess().getRightParenthesisKeyword_1_1_7_2_1_2());
    }
)))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getFieldProjectNameFieldParserRuleCall_1_1_8_0_0()); 
	    }
		lv_field_66_0=ruleProjectNameField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		set(
       			$current, 
       			"field",
        		lv_field_66_0, 
        		"ProjectNameField");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_67=':' 
    {
    	newLeafNode(otherlv_67, grammarAccess.getClauseExpressionAccess().getColonKeyword_1_1_8_1());
    }
(((
    { 
        newCompositeNode(grammarAccess.getClauseExpressionAccess().getUnaryExpressionParserRuleCall_1_1_8_2_0_0()); 
    }
ruleUnaryExpression
    { 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getValuesProjectNameFieldValueParserRuleCall_1_1_8_2_0_1_0()); 
	    }
		lv_values_69_0=ruleProjectNameFieldValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_69_0, 
        		"ProjectNameFieldValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_70='(' 
    {
    	newLeafNode(otherlv_70, grammarAccess.getClauseExpressionAccess().getLeftParenthesisKeyword_1_1_8_2_1_0());
    }
((
    { 
        newCompositeNode(grammarAccess.getClauseExpressionAccess().getUnaryExpressionParserRuleCall_1_1_8_2_1_1_0()); 
    }
ruleUnaryExpression
    { 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getValuesProjectNameFieldValueParserRuleCall_1_1_8_2_1_1_1_0()); 
	    }
		lv_values_72_0=ruleProjectNameFieldValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_72_0, 
        		"ProjectNameFieldValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_73=')' 
    {
    	newLeafNode(otherlv_73, grammarAccess.getClauseExpressionAccess().getRightParenthesisKeyword_1_1_8_2_1_2());
    }
)))
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getFieldAnnotationFieldParserRuleCall_1_1_9_0_0()); 
	    }
		lv_field_74_0=ruleAnnotationField		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		set(
       			$current, 
       			"field",
        		lv_field_74_0, 
        		"AnnotationField");
	        afterParserOrEnumRuleCall();
	    }

)
)	otherlv_75=':' 
    {
    	newLeafNode(otherlv_75, grammarAccess.getClauseExpressionAccess().getColonKeyword_1_1_9_1());
    }
(((
    { 
        newCompositeNode(grammarAccess.getClauseExpressionAccess().getUnaryExpressionParserRuleCall_1_1_9_2_0_0()); 
    }
ruleUnaryExpression
    { 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getValuesAnnotationFieldValueParserRuleCall_1_1_9_2_0_1_0()); 
	    }
		lv_values_77_0=ruleAnnotationFieldValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_77_0, 
        		"AnnotationFieldValue");
	        afterParserOrEnumRuleCall();
	    }

)
))
    |(	otherlv_78='(' 
    {
    	newLeafNode(otherlv_78, grammarAccess.getClauseExpressionAccess().getLeftParenthesisKeyword_1_1_9_2_1_0());
    }
((
    { 
        newCompositeNode(grammarAccess.getClauseExpressionAccess().getUnaryExpressionParserRuleCall_1_1_9_2_1_1_0()); 
    }
ruleUnaryExpression
    { 
        afterParserOrEnumRuleCall();
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getClauseExpressionAccess().getValuesAnnotationFieldValueParserRuleCall_1_1_9_2_1_1_1_0()); 
	    }
		lv_values_80_0=ruleAnnotationFieldValue		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getClauseExpressionRule());
	        }
       		add(
       			$current, 
       			"values",
        		lv_values_80_0, 
        		"AnnotationFieldValue");
	        afterParserOrEnumRuleCall();
	    }

)
))*	otherlv_81=')' 
    {
    	newLeafNode(otherlv_81, grammarAccess.getClauseExpressionAccess().getRightParenthesisKeyword_1_1_9_2_1_2());
    }
))))))
;
finally {
	myHiddenTokenState.restore();
}





// Entry rule entryRuleTypeField
entryRuleTypeField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeFieldRule()); }
	 iv_ruleTypeField=ruleTypeField 
	 { $current=$iv_ruleTypeField.current; } 
	 EOF 
;

// Rule TypeField
ruleTypeField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_ImplementedTypes_0_0=	'ImplementedTypes' 
    {
        newLeafNode(lv_ImplementedTypes_0_0, grammarAccess.getTypeFieldAccess().getImplementedTypesImplementedTypesKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeFieldRule());
	        }
       		setWithLastConsumed($current, "ImplementedTypes", lv_ImplementedTypes_0_0, "ImplementedTypes");
	    }

)
)
    |(
(
		lv_ExtendedTypes_1_0=	'ExtendedTypes' 
    {
        newLeafNode(lv_ExtendedTypes_1_0, grammarAccess.getTypeFieldAccess().getExtendedTypesExtendedTypesKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeFieldRule());
	        }
       		setWithLastConsumed($current, "ExtendedTypes", lv_ExtendedTypes_1_0, "ExtendedTypes");
	    }

)
)
    |(
(
		lv_UsedTypes_2_0=	'UsedTypes' 
    {
        newLeafNode(lv_UsedTypes_2_0, grammarAccess.getTypeFieldAccess().getUsedTypesUsedTypesKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeFieldRule());
	        }
       		setWithLastConsumed($current, "UsedTypes", lv_UsedTypes_2_0, "UsedTypes");
	    }

)
)
    |(
(
		lv_UsedTypesInTry_3_0=	'UsedTypesInTry' 
    {
        newLeafNode(lv_UsedTypesInTry_3_0, grammarAccess.getTypeFieldAccess().getUsedTypesInTryUsedTypesInTryKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeFieldRule());
	        }
       		setWithLastConsumed($current, "UsedTypesInTry", lv_UsedTypesInTry_3_0, "UsedTypesInTry");
	    }

)
)
    |(
(
		lv_UsedTypesInFinally_4_0=	'UsedTypesInFinally' 
    {
        newLeafNode(lv_UsedTypesInFinally_4_0, grammarAccess.getTypeFieldAccess().getUsedTypesInFinallyUsedTypesInFinallyKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeFieldRule());
	        }
       		setWithLastConsumed($current, "UsedTypesInFinally", lv_UsedTypesInFinally_4_0, "UsedTypesInFinally");
	    }

)
)
    |(
(
		lv_ParameterTypes_5_0=	'ParameterTypes' 
    {
        newLeafNode(lv_ParameterTypes_5_0, grammarAccess.getTypeFieldAccess().getParameterTypesParameterTypesKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeFieldRule());
	        }
       		setWithLastConsumed($current, "ParameterTypes", lv_ParameterTypes_5_0, "ParameterTypes");
	    }

)
)
    |(
(
		lv_ReturnType_6_0=	'ReturnType' 
    {
        newLeafNode(lv_ReturnType_6_0, grammarAccess.getTypeFieldAccess().getReturnTypeReturnTypeKeyword_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeFieldRule());
	        }
       		setWithLastConsumed($current, "ReturnType", lv_ReturnType_6_0, "ReturnType");
	    }

)
)
    |(
(
		lv_InstanceofTypes_7_0=	'InstanceofTypes' 
    {
        newLeafNode(lv_InstanceofTypes_7_0, grammarAccess.getTypeFieldAccess().getInstanceofTypesInstanceofTypesKeyword_7_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeFieldRule());
	        }
       		setWithLastConsumed($current, "InstanceofTypes", lv_InstanceofTypes_7_0, "InstanceofTypes");
	    }

)
)
    |(
(
		lv_AllImplementedTypes_8_0=	'AllImplementedTypes' 
    {
        newLeafNode(lv_AllImplementedTypes_8_0, grammarAccess.getTypeFieldAccess().getAllImplementedTypesAllImplementedTypesKeyword_8_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeFieldRule());
	        }
       		setWithLastConsumed($current, "AllImplementedTypes", lv_AllImplementedTypes_8_0, "AllImplementedTypes");
	    }

)
)
    |(
(
		lv_AllExtendedTypes_9_0=	'AllExtendedTypes' 
    {
        newLeafNode(lv_AllExtendedTypes_9_0, grammarAccess.getTypeFieldAccess().getAllExtendedTypesAllExtendedTypesKeyword_9_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeFieldRule());
	        }
       		setWithLastConsumed($current, "AllExtendedTypes", lv_AllExtendedTypes_9_0, "AllExtendedTypes");
	    }

)
)
    |(
(
		lv_FieldType_10_0=	'FieldType' 
    {
        newLeafNode(lv_FieldType_10_0, grammarAccess.getTypeFieldAccess().getFieldTypeFieldTypeKeyword_10_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeFieldRule());
	        }
       		setWithLastConsumed($current, "FieldType", lv_FieldType_10_0, "FieldType");
	    }

)
)
    |(
(
		lv_CaughtType_11_0=	'CaughtType' 
    {
        newLeafNode(lv_CaughtType_11_0, grammarAccess.getTypeFieldAccess().getCaughtTypeCaughtTypeKeyword_11_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeFieldRule());
	        }
       		setWithLastConsumed($current, "CaughtType", lv_CaughtType_11_0, "CaughtType");
	    }

)
)
    |(
(
		lv_DeclaredFieldTypes_12_0=	'DeclaredFieldTypes' 
    {
        newLeafNode(lv_DeclaredFieldTypes_12_0, grammarAccess.getTypeFieldAccess().getDeclaredFieldTypesDeclaredFieldTypesKeyword_12_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeFieldRule());
	        }
       		setWithLastConsumed($current, "DeclaredFieldTypes", lv_DeclaredFieldTypes_12_0, "DeclaredFieldTypes");
	    }

)
)
    |(
(
		lv_DeclaringType_13_0=	'DeclaringType' 
    {
        newLeafNode(lv_DeclaringType_13_0, grammarAccess.getTypeFieldAccess().getDeclaringTypeDeclaringTypeKeyword_13_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTypeFieldRule());
	        }
       		setWithLastConsumed($current, "DeclaringType", lv_DeclaringType_13_0, "DeclaringType");
	    }

)
))
;





// Entry rule entryRuleMethodField
entryRuleMethodField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodFieldRule()); }
	 iv_ruleMethodField=ruleMethodField 
	 { $current=$iv_ruleMethodField.current; } 
	 EOF 
;

// Rule MethodField
ruleMethodField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_UsedMethods_0_0=	'UsedMethods' 
    {
        newLeafNode(lv_UsedMethods_0_0, grammarAccess.getMethodFieldAccess().getUsedMethodsUsedMethodsKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMethodFieldRule());
	        }
       		setWithLastConsumed($current, "UsedMethods", lv_UsedMethods_0_0, "UsedMethods");
	    }

)
)
    |(
(
		lv_UsedMethodsInTry_1_0=	'UsedMethodsInTry' 
    {
        newLeafNode(lv_UsedMethodsInTry_1_0, grammarAccess.getMethodFieldAccess().getUsedMethodsInTryUsedMethodsInTryKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMethodFieldRule());
	        }
       		setWithLastConsumed($current, "UsedMethodsInTry", lv_UsedMethodsInTry_1_0, "UsedMethodsInTry");
	    }

)
)
    |(
(
		lv_UsedMethodsInFinally_2_0=	'UsedMethodsInFinally' 
    {
        newLeafNode(lv_UsedMethodsInFinally_2_0, grammarAccess.getMethodFieldAccess().getUsedMethodsInFinallyUsedMethodsInFinallyKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMethodFieldRule());
	        }
       		setWithLastConsumed($current, "UsedMethodsInFinally", lv_UsedMethodsInFinally_2_0, "UsedMethodsInFinally");
	    }

)
)
    |(
(
		lv_OverriddenMethods_3_0=	'OverriddenMethods' 
    {
        newLeafNode(lv_OverriddenMethods_3_0, grammarAccess.getMethodFieldAccess().getOverriddenMethodsOverriddenMethodsKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMethodFieldRule());
	        }
       		setWithLastConsumed($current, "OverriddenMethods", lv_OverriddenMethods_3_0, "OverriddenMethods");
	    }

)
))
;





// Entry rule entryRuleFilePathField
entryRuleFilePathField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFilePathFieldRule()); }
	 iv_ruleFilePathField=ruleFilePathField 
	 { $current=$iv_ruleFilePathField.current; } 
	 EOF 
;

// Rule FilePathField
ruleFilePathField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_ResourcePath_0_0=	'ResourcePath' 
    {
        newLeafNode(lv_ResourcePath_0_0, grammarAccess.getFilePathFieldAccess().getResourcePathResourcePathKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFilePathFieldRule());
	        }
       		setWithLastConsumed($current, "ResourcePath", lv_ResourcePath_0_0, "ResourcePath");
	    }

)
)
;





// Entry rule entryRuleNumberField
entryRuleNumberField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberFieldRule()); }
	 iv_ruleNumberField=ruleNumberField 
	 { $current=$iv_ruleNumberField.current; } 
	 EOF 
;

// Rule NumberField
ruleNumberField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_ParameterCount_0_0=	'ParameterCount' 
    {
        newLeafNode(lv_ParameterCount_0_0, grammarAccess.getNumberFieldAccess().getParameterCountParameterCountKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getNumberFieldRule());
	        }
       		setWithLastConsumed($current, "ParameterCount", lv_ParameterCount_0_0, "ParameterCount");
	    }

)
)
;





// Entry rule entryRuleModifierField
entryRuleModifierField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getModifierFieldRule()); }
	 iv_ruleModifierField=ruleModifierField 
	 { $current=$iv_ruleModifierField.current; } 
	 EOF 
;

// Rule ModifierField
ruleModifierField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_Modifiers_0_0=	'Modifiers' 
    {
        newLeafNode(lv_Modifiers_0_0, grammarAccess.getModifierFieldAccess().getModifiersModifiersKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getModifierFieldRule());
	        }
       		setWithLastConsumed($current, "Modifiers", lv_Modifiers_0_0, "Modifiers");
	    }

)
)
;





// Entry rule entryRuleTimeField
entryRuleTimeField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimeFieldRule()); }
	 iv_ruleTimeField=ruleTimeField 
	 { $current=$iv_ruleTimeField.current; } 
	 EOF 
;

// Rule TimeField
ruleTimeField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_Timestamp_0_0=	'Timestamp' 
    {
        newLeafNode(lv_Timestamp_0_0, grammarAccess.getTimeFieldAccess().getTimestampTimestampKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getTimeFieldRule());
	        }
       		setWithLastConsumed($current, "Timestamp", lv_Timestamp_0_0, "Timestamp");
	    }

)
)
;





// Entry rule entryRuleDocumentTypeField
entryRuleDocumentTypeField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getDocumentTypeFieldRule()); }
	 iv_ruleDocumentTypeField=ruleDocumentTypeField 
	 { $current=$iv_ruleDocumentTypeField.current; } 
	 EOF 
;

// Rule DocumentTypeField
ruleDocumentTypeField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_Type_0_0=	'Type' 
    {
        newLeafNode(lv_Type_0_0, grammarAccess.getDocumentTypeFieldAccess().getTypeTypeKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getDocumentTypeFieldRule());
	        }
       		setWithLastConsumed($current, "Type", lv_Type_0_0, "Type");
	    }

)
)
;





// Entry rule entryRuleProjectNameField
entryRuleProjectNameField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getProjectNameFieldRule()); }
	 iv_ruleProjectNameField=ruleProjectNameField 
	 { $current=$iv_ruleProjectNameField.current; } 
	 EOF 
;

// Rule ProjectNameField
ruleProjectNameField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_ProjectName_0_0=	'ProjectName' 
    {
        newLeafNode(lv_ProjectName_0_0, grammarAccess.getProjectNameFieldAccess().getProjectNameProjectNameKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getProjectNameFieldRule());
	        }
       		setWithLastConsumed($current, "ProjectName", lv_ProjectName_0_0, "ProjectName");
	    }

)
)
;





// Entry rule entryRuleAnnotationField
entryRuleAnnotationField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationFieldRule()); }
	 iv_ruleAnnotationField=ruleAnnotationField 
	 { $current=$iv_ruleAnnotationField.current; } 
	 EOF 
;

// Rule AnnotationField
ruleAnnotationField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		lv_Annotations_0_0=	'Annotations' 
    {
        newLeafNode(lv_Annotations_0_0, grammarAccess.getAnnotationFieldAccess().getAnnotationsAnnotationsKeyword_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getAnnotationFieldRule());
	        }
       		setWithLastConsumed($current, "Annotations", lv_Annotations_0_0, "Annotations");
	    }

)
)
;





// Entry rule entryRuleSimpleField
entryRuleSimpleField returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleFieldRule()); }
	 iv_ruleSimpleField=ruleSimpleField 
	 { $current=$iv_ruleSimpleField.current; } 
	 EOF 
;

// Rule SimpleField
ruleSimpleField returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		lv_FullyQualifiedName_0_0=	'FullyQualifiedName' 
    {
        newLeafNode(lv_FullyQualifiedName_0_0, grammarAccess.getSimpleFieldAccess().getFullyQualifiedNameFullyQualifiedNameKeyword_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleFieldRule());
	        }
       		setWithLastConsumed($current, "FullyQualifiedName", lv_FullyQualifiedName_0_0, "FullyQualifiedName");
	    }

)
)
    |(
(
		lv_FriendlyName_1_0=	'FriendlyName' 
    {
        newLeafNode(lv_FriendlyName_1_0, grammarAccess.getSimpleFieldAccess().getFriendlyNameFriendlyNameKeyword_1_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleFieldRule());
	        }
       		setWithLastConsumed($current, "FriendlyName", lv_FriendlyName_1_0, "FriendlyName");
	    }

)
)
    |(
(
		lv_DeclaredMethods_2_0=	'DeclaredMethods' 
    {
        newLeafNode(lv_DeclaredMethods_2_0, grammarAccess.getSimpleFieldAccess().getDeclaredMethodsDeclaredMethodsKeyword_2_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleFieldRule());
	        }
       		setWithLastConsumed($current, "DeclaredMethods", lv_DeclaredMethods_2_0, "DeclaredMethods");
	    }

)
)
    |(
(
		lv_ReturnVariableEexpressions_3_0=	'ReturnVariableEexpressions' 
    {
        newLeafNode(lv_ReturnVariableEexpressions_3_0, grammarAccess.getSimpleFieldAccess().getReturnVariableEexpressionsReturnVariableEexpressionsKeyword_3_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleFieldRule());
	        }
       		setWithLastConsumed($current, "ReturnVariableEexpressions", lv_ReturnVariableEexpressions_3_0, "ReturnVariableEexpressions");
	    }

)
)
    |(
(
		lv_AllDeclaredMethodNames_4_0=	'AllDeclaredMethodNames' 
    {
        newLeafNode(lv_AllDeclaredMethodNames_4_0, grammarAccess.getSimpleFieldAccess().getAllDeclaredMethodNamesAllDeclaredMethodNamesKeyword_4_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleFieldRule());
	        }
       		setWithLastConsumed($current, "AllDeclaredMethodNames", lv_AllDeclaredMethodNames_4_0, "AllDeclaredMethodNames");
	    }

)
)
    |(
(
		lv_DeclaredMethodNames_5_0=	'DeclaredMethodNames' 
    {
        newLeafNode(lv_DeclaredMethodNames_5_0, grammarAccess.getSimpleFieldAccess().getDeclaredMethodNamesDeclaredMethodNamesKeyword_5_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleFieldRule());
	        }
       		setWithLastConsumed($current, "DeclaredMethodNames", lv_DeclaredMethodNames_5_0, "DeclaredMethodNames");
	    }

)
)
    |(
(
		lv_DeclaredFieldNames_6_0=	'DeclaredFieldNames' 
    {
        newLeafNode(lv_DeclaredFieldNames_6_0, grammarAccess.getSimpleFieldAccess().getDeclaredFieldNamesDeclaredFieldNamesKeyword_6_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleFieldRule());
	        }
       		setWithLastConsumed($current, "DeclaredFieldNames", lv_DeclaredFieldNames_6_0, "DeclaredFieldNames");
	    }

)
)
    |(
(
		lv_AllDeclaredFieldNames_7_0=	'AllDeclaredFieldNames' 
    {
        newLeafNode(lv_AllDeclaredFieldNames_7_0, grammarAccess.getSimpleFieldAccess().getAllDeclaredFieldNamesAllDeclaredFieldNamesKeyword_7_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleFieldRule());
	        }
       		setWithLastConsumed($current, "AllDeclaredFieldNames", lv_AllDeclaredFieldNames_7_0, "AllDeclaredFieldNames");
	    }

)
)
    |(
(
		lv_FullText_8_0=	'FullText' 
    {
        newLeafNode(lv_FullText_8_0, grammarAccess.getSimpleFieldAccess().getFullTextFullTextKeyword_8_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleFieldRule());
	        }
       		setWithLastConsumed($current, "FullText", lv_FullText_8_0, "FullText");
	    }

)
)
    |(
(
		lv_FieldsRead_9_0=	'FieldsRead' 
    {
        newLeafNode(lv_FieldsRead_9_0, grammarAccess.getSimpleFieldAccess().getFieldsReadFieldsReadKeyword_9_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleFieldRule());
	        }
       		setWithLastConsumed($current, "FieldsRead", lv_FieldsRead_9_0, "FieldsRead");
	    }

)
)
    |(
(
		lv_FieldsWritten_10_0=	'FieldsWritten' 
    {
        newLeafNode(lv_FieldsWritten_10_0, grammarAccess.getSimpleFieldAccess().getFieldsWrittenFieldsWrittenKeyword_10_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleFieldRule());
	        }
       		setWithLastConsumed($current, "FieldsWritten", lv_FieldsWritten_10_0, "FieldsWritten");
	    }

)
)
    |(
(
		lv_UsedFieldsInFinally_11_0=	'UsedFieldsInFinally' 
    {
        newLeafNode(lv_UsedFieldsInFinally_11_0, grammarAccess.getSimpleFieldAccess().getUsedFieldsInFinallyUsedFieldsInFinallyKeyword_11_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleFieldRule());
	        }
       		setWithLastConsumed($current, "UsedFieldsInFinally", lv_UsedFieldsInFinally_11_0, "UsedFieldsInFinally");
	    }

)
)
    |(
(
		lv_UsedFieldsInTry_12_0=	'UsedFieldsInTry' 
    {
        newLeafNode(lv_UsedFieldsInTry_12_0, grammarAccess.getSimpleFieldAccess().getUsedFieldsInTryUsedFieldsInTryKeyword_12_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSimpleFieldRule());
	        }
       		setWithLastConsumed($current, "UsedFieldsInTry", lv_UsedFieldsInTry_12_0, "UsedFieldsInTry");
	    }

)
))
;





// Entry rule entryRuleSimpleFieldValue
entryRuleSimpleFieldValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSimpleFieldValueRule()); } 
	 iv_ruleSimpleFieldValue=ruleSimpleFieldValue 
	 { $current=$iv_ruleSimpleFieldValue.current.getText(); }  
	 EOF 
;

// Rule SimpleFieldValue
ruleSimpleFieldValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_NameWithWC_0=RULE_NAMEWITHWC    {
		$current.merge(this_NameWithWC_0);
    }

    { 
    newLeafNode(this_NameWithWC_0, grammarAccess.getSimpleFieldValueAccess().getNameWithWCTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleMethodFieldValue
entryRuleMethodFieldValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodFieldValueRule()); } 
	 iv_ruleMethodFieldValue=ruleMethodFieldValue 
	 { $current=$iv_ruleMethodFieldValue.current.getText(); }  
	 EOF 
;

// Rule MethodFieldValue
ruleMethodFieldValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_NameWithWC_0=RULE_NAMEWITHWC    {
		$current.merge(this_NameWithWC_0);
    }

    { 
    newLeafNode(this_NameWithWC_0, grammarAccess.getMethodFieldValueAccess().getNameWithWCTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleProjectNameFieldValue
entryRuleProjectNameFieldValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getProjectNameFieldValueRule()); } 
	 iv_ruleProjectNameFieldValue=ruleProjectNameFieldValue 
	 { $current=$iv_ruleProjectNameFieldValue.current.getText(); }  
	 EOF 
;

// Rule ProjectNameFieldValue
ruleProjectNameFieldValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_NameWithWC_0=RULE_NAMEWITHWC    {
		$current.merge(this_NameWithWC_0);
    }

    { 
    newLeafNode(this_NameWithWC_0, grammarAccess.getProjectNameFieldValueAccess().getNameWithWCTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleNumberFieldValue
entryRuleNumberFieldValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getNumberFieldValueRule()); } 
	 iv_ruleNumberFieldValue=ruleNumberFieldValue 
	 { $current=$iv_ruleNumberFieldValue.current.getText(); }  
	 EOF 
;

// Rule NumberFieldValue
ruleNumberFieldValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_INT_0=RULE_INT    {
		$current.merge(this_INT_0);
    }

    { 
    newLeafNode(this_INT_0, grammarAccess.getNumberFieldValueAccess().getINTTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleModifierFieldValue
entryRuleModifierFieldValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getModifierFieldValueRule()); } 
	 iv_ruleModifierFieldValue=ruleModifierFieldValue 
	 { $current=$iv_ruleModifierFieldValue.current.getText(); }  
	 EOF 
;

// Rule ModifierFieldValue
ruleModifierFieldValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='private' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getModifierFieldValueAccess().getPrivateKeyword_0()); 
    }

    |
	kw='public' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getModifierFieldValueAccess().getPublicKeyword_1()); 
    }

    |
	kw='static' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getModifierFieldValueAccess().getStaticKeyword_2()); 
    }

    |
	kw='final' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getModifierFieldValueAccess().getFinalKeyword_3()); 
    }

    |
	kw='abstract' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getModifierFieldValueAccess().getAbstractKeyword_4()); 
    }

    |
	kw='protected' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getModifierFieldValueAccess().getProtectedKeyword_5()); 
    }
)
    ;





// Entry rule entryRuleTimeFieldValue
entryRuleTimeFieldValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTimeFieldValueRule()); } 
	 iv_ruleTimeFieldValue=ruleTimeFieldValue 
	 { $current=$iv_ruleTimeFieldValue.current.getText(); }  
	 EOF 
;

// Rule TimeFieldValue
ruleTimeFieldValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_NameWithWC_0=RULE_NAMEWITHWC    {
		$current.merge(this_NameWithWC_0);
    }

    { 
    newLeafNode(this_NameWithWC_0, grammarAccess.getTimeFieldValueAccess().getNameWithWCTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleDocumentTypeFieldValue
entryRuleDocumentTypeFieldValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDocumentTypeFieldValueRule()); } 
	 iv_ruleDocumentTypeFieldValue=ruleDocumentTypeFieldValue 
	 { $current=$iv_ruleDocumentTypeFieldValue.current.getText(); }  
	 EOF 
;

// Rule DocumentTypeFieldValue
ruleDocumentTypeFieldValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='class' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDocumentTypeFieldValueAccess().getClassKeyword_0()); 
    }

    |
	kw='method' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDocumentTypeFieldValueAccess().getMethodKeyword_1()); 
    }

    |
	kw='field' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDocumentTypeFieldValueAccess().getFieldKeyword_2()); 
    }

    |
	kw='trycatch' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getDocumentTypeFieldValueAccess().getTrycatchKeyword_3()); 
    }
)
    ;





// Entry rule entryRuleAnnotationFieldValue
entryRuleAnnotationFieldValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationFieldValueRule()); } 
	 iv_ruleAnnotationFieldValue=ruleAnnotationFieldValue 
	 { $current=$iv_ruleAnnotationFieldValue.current.getText(); }  
	 EOF 
;

// Rule AnnotationFieldValue
ruleAnnotationFieldValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_NameWithWC_0=RULE_NAMEWITHWC    {
		$current.merge(this_NameWithWC_0);
    }

    { 
    newLeafNode(this_NameWithWC_0, grammarAccess.getAnnotationFieldValueAccess().getNameWithWCTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleTypeFieldValue
entryRuleTypeFieldValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getTypeFieldValueRule()); } 
	 iv_ruleTypeFieldValue=ruleTypeFieldValue 
	 { $current=$iv_ruleTypeFieldValue.current.getText(); }  
	 EOF 
;

// Rule TypeFieldValue
ruleTypeFieldValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_NameWithWC_0=RULE_NAMEWITHWC    {
		$current.merge(this_NameWithWC_0);
    }

    { 
    newLeafNode(this_NameWithWC_0, grammarAccess.getTypeFieldValueAccess().getNameWithWCTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleFilePathFieldValue
entryRuleFilePathFieldValue returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getFilePathFieldValueRule()); } 
	 iv_ruleFilePathFieldValue=ruleFilePathFieldValue 
	 { $current=$iv_ruleFilePathFieldValue.current.getText(); }  
	 EOF 
;

// Rule FilePathFieldValue
ruleFilePathFieldValue returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_PathWithWC_0=RULE_PATHWITHWC    {
		$current.merge(this_PathWithWC_0);
    }

    { 
    newLeafNode(this_PathWithWC_0, grammarAccess.getFilePathFieldValueAccess().getPathWithWCTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleUnaryExpression
entryRuleUnaryExpression returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getUnaryExpressionRule()); } 
	 iv_ruleUnaryExpression=ruleUnaryExpression 
	 { $current=$iv_ruleUnaryExpression.current.getText(); }  
	 EOF 
;

// Rule UnaryExpression
ruleUnaryExpression returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	kw='-' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getUnaryExpressionAccess().getHyphenMinusKeyword_0()); 
    }

    |
	kw='NOT' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getUnaryExpressionAccess().getNOTKeyword_1()); 
    }

    |
	kw='!' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getUnaryExpressionAccess().getExclamationMarkKeyword_2()); 
    }

    |
	kw='+' 
    {
        $current.merge(kw);
        newLeafNode(kw, grammarAccess.getUnaryExpressionAccess().getPlusSignKeyword_3()); 
    }
)
    ;





// Rule BinaryExp
ruleBinaryExp returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='AND' 
	{
        $current = grammarAccess.getBinaryExpAccess().getAnd1EnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getBinaryExpAccess().getAnd1EnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='OR' 
	{
        $current = grammarAccess.getBinaryExpAccess().getOr1EnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getBinaryExpAccess().getOr1EnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='||' 
	{
        $current = grammarAccess.getBinaryExpAccess().getOr2EnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getBinaryExpAccess().getOr2EnumLiteralDeclaration_2()); 
    }
));



RULE_NAMEWITHWC : ('a'..'z'|'A'..'Z'|'_'|'*'|'?'|'<'|'>'|'['|']') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'*'|'?'|'<'|'>'|'['|']'|'.')*;

RULE_PATHWITHWC : ('A'..'Z' ':'|('a'..'z'|'A'..'Z'|'_'|'/')) ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'*'|'?'|'.'|'/')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


