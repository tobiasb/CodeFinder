/*
* generated by Xtext
*/
package org.eclipselabs.recommenders.codesearchquery.rcp.dsl.ui.contentassist;

import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.RuleCall;
import org.eclipse.xtext.ui.editor.contentassist.ContentAssistContext;
import org.eclipse.xtext.ui.editor.contentassist.ICompletionProposalAcceptor;

/**
 * see http://www.eclipse.org/Xtext/documentation/latest/xtext.html#contentAssist on how to customize content assistant
 */
public class LuceneQueryProposalProvider extends AbstractLuceneQueryProposalProvider {
	
	private static IQueryProposalProvider provider;
	
	public LuceneQueryProposalProvider() {
		
	}
	
	public static void setQueryProposalProvider(IQueryProposalProvider provider) {
		LuceneQueryProposalProvider.provider = provider;
	}
	
	@Override
	public void complete_TypeValue(EObject model, RuleCall ruleCall,
			ContentAssistContext context, ICompletionProposalAcceptor acceptor) {
		System.out.println("context: " + context.getSelectedText() + " " + context.getPrefix());

		try {
			for(String type : provider.getProposals(QueryProposalType.TYPE)) {
				acceptor.accept(createCompletionProposal(provider.convert(type), context));
			}
		} catch(Exception ex) {
			ex.printStackTrace();
		}
	}
}
