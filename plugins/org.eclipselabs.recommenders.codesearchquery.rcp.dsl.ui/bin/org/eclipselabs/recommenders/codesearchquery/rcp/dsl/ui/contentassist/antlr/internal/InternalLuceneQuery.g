/*
* generated by Xtext
*/
grammar InternalLuceneQuery;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclipselabs.recommenders.codesearchquery.rcp.dsl.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipselabs.recommenders.codesearchquery.rcp.dsl.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipselabs.recommenders.codesearchquery.rcp.dsl.services.LuceneQueryGrammarAccess;

}

@parser::members {
 
 	private LuceneQueryGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(LuceneQueryGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleExp1
entryRuleExp1 
:
{ before(grammarAccess.getExp1Rule()); }
	 ruleExp1
{ after(grammarAccess.getExp1Rule()); } 
	 EOF 
;

// Rule Exp1
ruleExp1
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExp1Access().getGroup()); }
(rule__Exp1__Group__0)
{ after(grammarAccess.getExp1Access().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExp2
entryRuleExp2 
:
{ before(grammarAccess.getExp2Rule()); }
	 ruleExp2
{ after(grammarAccess.getExp2Rule()); } 
	 EOF 
;

// Rule Exp2
ruleExp2
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExp2Access().getAlternatives()); }
(rule__Exp2__Alternatives)
{ after(grammarAccess.getExp2Access().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleClauseExpression
entryRuleClauseExpression 
:
{ before(grammarAccess.getClauseExpressionRule()); }
	 ruleClauseExpression
{ after(grammarAccess.getClauseExpressionRule()); } 
	 EOF 
;

// Rule ClauseExpression
ruleClauseExpression
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getClauseExpressionAccess().getGroup()); }
(rule__ClauseExpression__Group__0)
{ after(grammarAccess.getClauseExpressionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleClause
entryRuleSimpleClause 
:
{ before(grammarAccess.getSimpleClauseRule()); }
	 ruleSimpleClause
{ after(grammarAccess.getSimpleClauseRule()); } 
	 EOF 
;

// Rule SimpleClause
ruleSimpleClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleClauseAccess().getGroup()); }
(rule__SimpleClause__Group__0)
{ after(grammarAccess.getSimpleClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeClause
entryRuleTypeClause 
:
{ before(grammarAccess.getTypeClauseRule()); }
	 ruleTypeClause
{ after(grammarAccess.getTypeClauseRule()); } 
	 EOF 
;

// Rule TypeClause
ruleTypeClause
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeClauseAccess().getGroup()); }
(rule__TypeClause__Group__0)
{ after(grammarAccess.getTypeClauseAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldValue
entryRuleFieldValue 
:
{ before(grammarAccess.getFieldValueRule()); }
	 ruleFieldValue
{ after(grammarAccess.getFieldValueRule()); } 
	 EOF 
;

// Rule FieldValue
ruleFieldValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldValueAccess().getValueParserRuleCall()); }
	ruleValue
{ after(grammarAccess.getFieldValueAccess().getValueParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeValue
entryRuleTypeValue 
:
{ before(grammarAccess.getTypeValueRule()); }
	 ruleTypeValue
{ after(grammarAccess.getTypeValueRule()); } 
	 EOF 
;

// Rule TypeValue
ruleTypeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeValueAccess().getQualifiedNameWithWildcardParserRuleCall()); }
	ruleQualifiedNameWithWildcard
{ after(grammarAccess.getTypeValueAccess().getQualifiedNameWithWildcardParserRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getGroup()); }
(rule__Value__Group__0)
{ after(grammarAccess.getValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard 
@init {
	HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_ML_COMMENT");
}
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;
finally {
	myHiddenTokenState.restore();
}

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard
    @init {
		HiddenTokens myHiddenTokenState = ((XtextTokenStream)input).setHiddenTokens("RULE_SL_COMMENT", "RULE_ML_COMMENT");
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
(rule__QualifiedNameWithWildcard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
	myHiddenTokenState.restore();
}



// Entry rule entryRuleSep
entryRuleSep 
:
{ before(grammarAccess.getSepRule()); }
	 ruleSep
{ after(grammarAccess.getSepRule()); } 
	 EOF 
;

// Rule Sep
ruleSep
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSepAccess().getAlternatives()); }
(rule__Sep__Alternatives)
{ after(grammarAccess.getSepAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleWildcard
entryRuleWildcard 
:
{ before(grammarAccess.getWildcardRule()); }
	 ruleWildcard
{ after(grammarAccess.getWildcardRule()); } 
	 EOF 
;

// Rule Wildcard
ruleWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getWildcardAccess().getAlternatives()); }
(rule__Wildcard__Alternatives)
{ after(grammarAccess.getWildcardAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFieldName
entryRuleFieldName 
:
{ before(grammarAccess.getFieldNameRule()); }
	 ruleFieldName
{ after(grammarAccess.getFieldNameRule()); } 
	 EOF 
;

// Rule FieldName
ruleFieldName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFieldNameAccess().getAlternatives()); }
(rule__FieldName__Alternatives)
{ after(grammarAccess.getFieldNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeFieldName
entryRuleTypeFieldName 
:
{ before(grammarAccess.getTypeFieldNameRule()); }
	 ruleTypeFieldName
{ after(grammarAccess.getTypeFieldNameRule()); } 
	 EOF 
;

// Rule TypeFieldName
ruleTypeFieldName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeFieldNameAccess().getAlternatives()); }
(rule__TypeFieldName__Alternatives)
{ after(grammarAccess.getTypeFieldNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




// Rule BooleanExp
ruleBooleanExp
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpAccess().getAlternatives()); }
(rule__BooleanExp__Alternatives)
{ after(grammarAccess.getBooleanExpAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule NotExpression
ruleNotExpression
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getAlternatives()); }
(rule__NotExpression__Alternatives)
{ after(grammarAccess.getNotExpressionAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Rule MustExpression
ruleMustExpression
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMustExpressionAccess().getMEnumLiteralDeclaration()); }
(	'+' 
)
{ after(grammarAccess.getMustExpressionAccess().getMEnumLiteralDeclaration()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Exp2__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExp2Access().getValueAssignment_0()); }
(rule__Exp2__ValueAssignment_0)
{ after(grammarAccess.getExp2Access().getValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getExp2Access().getGroup_1()); }
(rule__Exp2__Group_1__0)
{ after(grammarAccess.getExp2Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClauseExpression__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseExpressionAccess().getNAssignment_0_0()); }
(rule__ClauseExpression__NAssignment_0_0)
{ after(grammarAccess.getClauseExpressionAccess().getNAssignment_0_0()); }
)

    |(
{ before(grammarAccess.getClauseExpressionAccess().getMAssignment_0_1()); }
(rule__ClauseExpression__MAssignment_0_1)
{ after(grammarAccess.getClauseExpressionAccess().getMAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClauseExpression__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseExpressionAccess().getClauseAssignment_1_0()); }
(rule__ClauseExpression__ClauseAssignment_1_0)
{ after(grammarAccess.getClauseExpressionAccess().getClauseAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getClauseExpressionAccess().getClauseAssignment_1_1()); }
(rule__ClauseExpression__ClauseAssignment_1_1)
{ after(grammarAccess.getClauseExpressionAccess().getClauseAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Sep__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSepAccess().getSolidusKeyword_0()); }

	'/' 

{ after(grammarAccess.getSepAccess().getSolidusKeyword_0()); }
)

    |(
{ before(grammarAccess.getSepAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getSepAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Wildcard__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getWildcardAccess().getAsteriskKeyword_0()); }

	'*' 

{ after(grammarAccess.getWildcardAccess().getAsteriskKeyword_0()); }
)

    |(
{ before(grammarAccess.getWildcardAccess().getQuestionMarkKeyword_1()); }

	'?' 

{ after(grammarAccess.getWildcardAccess().getQuestionMarkKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getFullyQualifiedNameAssignment_0()); }
(rule__FieldName__FullyQualifiedNameAssignment_0)
{ after(grammarAccess.getFieldNameAccess().getFullyQualifiedNameAssignment_0()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getTypeAssignment_1()); }
(rule__FieldName__TypeAssignment_1)
{ after(grammarAccess.getFieldNameAccess().getTypeAssignment_1()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getFriendlyNameAssignment_2()); }
(rule__FieldName__FriendlyNameAssignment_2)
{ after(grammarAccess.getFieldNameAccess().getFriendlyNameAssignment_2()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getDeclaredMethodsAssignment_3()); }
(rule__FieldName__DeclaredMethodsAssignment_3)
{ after(grammarAccess.getFieldNameAccess().getDeclaredMethodsAssignment_3()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getParameterCountAssignment_4()); }
(rule__FieldName__ParameterCountAssignment_4)
{ after(grammarAccess.getFieldNameAccess().getParameterCountAssignment_4()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getReturnVariableEexpressionsAssignment_5()); }
(rule__FieldName__ReturnVariableEexpressionsAssignment_5)
{ after(grammarAccess.getFieldNameAccess().getReturnVariableEexpressionsAssignment_5()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getUsedMethodsAssignment_6()); }
(rule__FieldName__UsedMethodsAssignment_6)
{ after(grammarAccess.getFieldNameAccess().getUsedMethodsAssignment_6()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getUsedMethodsInTryAssignment_7()); }
(rule__FieldName__UsedMethodsInTryAssignment_7)
{ after(grammarAccess.getFieldNameAccess().getUsedMethodsInTryAssignment_7()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getUsedMethodsInFinallyAssignment_8()); }
(rule__FieldName__UsedMethodsInFinallyAssignment_8)
{ after(grammarAccess.getFieldNameAccess().getUsedMethodsInFinallyAssignment_8()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getOverriddenMethodsAssignment_9()); }
(rule__FieldName__OverriddenMethodsAssignment_9)
{ after(grammarAccess.getFieldNameAccess().getOverriddenMethodsAssignment_9()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getProjectNameAssignment_10()); }
(rule__FieldName__ProjectNameAssignment_10)
{ after(grammarAccess.getFieldNameAccess().getProjectNameAssignment_10()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getResourcePathAssignment_11()); }
(rule__FieldName__ResourcePathAssignment_11)
{ after(grammarAccess.getFieldNameAccess().getResourcePathAssignment_11()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getModifiersAssignment_12()); }
(rule__FieldName__ModifiersAssignment_12)
{ after(grammarAccess.getFieldNameAccess().getModifiersAssignment_12()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getAllDeclaredMethodNamesAssignment_13()); }
(rule__FieldName__AllDeclaredMethodNamesAssignment_13)
{ after(grammarAccess.getFieldNameAccess().getAllDeclaredMethodNamesAssignment_13()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getDeclaredMethodNamesAssignment_14()); }
(rule__FieldName__DeclaredMethodNamesAssignment_14)
{ after(grammarAccess.getFieldNameAccess().getDeclaredMethodNamesAssignment_14()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getDeclaredFieldNamesAssignment_15()); }
(rule__FieldName__DeclaredFieldNamesAssignment_15)
{ after(grammarAccess.getFieldNameAccess().getDeclaredFieldNamesAssignment_15()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getDeclaredFieldTypesAssignment_16()); }
(rule__FieldName__DeclaredFieldTypesAssignment_16)
{ after(grammarAccess.getFieldNameAccess().getDeclaredFieldTypesAssignment_16()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getAllDeclaredFieldNamesAssignment_17()); }
(rule__FieldName__AllDeclaredFieldNamesAssignment_17)
{ after(grammarAccess.getFieldNameAccess().getAllDeclaredFieldNamesAssignment_17()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getFullTextAssignment_18()); }
(rule__FieldName__FullTextAssignment_18)
{ after(grammarAccess.getFieldNameAccess().getFullTextAssignment_18()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getFieldsReadAssignment_19()); }
(rule__FieldName__FieldsReadAssignment_19)
{ after(grammarAccess.getFieldNameAccess().getFieldsReadAssignment_19()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getFieldsWrittenAssignment_20()); }
(rule__FieldName__FieldsWrittenAssignment_20)
{ after(grammarAccess.getFieldNameAccess().getFieldsWrittenAssignment_20()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getUsedFieldsInFinallyAssignment_21()); }
(rule__FieldName__UsedFieldsInFinallyAssignment_21)
{ after(grammarAccess.getFieldNameAccess().getUsedFieldsInFinallyAssignment_21()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getUsedFieldsInTryAssignment_22()); }
(rule__FieldName__UsedFieldsInTryAssignment_22)
{ after(grammarAccess.getFieldNameAccess().getUsedFieldsInTryAssignment_22()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getAnnotationsAssignment_23()); }
(rule__FieldName__AnnotationsAssignment_23)
{ after(grammarAccess.getFieldNameAccess().getAnnotationsAssignment_23()); }
)

    |(
{ before(grammarAccess.getFieldNameAccess().getTimestampAssignment_24()); }
(rule__FieldName__TimestampAssignment_24)
{ after(grammarAccess.getFieldNameAccess().getTimestampAssignment_24()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFieldName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeFieldNameAccess().getImplementedTypesAssignment_0()); }
(rule__TypeFieldName__ImplementedTypesAssignment_0)
{ after(grammarAccess.getTypeFieldNameAccess().getImplementedTypesAssignment_0()); }
)

    |(
{ before(grammarAccess.getTypeFieldNameAccess().getExtendedTypesAssignment_1()); }
(rule__TypeFieldName__ExtendedTypesAssignment_1)
{ after(grammarAccess.getTypeFieldNameAccess().getExtendedTypesAssignment_1()); }
)

    |(
{ before(grammarAccess.getTypeFieldNameAccess().getUsedTypesAssignment_2()); }
(rule__TypeFieldName__UsedTypesAssignment_2)
{ after(grammarAccess.getTypeFieldNameAccess().getUsedTypesAssignment_2()); }
)

    |(
{ before(grammarAccess.getTypeFieldNameAccess().getUsedTypesInTryAssignment_3()); }
(rule__TypeFieldName__UsedTypesInTryAssignment_3)
{ after(grammarAccess.getTypeFieldNameAccess().getUsedTypesInTryAssignment_3()); }
)

    |(
{ before(grammarAccess.getTypeFieldNameAccess().getUsedTypesInFinallyAssignment_4()); }
(rule__TypeFieldName__UsedTypesInFinallyAssignment_4)
{ after(grammarAccess.getTypeFieldNameAccess().getUsedTypesInFinallyAssignment_4()); }
)

    |(
{ before(grammarAccess.getTypeFieldNameAccess().getParameterTypesAssignment_5()); }
(rule__TypeFieldName__ParameterTypesAssignment_5)
{ after(grammarAccess.getTypeFieldNameAccess().getParameterTypesAssignment_5()); }
)

    |(
{ before(grammarAccess.getTypeFieldNameAccess().getReturnTypeAssignment_6()); }
(rule__TypeFieldName__ReturnTypeAssignment_6)
{ after(grammarAccess.getTypeFieldNameAccess().getReturnTypeAssignment_6()); }
)

    |(
{ before(grammarAccess.getTypeFieldNameAccess().getAllImplementedTypesAssignment_7()); }
(rule__TypeFieldName__AllImplementedTypesAssignment_7)
{ after(grammarAccess.getTypeFieldNameAccess().getAllImplementedTypesAssignment_7()); }
)

    |(
{ before(grammarAccess.getTypeFieldNameAccess().getAllExtendedTypesAssignment_8()); }
(rule__TypeFieldName__AllExtendedTypesAssignment_8)
{ after(grammarAccess.getTypeFieldNameAccess().getAllExtendedTypesAssignment_8()); }
)

    |(
{ before(grammarAccess.getTypeFieldNameAccess().getFieldTypeAssignment_9()); }
(rule__TypeFieldName__FieldTypeAssignment_9)
{ after(grammarAccess.getTypeFieldNameAccess().getFieldTypeAssignment_9()); }
)

    |(
{ before(grammarAccess.getTypeFieldNameAccess().getDeclaringTypeAssignment_10()); }
(rule__TypeFieldName__DeclaringTypeAssignment_10)
{ after(grammarAccess.getTypeFieldNameAccess().getDeclaringTypeAssignment_10()); }
)

    |(
{ before(grammarAccess.getTypeFieldNameAccess().getCaughtTypeAssignment_11()); }
(rule__TypeFieldName__CaughtTypeAssignment_11)
{ after(grammarAccess.getTypeFieldNameAccess().getCaughtTypeAssignment_11()); }
)

    |(
{ before(grammarAccess.getTypeFieldNameAccess().getInstanceofTypesAssignment_12()); }
(rule__TypeFieldName__InstanceofTypesAssignment_12)
{ after(grammarAccess.getTypeFieldNameAccess().getInstanceofTypesAssignment_12()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanExp__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanExpAccess().getAnd1EnumLiteralDeclaration_0()); }
(	'AND' 
)
{ after(grammarAccess.getBooleanExpAccess().getAnd1EnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getBooleanExpAccess().getOr1EnumLiteralDeclaration_1()); }
(	'OR' 
)
{ after(grammarAccess.getBooleanExpAccess().getOr1EnumLiteralDeclaration_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NotExpression__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNotExpressionAccess().getN1EnumLiteralDeclaration_0()); }
(	'-' 
)
{ after(grammarAccess.getNotExpressionAccess().getN1EnumLiteralDeclaration_0()); }
)

    |(
{ before(grammarAccess.getNotExpressionAccess().getN2EnumLiteralDeclaration_1()); }
(	'NOT' 
)
{ after(grammarAccess.getNotExpressionAccess().getN2EnumLiteralDeclaration_1()); }
)

    |(
{ before(grammarAccess.getNotExpressionAccess().getN3EnumLiteralDeclaration_2()); }
(	'!' 
)
{ after(grammarAccess.getNotExpressionAccess().getN3EnumLiteralDeclaration_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Exp1__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exp1__Group__0__Impl
	rule__Exp1__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp1__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExp1Access().getExp2ParserRuleCall_0()); }
	ruleExp2
{ after(grammarAccess.getExp1Access().getExp2ParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exp1__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exp1__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp1__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExp1Access().getGroup_1()); }
(rule__Exp1__Group_1__0)*
{ after(grammarAccess.getExp1Access().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Exp1__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exp1__Group_1__0__Impl
	rule__Exp1__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp1__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExp1Access().getExp1LeftAction_1_0()); }
(

)
{ after(grammarAccess.getExp1Access().getExp1LeftAction_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exp1__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exp1__Group_1__1__Impl
	rule__Exp1__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp1__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExp1Access().getBAssignment_1_1()); }
(rule__Exp1__BAssignment_1_1)
{ after(grammarAccess.getExp1Access().getBAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exp1__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exp1__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp1__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExp1Access().getRightAssignment_1_2()); }
(rule__Exp1__RightAssignment_1_2)
{ after(grammarAccess.getExp1Access().getRightAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Exp2__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exp2__Group_1__0__Impl
	rule__Exp2__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp2__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExp2Access().getLeftParenthesisKeyword_1_0()); }

	'(' 

{ after(grammarAccess.getExp2Access().getLeftParenthesisKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exp2__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exp2__Group_1__1__Impl
	rule__Exp2__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp2__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExp2Access().getExp1ParserRuleCall_1_1()); }
	ruleExp1
{ after(grammarAccess.getExp2Access().getExp1ParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Exp2__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Exp2__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Exp2__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExp2Access().getRightParenthesisKeyword_1_2()); }

	')' 

{ after(grammarAccess.getExp2Access().getRightParenthesisKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ClauseExpression__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClauseExpression__Group__0__Impl
	rule__ClauseExpression__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ClauseExpression__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseExpressionAccess().getAlternatives_0()); }
(rule__ClauseExpression__Alternatives_0)?
{ after(grammarAccess.getClauseExpressionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ClauseExpression__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ClauseExpression__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ClauseExpression__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseExpressionAccess().getAlternatives_1()); }
(rule__ClauseExpression__Alternatives_1)
{ after(grammarAccess.getClauseExpressionAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SimpleClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleClause__Group__0__Impl
	rule__SimpleClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleClauseAccess().getFieldAssignment_0()); }
(rule__SimpleClause__FieldAssignment_0)
{ after(grammarAccess.getSimpleClauseAccess().getFieldAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleClause__Group__1__Impl
	rule__SimpleClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleClauseAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getSimpleClauseAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SimpleClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SimpleClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleClauseAccess().getValueAssignment_2()); }
(rule__SimpleClause__ValueAssignment_2)
{ after(grammarAccess.getSimpleClauseAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__TypeClause__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeClause__Group__0__Impl
	rule__TypeClause__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeClause__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeClauseAccess().getFieldAssignment_0()); }
(rule__TypeClause__FieldAssignment_0)
{ after(grammarAccess.getTypeClauseAccess().getFieldAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeClause__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeClause__Group__1__Impl
	rule__TypeClause__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeClause__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeClauseAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getTypeClauseAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeClause__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeClause__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeClause__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeClauseAccess().getValueAssignment_2()); }
(rule__TypeClause__ValueAssignment_2)
{ after(grammarAccess.getTypeClauseAccess().getValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Value__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group__0__Impl
	rule__Value__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getWildcardParserRuleCall_0()); }
(	ruleWildcard)?
{ after(grammarAccess.getValueAccess().getWildcardParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getGroup_1()); }
(rule__Value__Group_1__0)?
{ after(grammarAccess.getValueAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Value__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_1__0__Impl
	rule__Value__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getIDTerminalRuleCall_1_0()); }
	RULE_ID
{ after(grammarAccess.getValueAccess().getIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_1__1__Impl
	rule__Value__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getGroup_1_1()); }
(rule__Value__Group_1_1__0)*
{ after(grammarAccess.getValueAccess().getGroup_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getWildcardParserRuleCall_1_2()); }
(	ruleWildcard)?
{ after(grammarAccess.getValueAccess().getWildcardParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Value__Group_1_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_1_1__0__Impl
	rule__Value__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_1_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getWildcardParserRuleCall_1_1_0()); }
	ruleWildcard
{ after(grammarAccess.getValueAccess().getWildcardParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Value__Group_1_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Value__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Group_1_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getIDTerminalRuleCall_1_1_1()); }
	RULE_ID
{ after(grammarAccess.getValueAccess().getIDTerminalRuleCall_1_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedNameWithWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getValueParserRuleCall_0()); }
	ruleValue
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getValueParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
	rule__QualifiedNameWithWildcard__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup_1()); }
(rule__QualifiedNameWithWildcard__Group_1__0)*
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getWildcardParserRuleCall_2()); }
(	ruleWildcard)?
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getWildcardParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedNameWithWildcard__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group_1__0__Impl
	rule__QualifiedNameWithWildcard__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getWildcardParserRuleCall_1_0()); }
(	ruleWildcard)?
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getWildcardParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group_1__1__Impl
	rule__QualifiedNameWithWildcard__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getSepParserRuleCall_1_1()); }
	ruleSep
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getSepParserRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group_1__2__Impl
	rule__QualifiedNameWithWildcard__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getWildcardParserRuleCall_1_2()); }
(	ruleWildcard)?
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getWildcardParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getValueParserRuleCall_1_3()); }
	ruleValue
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getValueParserRuleCall_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}











rule__Exp1__BAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExp1Access().getBBooleanExpEnumRuleCall_1_1_0()); }
	ruleBooleanExp{ after(grammarAccess.getExp1Access().getBBooleanExpEnumRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exp1__RightAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExp1Access().getRightExp2ParserRuleCall_1_2_0()); }
	ruleExp2{ after(grammarAccess.getExp1Access().getRightExp2ParserRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Exp2__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExp2Access().getValueClauseExpressionParserRuleCall_0_0()); }
	ruleClauseExpression{ after(grammarAccess.getExp2Access().getValueClauseExpressionParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClauseExpression__NAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseExpressionAccess().getNNotExpressionEnumRuleCall_0_0_0()); }
	ruleNotExpression{ after(grammarAccess.getClauseExpressionAccess().getNNotExpressionEnumRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClauseExpression__MAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseExpressionAccess().getMMustExpressionEnumRuleCall_0_1_0()); }
	ruleMustExpression{ after(grammarAccess.getClauseExpressionAccess().getMMustExpressionEnumRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClauseExpression__ClauseAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseExpressionAccess().getClauseSimpleClauseParserRuleCall_1_0_0()); }
	ruleSimpleClause{ after(grammarAccess.getClauseExpressionAccess().getClauseSimpleClauseParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ClauseExpression__ClauseAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getClauseExpressionAccess().getClauseTypeClauseParserRuleCall_1_1_0()); }
	ruleTypeClause{ after(grammarAccess.getClauseExpressionAccess().getClauseTypeClauseParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleClause__FieldAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleClauseAccess().getFieldFieldNameParserRuleCall_0_0()); }
	ruleFieldName{ after(grammarAccess.getSimpleClauseAccess().getFieldFieldNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SimpleClause__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimpleClauseAccess().getValueFieldValueParserRuleCall_2_0()); }
	ruleFieldValue{ after(grammarAccess.getSimpleClauseAccess().getValueFieldValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeClause__FieldAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeClauseAccess().getFieldTypeFieldNameParserRuleCall_0_0()); }
	ruleTypeFieldName{ after(grammarAccess.getTypeClauseAccess().getFieldTypeFieldNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeClause__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeClauseAccess().getValueTypeValueParserRuleCall_2_0()); }
	ruleTypeValue{ after(grammarAccess.getTypeClauseAccess().getValueTypeValueParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__FullyQualifiedNameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getFullyQualifiedNameFullyQualifiedNameKeyword_0_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getFullyQualifiedNameFullyQualifiedNameKeyword_0_0()); }

	'FullyQualifiedName' 

{ after(grammarAccess.getFieldNameAccess().getFullyQualifiedNameFullyQualifiedNameKeyword_0_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getFullyQualifiedNameFullyQualifiedNameKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getTypeTypeKeyword_1_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getTypeTypeKeyword_1_0()); }

	'Type' 

{ after(grammarAccess.getFieldNameAccess().getTypeTypeKeyword_1_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getTypeTypeKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__FriendlyNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getFriendlyNameFriendlyNameKeyword_2_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getFriendlyNameFriendlyNameKeyword_2_0()); }

	'FriendlyName' 

{ after(grammarAccess.getFieldNameAccess().getFriendlyNameFriendlyNameKeyword_2_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getFriendlyNameFriendlyNameKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__DeclaredMethodsAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getDeclaredMethodsDeclaredMethodsKeyword_3_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getDeclaredMethodsDeclaredMethodsKeyword_3_0()); }

	'DeclaredMethods' 

{ after(grammarAccess.getFieldNameAccess().getDeclaredMethodsDeclaredMethodsKeyword_3_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getDeclaredMethodsDeclaredMethodsKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__ParameterCountAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getParameterCountParameterCountKeyword_4_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getParameterCountParameterCountKeyword_4_0()); }

	'ParameterCount' 

{ after(grammarAccess.getFieldNameAccess().getParameterCountParameterCountKeyword_4_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getParameterCountParameterCountKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__ReturnVariableEexpressionsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getReturnVariableEexpressionsReturnVariableEexpressionsKeyword_5_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getReturnVariableEexpressionsReturnVariableEexpressionsKeyword_5_0()); }

	'ReturnVariableEexpressions' 

{ after(grammarAccess.getFieldNameAccess().getReturnVariableEexpressionsReturnVariableEexpressionsKeyword_5_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getReturnVariableEexpressionsReturnVariableEexpressionsKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__UsedMethodsAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getUsedMethodsUsedMethodsKeyword_6_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getUsedMethodsUsedMethodsKeyword_6_0()); }

	'UsedMethods' 

{ after(grammarAccess.getFieldNameAccess().getUsedMethodsUsedMethodsKeyword_6_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getUsedMethodsUsedMethodsKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__UsedMethodsInTryAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getUsedMethodsInTryUsedMethodsInTryKeyword_7_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getUsedMethodsInTryUsedMethodsInTryKeyword_7_0()); }

	'UsedMethodsInTry' 

{ after(grammarAccess.getFieldNameAccess().getUsedMethodsInTryUsedMethodsInTryKeyword_7_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getUsedMethodsInTryUsedMethodsInTryKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__UsedMethodsInFinallyAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getUsedMethodsInFinallyUsedMethodsInFinallyKeyword_8_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getUsedMethodsInFinallyUsedMethodsInFinallyKeyword_8_0()); }

	'UsedMethodsInFinally' 

{ after(grammarAccess.getFieldNameAccess().getUsedMethodsInFinallyUsedMethodsInFinallyKeyword_8_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getUsedMethodsInFinallyUsedMethodsInFinallyKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__OverriddenMethodsAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getOverriddenMethodsOverriddenMethodsKeyword_9_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getOverriddenMethodsOverriddenMethodsKeyword_9_0()); }

	'OverriddenMethods' 

{ after(grammarAccess.getFieldNameAccess().getOverriddenMethodsOverriddenMethodsKeyword_9_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getOverriddenMethodsOverriddenMethodsKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__ProjectNameAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getProjectNameProjectNameKeyword_10_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getProjectNameProjectNameKeyword_10_0()); }

	'ProjectName' 

{ after(grammarAccess.getFieldNameAccess().getProjectNameProjectNameKeyword_10_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getProjectNameProjectNameKeyword_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__ResourcePathAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getResourcePathResourcePathKeyword_11_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getResourcePathResourcePathKeyword_11_0()); }

	'ResourcePath' 

{ after(grammarAccess.getFieldNameAccess().getResourcePathResourcePathKeyword_11_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getResourcePathResourcePathKeyword_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__ModifiersAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getModifiersModifiersKeyword_12_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getModifiersModifiersKeyword_12_0()); }

	'Modifiers' 

{ after(grammarAccess.getFieldNameAccess().getModifiersModifiersKeyword_12_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getModifiersModifiersKeyword_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__AllDeclaredMethodNamesAssignment_13
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getAllDeclaredMethodNamesAllDeclaredMethodNamesKeyword_13_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getAllDeclaredMethodNamesAllDeclaredMethodNamesKeyword_13_0()); }

	'AllDeclaredMethodNames' 

{ after(grammarAccess.getFieldNameAccess().getAllDeclaredMethodNamesAllDeclaredMethodNamesKeyword_13_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getAllDeclaredMethodNamesAllDeclaredMethodNamesKeyword_13_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__DeclaredMethodNamesAssignment_14
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getDeclaredMethodNamesDeclaredMethodNamesKeyword_14_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getDeclaredMethodNamesDeclaredMethodNamesKeyword_14_0()); }

	'DeclaredMethodNames' 

{ after(grammarAccess.getFieldNameAccess().getDeclaredMethodNamesDeclaredMethodNamesKeyword_14_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getDeclaredMethodNamesDeclaredMethodNamesKeyword_14_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__DeclaredFieldNamesAssignment_15
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getDeclaredFieldNamesDeclaredFieldNamesKeyword_15_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getDeclaredFieldNamesDeclaredFieldNamesKeyword_15_0()); }

	'DeclaredFieldNames' 

{ after(grammarAccess.getFieldNameAccess().getDeclaredFieldNamesDeclaredFieldNamesKeyword_15_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getDeclaredFieldNamesDeclaredFieldNamesKeyword_15_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__DeclaredFieldTypesAssignment_16
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getDeclaredFieldTypesDeclaredFieldTypesKeyword_16_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getDeclaredFieldTypesDeclaredFieldTypesKeyword_16_0()); }

	'DeclaredFieldTypes' 

{ after(grammarAccess.getFieldNameAccess().getDeclaredFieldTypesDeclaredFieldTypesKeyword_16_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getDeclaredFieldTypesDeclaredFieldTypesKeyword_16_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__AllDeclaredFieldNamesAssignment_17
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getAllDeclaredFieldNamesAllDeclaredFieldNamesKeyword_17_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getAllDeclaredFieldNamesAllDeclaredFieldNamesKeyword_17_0()); }

	'AllDeclaredFieldNames' 

{ after(grammarAccess.getFieldNameAccess().getAllDeclaredFieldNamesAllDeclaredFieldNamesKeyword_17_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getAllDeclaredFieldNamesAllDeclaredFieldNamesKeyword_17_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__FullTextAssignment_18
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getFullTextFullTextKeyword_18_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getFullTextFullTextKeyword_18_0()); }

	'FullText' 

{ after(grammarAccess.getFieldNameAccess().getFullTextFullTextKeyword_18_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getFullTextFullTextKeyword_18_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__FieldsReadAssignment_19
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getFieldsReadFieldsReadKeyword_19_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getFieldsReadFieldsReadKeyword_19_0()); }

	'FieldsRead' 

{ after(grammarAccess.getFieldNameAccess().getFieldsReadFieldsReadKeyword_19_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getFieldsReadFieldsReadKeyword_19_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__FieldsWrittenAssignment_20
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getFieldsWrittenFieldsWrittenKeyword_20_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getFieldsWrittenFieldsWrittenKeyword_20_0()); }

	'FieldsWritten' 

{ after(grammarAccess.getFieldNameAccess().getFieldsWrittenFieldsWrittenKeyword_20_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getFieldsWrittenFieldsWrittenKeyword_20_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__UsedFieldsInFinallyAssignment_21
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getUsedFieldsInFinallyUsedFieldsInFinallyKeyword_21_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getUsedFieldsInFinallyUsedFieldsInFinallyKeyword_21_0()); }

	'UsedFieldsInFinally' 

{ after(grammarAccess.getFieldNameAccess().getUsedFieldsInFinallyUsedFieldsInFinallyKeyword_21_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getUsedFieldsInFinallyUsedFieldsInFinallyKeyword_21_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__UsedFieldsInTryAssignment_22
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getUsedFieldsInTryUsedFieldsInTryKeyword_22_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getUsedFieldsInTryUsedFieldsInTryKeyword_22_0()); }

	'UsedFieldsInTry' 

{ after(grammarAccess.getFieldNameAccess().getUsedFieldsInTryUsedFieldsInTryKeyword_22_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getUsedFieldsInTryUsedFieldsInTryKeyword_22_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__AnnotationsAssignment_23
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getAnnotationsAnnotationsKeyword_23_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getAnnotationsAnnotationsKeyword_23_0()); }

	'Annotations' 

{ after(grammarAccess.getFieldNameAccess().getAnnotationsAnnotationsKeyword_23_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getAnnotationsAnnotationsKeyword_23_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FieldName__TimestampAssignment_24
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFieldNameAccess().getTimestampTimestampKeyword_24_0()); }
(
{ before(grammarAccess.getFieldNameAccess().getTimestampTimestampKeyword_24_0()); }

	'Timestamp' 

{ after(grammarAccess.getFieldNameAccess().getTimestampTimestampKeyword_24_0()); }
)

{ after(grammarAccess.getFieldNameAccess().getTimestampTimestampKeyword_24_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFieldName__ImplementedTypesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeFieldNameAccess().getImplementedTypesImplementedTypesKeyword_0_0()); }
(
{ before(grammarAccess.getTypeFieldNameAccess().getImplementedTypesImplementedTypesKeyword_0_0()); }

	'ImplementedTypes' 

{ after(grammarAccess.getTypeFieldNameAccess().getImplementedTypesImplementedTypesKeyword_0_0()); }
)

{ after(grammarAccess.getTypeFieldNameAccess().getImplementedTypesImplementedTypesKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFieldName__ExtendedTypesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeFieldNameAccess().getExtendedTypesExtendedTypesKeyword_1_0()); }
(
{ before(grammarAccess.getTypeFieldNameAccess().getExtendedTypesExtendedTypesKeyword_1_0()); }

	'ExtendedTypes' 

{ after(grammarAccess.getTypeFieldNameAccess().getExtendedTypesExtendedTypesKeyword_1_0()); }
)

{ after(grammarAccess.getTypeFieldNameAccess().getExtendedTypesExtendedTypesKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFieldName__UsedTypesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeFieldNameAccess().getUsedTypesUsedTypesKeyword_2_0()); }
(
{ before(grammarAccess.getTypeFieldNameAccess().getUsedTypesUsedTypesKeyword_2_0()); }

	'UsedTypes' 

{ after(grammarAccess.getTypeFieldNameAccess().getUsedTypesUsedTypesKeyword_2_0()); }
)

{ after(grammarAccess.getTypeFieldNameAccess().getUsedTypesUsedTypesKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFieldName__UsedTypesInTryAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeFieldNameAccess().getUsedTypesInTryUsedTypesInTryKeyword_3_0()); }
(
{ before(grammarAccess.getTypeFieldNameAccess().getUsedTypesInTryUsedTypesInTryKeyword_3_0()); }

	'UsedTypesInTry' 

{ after(grammarAccess.getTypeFieldNameAccess().getUsedTypesInTryUsedTypesInTryKeyword_3_0()); }
)

{ after(grammarAccess.getTypeFieldNameAccess().getUsedTypesInTryUsedTypesInTryKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFieldName__UsedTypesInFinallyAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeFieldNameAccess().getUsedTypesInFinallyUsedTypesInFinallyKeyword_4_0()); }
(
{ before(grammarAccess.getTypeFieldNameAccess().getUsedTypesInFinallyUsedTypesInFinallyKeyword_4_0()); }

	'UsedTypesInFinally' 

{ after(grammarAccess.getTypeFieldNameAccess().getUsedTypesInFinallyUsedTypesInFinallyKeyword_4_0()); }
)

{ after(grammarAccess.getTypeFieldNameAccess().getUsedTypesInFinallyUsedTypesInFinallyKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFieldName__ParameterTypesAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeFieldNameAccess().getParameterTypesParameterTypesKeyword_5_0()); }
(
{ before(grammarAccess.getTypeFieldNameAccess().getParameterTypesParameterTypesKeyword_5_0()); }

	'ParameterTypes' 

{ after(grammarAccess.getTypeFieldNameAccess().getParameterTypesParameterTypesKeyword_5_0()); }
)

{ after(grammarAccess.getTypeFieldNameAccess().getParameterTypesParameterTypesKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFieldName__ReturnTypeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeFieldNameAccess().getReturnTypeReturnTypeKeyword_6_0()); }
(
{ before(grammarAccess.getTypeFieldNameAccess().getReturnTypeReturnTypeKeyword_6_0()); }

	'ReturnType' 

{ after(grammarAccess.getTypeFieldNameAccess().getReturnTypeReturnTypeKeyword_6_0()); }
)

{ after(grammarAccess.getTypeFieldNameAccess().getReturnTypeReturnTypeKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFieldName__AllImplementedTypesAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeFieldNameAccess().getAllImplementedTypesAllImplementedTypesKeyword_7_0()); }
(
{ before(grammarAccess.getTypeFieldNameAccess().getAllImplementedTypesAllImplementedTypesKeyword_7_0()); }

	'AllImplementedTypes' 

{ after(grammarAccess.getTypeFieldNameAccess().getAllImplementedTypesAllImplementedTypesKeyword_7_0()); }
)

{ after(grammarAccess.getTypeFieldNameAccess().getAllImplementedTypesAllImplementedTypesKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFieldName__AllExtendedTypesAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeFieldNameAccess().getAllExtendedTypesAllExtendedTypesKeyword_8_0()); }
(
{ before(grammarAccess.getTypeFieldNameAccess().getAllExtendedTypesAllExtendedTypesKeyword_8_0()); }

	'AllExtendedTypes' 

{ after(grammarAccess.getTypeFieldNameAccess().getAllExtendedTypesAllExtendedTypesKeyword_8_0()); }
)

{ after(grammarAccess.getTypeFieldNameAccess().getAllExtendedTypesAllExtendedTypesKeyword_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFieldName__FieldTypeAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeFieldNameAccess().getFieldTypeFieldTypeKeyword_9_0()); }
(
{ before(grammarAccess.getTypeFieldNameAccess().getFieldTypeFieldTypeKeyword_9_0()); }

	'FieldType' 

{ after(grammarAccess.getTypeFieldNameAccess().getFieldTypeFieldTypeKeyword_9_0()); }
)

{ after(grammarAccess.getTypeFieldNameAccess().getFieldTypeFieldTypeKeyword_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFieldName__DeclaringTypeAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeFieldNameAccess().getDeclaringTypeDeclaringTypeKeyword_10_0()); }
(
{ before(grammarAccess.getTypeFieldNameAccess().getDeclaringTypeDeclaringTypeKeyword_10_0()); }

	'DeclaringType' 

{ after(grammarAccess.getTypeFieldNameAccess().getDeclaringTypeDeclaringTypeKeyword_10_0()); }
)

{ after(grammarAccess.getTypeFieldNameAccess().getDeclaringTypeDeclaringTypeKeyword_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFieldName__CaughtTypeAssignment_11
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeFieldNameAccess().getCaughtTypeCaughtTypeKeyword_11_0()); }
(
{ before(grammarAccess.getTypeFieldNameAccess().getCaughtTypeCaughtTypeKeyword_11_0()); }

	'CaughtType' 

{ after(grammarAccess.getTypeFieldNameAccess().getCaughtTypeCaughtTypeKeyword_11_0()); }
)

{ after(grammarAccess.getTypeFieldNameAccess().getCaughtTypeCaughtTypeKeyword_11_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFieldName__InstanceofTypesAssignment_12
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeFieldNameAccess().getInstanceofTypesInstanceofTypesKeyword_12_0()); }
(
{ before(grammarAccess.getTypeFieldNameAccess().getInstanceofTypesInstanceofTypesKeyword_12_0()); }

	'InstanceofTypes' 

{ after(grammarAccess.getTypeFieldNameAccess().getInstanceofTypesInstanceofTypesKeyword_12_0()); }
)

{ after(grammarAccess.getTypeFieldNameAccess().getInstanceofTypesInstanceofTypesKeyword_12_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


