/*
* generated by Xtext
*/

package org.eclipselabs.recommenders.codesearch.rcp.dsl.services;

import com.google.inject.Singleton;
import com.google.inject.Inject;

import org.eclipse.xtext.*;
import org.eclipse.xtext.service.GrammarProvider;
import org.eclipse.xtext.service.AbstractElementFinder.*;

import org.eclipse.xtext.common.services.TerminalsGrammarAccess;

@Singleton
public class LuceneQueryGrammarAccess extends AbstractGrammarElementFinder {
	
	
	public class OrExpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "OrExp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cAndExpParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cOrExpLeftAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cOrAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cOrBinaryOrEnumRuleCall_1_1_0 = (RuleCall)cOrAssignment_1_1.eContents().get(0);
		private final Assignment cRightAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cRightOrExpParserRuleCall_1_2_0 = (RuleCall)cRightAssignment_1_2.eContents().get(0);
		
		/// * * 
		//
		// *   Query  ::= ( Clause )*
		//
		// *   Clause ::= ["+", "-"] [<TERM> ":"] ( <TERM> | "(" Query ")" )
		//
		// * * / // Right associativity. Why? See http://blog.efftinge.de/2010/08/parsing-expressions-with-xtext.html
		//
		//OrExp returns Expression:
		//	AndExp ({OrExp.left=current} or=BinaryOr? right=OrExp)?;
		public ParserRule getRule() { return rule; }

		//AndExp ({OrExp.left=current} or=BinaryOr? right=OrExp)?
		public Group getGroup() { return cGroup; }

		//AndExp
		public RuleCall getAndExpParserRuleCall_0() { return cAndExpParserRuleCall_0; }

		//({OrExp.left=current} or=BinaryOr? right=OrExp)?
		public Group getGroup_1() { return cGroup_1; }

		//{OrExp.left=current}
		public Action getOrExpLeftAction_1_0() { return cOrExpLeftAction_1_0; }

		//or=BinaryOr?
		public Assignment getOrAssignment_1_1() { return cOrAssignment_1_1; }

		//BinaryOr
		public RuleCall getOrBinaryOrEnumRuleCall_1_1_0() { return cOrBinaryOrEnumRuleCall_1_1_0; }

		//right=OrExp
		public Assignment getRightAssignment_1_2() { return cRightAssignment_1_2; }

		//OrExp
		public RuleCall getRightOrExpParserRuleCall_1_2_0() { return cRightOrExpParserRuleCall_1_2_0; }
	}

	public class AndExpElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AndExp");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cPrimaryParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Group cGroup_1 = (Group)cGroup.eContents().get(1);
		private final Action cAndExpLeftAction_1_0 = (Action)cGroup_1.eContents().get(0);
		private final Assignment cAndAssignment_1_1 = (Assignment)cGroup_1.eContents().get(1);
		private final RuleCall cAndBinaryAndEnumRuleCall_1_1_0 = (RuleCall)cAndAssignment_1_1.eContents().get(0);
		private final Assignment cRightAssignment_1_2 = (Assignment)cGroup_1.eContents().get(2);
		private final RuleCall cRightAndExpParserRuleCall_1_2_0 = (RuleCall)cRightAssignment_1_2.eContents().get(0);
		
		//// Right associativity. Why? See http://blog.efftinge.de/2010/08/parsing-expressions-with-xtext.html
		//
		//AndExp returns Expression:
		//	Primary ({AndExp.left=current} and=BinaryAnd right=AndExp)?;
		public ParserRule getRule() { return rule; }

		//Primary ({AndExp.left=current} and=BinaryAnd right=AndExp)?
		public Group getGroup() { return cGroup; }

		//Primary
		public RuleCall getPrimaryParserRuleCall_0() { return cPrimaryParserRuleCall_0; }

		//({AndExp.left=current} and=BinaryAnd right=AndExp)?
		public Group getGroup_1() { return cGroup_1; }

		//{AndExp.left=current}
		public Action getAndExpLeftAction_1_0() { return cAndExpLeftAction_1_0; }

		//and=BinaryAnd
		public Assignment getAndAssignment_1_1() { return cAndAssignment_1_1; }

		//BinaryAnd
		public RuleCall getAndBinaryAndEnumRuleCall_1_1_0() { return cAndBinaryAndEnumRuleCall_1_1_0; }

		//right=AndExp
		public Assignment getRightAssignment_1_2() { return cRightAssignment_1_2; }

		//AndExp
		public RuleCall getRightAndExpParserRuleCall_1_2_0() { return cRightAndExpParserRuleCall_1_2_0; }
	}

	public class PrimaryElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "Primary");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final RuleCall cValueClauseExpressionParserRuleCall_0_0 = (RuleCall)cValueAssignment_0.eContents().get(0);
		private final Group cGroup_1 = (Group)cAlternatives.eContents().get(1);
		private final RuleCall cUnaryExpressionParserRuleCall_1_0 = (RuleCall)cGroup_1.eContents().get(0);
		private final Keyword cLeftParenthesisKeyword_1_1 = (Keyword)cGroup_1.eContents().get(1);
		private final RuleCall cOrExpParserRuleCall_1_2 = (RuleCall)cGroup_1.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_1_3 = (Keyword)cGroup_1.eContents().get(3);
		private final RuleCall cBoostTerminalRuleCall_1_4 = (RuleCall)cGroup_1.eContents().get(4);
		
		//Primary returns Expression:
		//	value=ClauseExpression | UnaryExpression? "(" OrExp ")" Boost?;
		public ParserRule getRule() { return rule; }

		//value=ClauseExpression | UnaryExpression? "(" OrExp ")" Boost?
		public Alternatives getAlternatives() { return cAlternatives; }

		//value=ClauseExpression
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }

		//ClauseExpression
		public RuleCall getValueClauseExpressionParserRuleCall_0_0() { return cValueClauseExpressionParserRuleCall_0_0; }

		//UnaryExpression? "(" OrExp ")" Boost?
		public Group getGroup_1() { return cGroup_1; }

		//UnaryExpression?
		public RuleCall getUnaryExpressionParserRuleCall_1_0() { return cUnaryExpressionParserRuleCall_1_0; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1() { return cLeftParenthesisKeyword_1_1; }

		//OrExp
		public RuleCall getOrExpParserRuleCall_1_2() { return cOrExpParserRuleCall_1_2; }

		//")"
		public Keyword getRightParenthesisKeyword_1_3() { return cRightParenthesisKeyword_1_3; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_4() { return cBoostTerminalRuleCall_1_4; }
	}

	public class ClauseExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ClauseExpression");
		private final Group cGroup = (Group)rule.eContents().get(1);
		private final RuleCall cUnaryExpressionParserRuleCall_0 = (RuleCall)cGroup.eContents().get(0);
		private final Alternatives cAlternatives_1 = (Alternatives)cGroup.eContents().get(1);
		private final Group cGroup_1_0 = (Group)cAlternatives_1.eContents().get(0);
		private final Assignment cDefaultAssignment_1_0_0 = (Assignment)cGroup_1_0.eContents().get(0);
		private final RuleCall cDefaultSimpleFieldValueParserRuleCall_1_0_0_0 = (RuleCall)cDefaultAssignment_1_0_0.eContents().get(0);
		private final RuleCall cBoostTerminalRuleCall_1_0_1 = (RuleCall)cGroup_1_0.eContents().get(1);
		private final Alternatives cAlternatives_1_1 = (Alternatives)cAlternatives_1.eContents().get(1);
		private final Group cGroup_1_1_0 = (Group)cAlternatives_1_1.eContents().get(0);
		private final Assignment cFieldAssignment_1_1_0_0 = (Assignment)cGroup_1_1_0.eContents().get(0);
		private final RuleCall cFieldSimpleFieldParserRuleCall_1_1_0_0_0 = (RuleCall)cFieldAssignment_1_1_0_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1_0_1 = (Keyword)cGroup_1_1_0.eContents().get(1);
		private final Alternatives cAlternatives_1_1_0_2 = (Alternatives)cGroup_1_1_0.eContents().get(2);
		private final Assignment cValuesAssignment_1_1_0_2_0 = (Assignment)cAlternatives_1_1_0_2.eContents().get(0);
		private final RuleCall cValuesSimpleFieldValueParserRuleCall_1_1_0_2_0_0 = (RuleCall)cValuesAssignment_1_1_0_2_0.eContents().get(0);
		private final Group cGroup_1_1_0_2_1 = (Group)cAlternatives_1_1_0_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_1_0_2_1_0 = (Keyword)cGroup_1_1_0_2_1.eContents().get(0);
		private final Group cGroup_1_1_0_2_1_1 = (Group)cGroup_1_1_0_2_1.eContents().get(1);
		private final RuleCall cUnaryExpressionParserRuleCall_1_1_0_2_1_1_0 = (RuleCall)cGroup_1_1_0_2_1_1.eContents().get(0);
		private final Assignment cValuesAssignment_1_1_0_2_1_1_1 = (Assignment)cGroup_1_1_0_2_1_1.eContents().get(1);
		private final RuleCall cValuesSimpleFieldValueParserRuleCall_1_1_0_2_1_1_1_0 = (RuleCall)cValuesAssignment_1_1_0_2_1_1_1.eContents().get(0);
		private final RuleCall cBoostTerminalRuleCall_1_1_0_2_1_1_2 = (RuleCall)cGroup_1_1_0_2_1_1.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_1_1_0_2_1_2 = (Keyword)cGroup_1_1_0_2_1.eContents().get(2);
		private final RuleCall cBoostTerminalRuleCall_1_1_0_3 = (RuleCall)cGroup_1_1_0.eContents().get(3);
		private final Group cGroup_1_1_1 = (Group)cAlternatives_1_1.eContents().get(1);
		private final Assignment cFieldAssignment_1_1_1_0 = (Assignment)cGroup_1_1_1.eContents().get(0);
		private final RuleCall cFieldTypeFieldParserRuleCall_1_1_1_0_0 = (RuleCall)cFieldAssignment_1_1_1_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1_1_1 = (Keyword)cGroup_1_1_1.eContents().get(1);
		private final Alternatives cAlternatives_1_1_1_2 = (Alternatives)cGroup_1_1_1.eContents().get(2);
		private final Assignment cValuesAssignment_1_1_1_2_0 = (Assignment)cAlternatives_1_1_1_2.eContents().get(0);
		private final RuleCall cValuesTypeFieldValueParserRuleCall_1_1_1_2_0_0 = (RuleCall)cValuesAssignment_1_1_1_2_0.eContents().get(0);
		private final Group cGroup_1_1_1_2_1 = (Group)cAlternatives_1_1_1_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_1_1_2_1_0 = (Keyword)cGroup_1_1_1_2_1.eContents().get(0);
		private final Group cGroup_1_1_1_2_1_1 = (Group)cGroup_1_1_1_2_1.eContents().get(1);
		private final RuleCall cUnaryExpressionParserRuleCall_1_1_1_2_1_1_0 = (RuleCall)cGroup_1_1_1_2_1_1.eContents().get(0);
		private final Assignment cValuesAssignment_1_1_1_2_1_1_1 = (Assignment)cGroup_1_1_1_2_1_1.eContents().get(1);
		private final RuleCall cValuesTypeFieldValueParserRuleCall_1_1_1_2_1_1_1_0 = (RuleCall)cValuesAssignment_1_1_1_2_1_1_1.eContents().get(0);
		private final RuleCall cBoostTerminalRuleCall_1_1_1_2_1_1_2 = (RuleCall)cGroup_1_1_1_2_1_1.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_1_1_1_2_1_2 = (Keyword)cGroup_1_1_1_2_1.eContents().get(2);
		private final RuleCall cBoostTerminalRuleCall_1_1_1_3 = (RuleCall)cGroup_1_1_1.eContents().get(3);
		private final Group cGroup_1_1_2 = (Group)cAlternatives_1_1.eContents().get(2);
		private final Assignment cFieldAssignment_1_1_2_0 = (Assignment)cGroup_1_1_2.eContents().get(0);
		private final RuleCall cFieldMethodFieldParserRuleCall_1_1_2_0_0 = (RuleCall)cFieldAssignment_1_1_2_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1_2_1 = (Keyword)cGroup_1_1_2.eContents().get(1);
		private final Alternatives cAlternatives_1_1_2_2 = (Alternatives)cGroup_1_1_2.eContents().get(2);
		private final Assignment cValuesAssignment_1_1_2_2_0 = (Assignment)cAlternatives_1_1_2_2.eContents().get(0);
		private final RuleCall cValuesMethodFieldValueParserRuleCall_1_1_2_2_0_0 = (RuleCall)cValuesAssignment_1_1_2_2_0.eContents().get(0);
		private final Group cGroup_1_1_2_2_1 = (Group)cAlternatives_1_1_2_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_1_2_2_1_0 = (Keyword)cGroup_1_1_2_2_1.eContents().get(0);
		private final Group cGroup_1_1_2_2_1_1 = (Group)cGroup_1_1_2_2_1.eContents().get(1);
		private final RuleCall cUnaryExpressionParserRuleCall_1_1_2_2_1_1_0 = (RuleCall)cGroup_1_1_2_2_1_1.eContents().get(0);
		private final Assignment cValuesAssignment_1_1_2_2_1_1_1 = (Assignment)cGroup_1_1_2_2_1_1.eContents().get(1);
		private final RuleCall cValuesMethodFieldValueParserRuleCall_1_1_2_2_1_1_1_0 = (RuleCall)cValuesAssignment_1_1_2_2_1_1_1.eContents().get(0);
		private final RuleCall cBoostTerminalRuleCall_1_1_2_2_1_1_2 = (RuleCall)cGroup_1_1_2_2_1_1.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_1_1_2_2_1_2 = (Keyword)cGroup_1_1_2_2_1.eContents().get(2);
		private final RuleCall cBoostTerminalRuleCall_1_1_2_3 = (RuleCall)cGroup_1_1_2.eContents().get(3);
		private final Group cGroup_1_1_3 = (Group)cAlternatives_1_1.eContents().get(3);
		private final Assignment cFieldAssignment_1_1_3_0 = (Assignment)cGroup_1_1_3.eContents().get(0);
		private final RuleCall cFieldFilePathFieldParserRuleCall_1_1_3_0_0 = (RuleCall)cFieldAssignment_1_1_3_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1_3_1 = (Keyword)cGroup_1_1_3.eContents().get(1);
		private final Alternatives cAlternatives_1_1_3_2 = (Alternatives)cGroup_1_1_3.eContents().get(2);
		private final Assignment cValuesAssignment_1_1_3_2_0 = (Assignment)cAlternatives_1_1_3_2.eContents().get(0);
		private final RuleCall cValuesFilePathFieldValueParserRuleCall_1_1_3_2_0_0 = (RuleCall)cValuesAssignment_1_1_3_2_0.eContents().get(0);
		private final Group cGroup_1_1_3_2_1 = (Group)cAlternatives_1_1_3_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_1_3_2_1_0 = (Keyword)cGroup_1_1_3_2_1.eContents().get(0);
		private final Group cGroup_1_1_3_2_1_1 = (Group)cGroup_1_1_3_2_1.eContents().get(1);
		private final RuleCall cUnaryExpressionParserRuleCall_1_1_3_2_1_1_0 = (RuleCall)cGroup_1_1_3_2_1_1.eContents().get(0);
		private final Assignment cValuesAssignment_1_1_3_2_1_1_1 = (Assignment)cGroup_1_1_3_2_1_1.eContents().get(1);
		private final RuleCall cValuesFilePathFieldValueParserRuleCall_1_1_3_2_1_1_1_0 = (RuleCall)cValuesAssignment_1_1_3_2_1_1_1.eContents().get(0);
		private final RuleCall cBoostTerminalRuleCall_1_1_3_2_1_1_2 = (RuleCall)cGroup_1_1_3_2_1_1.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_1_1_3_2_1_2 = (Keyword)cGroup_1_1_3_2_1.eContents().get(2);
		private final RuleCall cBoostTerminalRuleCall_1_1_3_3 = (RuleCall)cGroup_1_1_3.eContents().get(3);
		private final Group cGroup_1_1_4 = (Group)cAlternatives_1_1.eContents().get(4);
		private final Assignment cFieldAssignment_1_1_4_0 = (Assignment)cGroup_1_1_4.eContents().get(0);
		private final RuleCall cFieldNumberFieldParserRuleCall_1_1_4_0_0 = (RuleCall)cFieldAssignment_1_1_4_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1_4_1 = (Keyword)cGroup_1_1_4.eContents().get(1);
		private final Alternatives cAlternatives_1_1_4_2 = (Alternatives)cGroup_1_1_4.eContents().get(2);
		private final Assignment cValuesAssignment_1_1_4_2_0 = (Assignment)cAlternatives_1_1_4_2.eContents().get(0);
		private final RuleCall cValuesNumberFieldValueParserRuleCall_1_1_4_2_0_0 = (RuleCall)cValuesAssignment_1_1_4_2_0.eContents().get(0);
		private final Group cGroup_1_1_4_2_1 = (Group)cAlternatives_1_1_4_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_1_4_2_1_0 = (Keyword)cGroup_1_1_4_2_1.eContents().get(0);
		private final Group cGroup_1_1_4_2_1_1 = (Group)cGroup_1_1_4_2_1.eContents().get(1);
		private final RuleCall cUnaryExpressionParserRuleCall_1_1_4_2_1_1_0 = (RuleCall)cGroup_1_1_4_2_1_1.eContents().get(0);
		private final Assignment cValuesAssignment_1_1_4_2_1_1_1 = (Assignment)cGroup_1_1_4_2_1_1.eContents().get(1);
		private final RuleCall cValuesNumberFieldValueParserRuleCall_1_1_4_2_1_1_1_0 = (RuleCall)cValuesAssignment_1_1_4_2_1_1_1.eContents().get(0);
		private final RuleCall cBoostTerminalRuleCall_1_1_4_2_1_1_2 = (RuleCall)cGroup_1_1_4_2_1_1.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_1_1_4_2_1_2 = (Keyword)cGroup_1_1_4_2_1.eContents().get(2);
		private final RuleCall cBoostTerminalRuleCall_1_1_4_3 = (RuleCall)cGroup_1_1_4.eContents().get(3);
		private final Group cGroup_1_1_5 = (Group)cAlternatives_1_1.eContents().get(5);
		private final Assignment cFieldAssignment_1_1_5_0 = (Assignment)cGroup_1_1_5.eContents().get(0);
		private final RuleCall cFieldModifierFieldParserRuleCall_1_1_5_0_0 = (RuleCall)cFieldAssignment_1_1_5_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1_5_1 = (Keyword)cGroup_1_1_5.eContents().get(1);
		private final Alternatives cAlternatives_1_1_5_2 = (Alternatives)cGroup_1_1_5.eContents().get(2);
		private final Assignment cValuesAssignment_1_1_5_2_0 = (Assignment)cAlternatives_1_1_5_2.eContents().get(0);
		private final RuleCall cValuesModifierFieldValueParserRuleCall_1_1_5_2_0_0 = (RuleCall)cValuesAssignment_1_1_5_2_0.eContents().get(0);
		private final Group cGroup_1_1_5_2_1 = (Group)cAlternatives_1_1_5_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_1_5_2_1_0 = (Keyword)cGroup_1_1_5_2_1.eContents().get(0);
		private final Group cGroup_1_1_5_2_1_1 = (Group)cGroup_1_1_5_2_1.eContents().get(1);
		private final RuleCall cUnaryExpressionParserRuleCall_1_1_5_2_1_1_0 = (RuleCall)cGroup_1_1_5_2_1_1.eContents().get(0);
		private final Assignment cValuesAssignment_1_1_5_2_1_1_1 = (Assignment)cGroup_1_1_5_2_1_1.eContents().get(1);
		private final RuleCall cValuesModifierFieldValueParserRuleCall_1_1_5_2_1_1_1_0 = (RuleCall)cValuesAssignment_1_1_5_2_1_1_1.eContents().get(0);
		private final RuleCall cBoostTerminalRuleCall_1_1_5_2_1_1_2 = (RuleCall)cGroup_1_1_5_2_1_1.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_1_1_5_2_1_2 = (Keyword)cGroup_1_1_5_2_1.eContents().get(2);
		private final RuleCall cBoostTerminalRuleCall_1_1_5_3 = (RuleCall)cGroup_1_1_5.eContents().get(3);
		private final Group cGroup_1_1_6 = (Group)cAlternatives_1_1.eContents().get(6);
		private final Assignment cFieldAssignment_1_1_6_0 = (Assignment)cGroup_1_1_6.eContents().get(0);
		private final RuleCall cFieldTimeFieldParserRuleCall_1_1_6_0_0 = (RuleCall)cFieldAssignment_1_1_6_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1_6_1 = (Keyword)cGroup_1_1_6.eContents().get(1);
		private final Alternatives cAlternatives_1_1_6_2 = (Alternatives)cGroup_1_1_6.eContents().get(2);
		private final Assignment cValuesAssignment_1_1_6_2_0 = (Assignment)cAlternatives_1_1_6_2.eContents().get(0);
		private final RuleCall cValuesTimeFieldValueParserRuleCall_1_1_6_2_0_0 = (RuleCall)cValuesAssignment_1_1_6_2_0.eContents().get(0);
		private final Group cGroup_1_1_6_2_1 = (Group)cAlternatives_1_1_6_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_1_6_2_1_0 = (Keyword)cGroup_1_1_6_2_1.eContents().get(0);
		private final Group cGroup_1_1_6_2_1_1 = (Group)cGroup_1_1_6_2_1.eContents().get(1);
		private final RuleCall cUnaryExpressionParserRuleCall_1_1_6_2_1_1_0 = (RuleCall)cGroup_1_1_6_2_1_1.eContents().get(0);
		private final Assignment cValuesAssignment_1_1_6_2_1_1_1 = (Assignment)cGroup_1_1_6_2_1_1.eContents().get(1);
		private final RuleCall cValuesTimeFieldValueParserRuleCall_1_1_6_2_1_1_1_0 = (RuleCall)cValuesAssignment_1_1_6_2_1_1_1.eContents().get(0);
		private final RuleCall cBoostTerminalRuleCall_1_1_6_2_1_1_2 = (RuleCall)cGroup_1_1_6_2_1_1.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_1_1_6_2_1_2 = (Keyword)cGroup_1_1_6_2_1.eContents().get(2);
		private final RuleCall cBoostTerminalRuleCall_1_1_6_3 = (RuleCall)cGroup_1_1_6.eContents().get(3);
		private final Group cGroup_1_1_7 = (Group)cAlternatives_1_1.eContents().get(7);
		private final Assignment cFieldAssignment_1_1_7_0 = (Assignment)cGroup_1_1_7.eContents().get(0);
		private final RuleCall cFieldDocumentTypeFieldParserRuleCall_1_1_7_0_0 = (RuleCall)cFieldAssignment_1_1_7_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1_7_1 = (Keyword)cGroup_1_1_7.eContents().get(1);
		private final Alternatives cAlternatives_1_1_7_2 = (Alternatives)cGroup_1_1_7.eContents().get(2);
		private final Assignment cValuesAssignment_1_1_7_2_0 = (Assignment)cAlternatives_1_1_7_2.eContents().get(0);
		private final RuleCall cValuesDocumentTypeFieldValueParserRuleCall_1_1_7_2_0_0 = (RuleCall)cValuesAssignment_1_1_7_2_0.eContents().get(0);
		private final Group cGroup_1_1_7_2_1 = (Group)cAlternatives_1_1_7_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_1_7_2_1_0 = (Keyword)cGroup_1_1_7_2_1.eContents().get(0);
		private final Group cGroup_1_1_7_2_1_1 = (Group)cGroup_1_1_7_2_1.eContents().get(1);
		private final RuleCall cUnaryExpressionParserRuleCall_1_1_7_2_1_1_0 = (RuleCall)cGroup_1_1_7_2_1_1.eContents().get(0);
		private final Assignment cValuesAssignment_1_1_7_2_1_1_1 = (Assignment)cGroup_1_1_7_2_1_1.eContents().get(1);
		private final RuleCall cValuesDocumentTypeFieldValueParserRuleCall_1_1_7_2_1_1_1_0 = (RuleCall)cValuesAssignment_1_1_7_2_1_1_1.eContents().get(0);
		private final RuleCall cBoostTerminalRuleCall_1_1_7_2_1_1_2 = (RuleCall)cGroup_1_1_7_2_1_1.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_1_1_7_2_1_2 = (Keyword)cGroup_1_1_7_2_1.eContents().get(2);
		private final RuleCall cBoostTerminalRuleCall_1_1_7_3 = (RuleCall)cGroup_1_1_7.eContents().get(3);
		private final Group cGroup_1_1_8 = (Group)cAlternatives_1_1.eContents().get(8);
		private final Assignment cFieldAssignment_1_1_8_0 = (Assignment)cGroup_1_1_8.eContents().get(0);
		private final RuleCall cFieldProjectNameFieldParserRuleCall_1_1_8_0_0 = (RuleCall)cFieldAssignment_1_1_8_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1_8_1 = (Keyword)cGroup_1_1_8.eContents().get(1);
		private final Alternatives cAlternatives_1_1_8_2 = (Alternatives)cGroup_1_1_8.eContents().get(2);
		private final Assignment cValuesAssignment_1_1_8_2_0 = (Assignment)cAlternatives_1_1_8_2.eContents().get(0);
		private final RuleCall cValuesProjectNameFieldValueParserRuleCall_1_1_8_2_0_0 = (RuleCall)cValuesAssignment_1_1_8_2_0.eContents().get(0);
		private final Group cGroup_1_1_8_2_1 = (Group)cAlternatives_1_1_8_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_1_8_2_1_0 = (Keyword)cGroup_1_1_8_2_1.eContents().get(0);
		private final Group cGroup_1_1_8_2_1_1 = (Group)cGroup_1_1_8_2_1.eContents().get(1);
		private final RuleCall cUnaryExpressionParserRuleCall_1_1_8_2_1_1_0 = (RuleCall)cGroup_1_1_8_2_1_1.eContents().get(0);
		private final Assignment cValuesAssignment_1_1_8_2_1_1_1 = (Assignment)cGroup_1_1_8_2_1_1.eContents().get(1);
		private final RuleCall cValuesProjectNameFieldValueParserRuleCall_1_1_8_2_1_1_1_0 = (RuleCall)cValuesAssignment_1_1_8_2_1_1_1.eContents().get(0);
		private final RuleCall cBoostTerminalRuleCall_1_1_8_2_1_1_2 = (RuleCall)cGroup_1_1_8_2_1_1.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_1_1_8_2_1_2 = (Keyword)cGroup_1_1_8_2_1.eContents().get(2);
		private final RuleCall cBoostTerminalRuleCall_1_1_8_3 = (RuleCall)cGroup_1_1_8.eContents().get(3);
		private final Group cGroup_1_1_9 = (Group)cAlternatives_1_1.eContents().get(9);
		private final Assignment cFieldAssignment_1_1_9_0 = (Assignment)cGroup_1_1_9.eContents().get(0);
		private final RuleCall cFieldAnnotationFieldParserRuleCall_1_1_9_0_0 = (RuleCall)cFieldAssignment_1_1_9_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1_9_1 = (Keyword)cGroup_1_1_9.eContents().get(1);
		private final Alternatives cAlternatives_1_1_9_2 = (Alternatives)cGroup_1_1_9.eContents().get(2);
		private final Assignment cValuesAssignment_1_1_9_2_0 = (Assignment)cAlternatives_1_1_9_2.eContents().get(0);
		private final RuleCall cValuesAnnotationFieldValueParserRuleCall_1_1_9_2_0_0 = (RuleCall)cValuesAssignment_1_1_9_2_0.eContents().get(0);
		private final Group cGroup_1_1_9_2_1 = (Group)cAlternatives_1_1_9_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_1_9_2_1_0 = (Keyword)cGroup_1_1_9_2_1.eContents().get(0);
		private final Group cGroup_1_1_9_2_1_1 = (Group)cGroup_1_1_9_2_1.eContents().get(1);
		private final RuleCall cUnaryExpressionParserRuleCall_1_1_9_2_1_1_0 = (RuleCall)cGroup_1_1_9_2_1_1.eContents().get(0);
		private final Assignment cValuesAssignment_1_1_9_2_1_1_1 = (Assignment)cGroup_1_1_9_2_1_1.eContents().get(1);
		private final RuleCall cValuesAnnotationFieldValueParserRuleCall_1_1_9_2_1_1_1_0 = (RuleCall)cValuesAssignment_1_1_9_2_1_1_1.eContents().get(0);
		private final RuleCall cBoostTerminalRuleCall_1_1_9_2_1_1_2 = (RuleCall)cGroup_1_1_9_2_1_1.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_1_1_9_2_1_2 = (Keyword)cGroup_1_1_9_2_1.eContents().get(2);
		private final RuleCall cBoostTerminalRuleCall_1_1_9_3 = (RuleCall)cGroup_1_1_9.eContents().get(3);
		private final Group cGroup_1_1_10 = (Group)cAlternatives_1_1.eContents().get(10);
		private final Assignment cFieldAssignment_1_1_10_0 = (Assignment)cGroup_1_1_10.eContents().get(0);
		private final RuleCall cFieldDefinitionTypeParserRuleCall_1_1_10_0_0 = (RuleCall)cFieldAssignment_1_1_10_0.eContents().get(0);
		private final Keyword cColonKeyword_1_1_10_1 = (Keyword)cGroup_1_1_10.eContents().get(1);
		private final Alternatives cAlternatives_1_1_10_2 = (Alternatives)cGroup_1_1_10.eContents().get(2);
		private final Assignment cValuesAssignment_1_1_10_2_0 = (Assignment)cAlternatives_1_1_10_2.eContents().get(0);
		private final RuleCall cValuesDefinitionTypeValueParserRuleCall_1_1_10_2_0_0 = (RuleCall)cValuesAssignment_1_1_10_2_0.eContents().get(0);
		private final Group cGroup_1_1_10_2_1 = (Group)cAlternatives_1_1_10_2.eContents().get(1);
		private final Keyword cLeftParenthesisKeyword_1_1_10_2_1_0 = (Keyword)cGroup_1_1_10_2_1.eContents().get(0);
		private final Group cGroup_1_1_10_2_1_1 = (Group)cGroup_1_1_10_2_1.eContents().get(1);
		private final RuleCall cUnaryExpressionParserRuleCall_1_1_10_2_1_1_0 = (RuleCall)cGroup_1_1_10_2_1_1.eContents().get(0);
		private final Assignment cValuesAssignment_1_1_10_2_1_1_1 = (Assignment)cGroup_1_1_10_2_1_1.eContents().get(1);
		private final RuleCall cValuesDefinitionTypeValueParserRuleCall_1_1_10_2_1_1_1_0 = (RuleCall)cValuesAssignment_1_1_10_2_1_1_1.eContents().get(0);
		private final RuleCall cBoostTerminalRuleCall_1_1_10_2_1_1_2 = (RuleCall)cGroup_1_1_10_2_1_1.eContents().get(2);
		private final Keyword cRightParenthesisKeyword_1_1_10_2_1_2 = (Keyword)cGroup_1_1_10_2_1.eContents().get(2);
		private final RuleCall cBoostTerminalRuleCall_1_1_10_3 = (RuleCall)cGroup_1_1_10.eContents().get(3);
		
		/// *
		//
		//	The following rules are generated. Do not modify. Modify source file instead.
		//
		// * / //Generated Rule. Do not modify!
		//
		//ClauseExpression:
		//	UnaryExpression? (default=SimpleFieldValue Boost? // Default field
		//
		//	| (field=SimpleField ":" (values+=SimpleFieldValue | "(" (UnaryExpression? values+=SimpleFieldValue Boost?)* ")")
		//	Boost? | field=TypeField ":" (values+=TypeFieldValue | "(" (UnaryExpression? values+=TypeFieldValue Boost?)* ")")
		//	Boost? | field=MethodField ":" (values+=MethodFieldValue | "(" (UnaryExpression? values+=MethodFieldValue Boost?)*
		//	")") Boost? | field=FilePathField ":" (values+=FilePathFieldValue | "(" (UnaryExpression? values+=FilePathFieldValue
		//	Boost?)* ")") Boost? | field=NumberField ":" (values+=NumberFieldValue | "(" (UnaryExpression?
		//	values+=NumberFieldValue Boost?)* ")") Boost? | field=ModifierField ":" (values+=ModifierFieldValue | "("
		//	(UnaryExpression? values+=ModifierFieldValue Boost?)* ")") Boost? | field=TimeField ":" (values+=TimeFieldValue | "("
		//	(UnaryExpression? values+=TimeFieldValue Boost?)* ")") Boost? | field=DocumentTypeField ":"
		//	(values+=DocumentTypeFieldValue | "(" (UnaryExpression? values+=DocumentTypeFieldValue Boost?)* ")") Boost? |
		//	field=ProjectNameField ":" (values+=ProjectNameFieldValue | "(" (UnaryExpression? values+=ProjectNameFieldValue
		//	Boost?)* ")") Boost? | field=AnnotationField ":" (values+=AnnotationFieldValue | "(" (UnaryExpression?
		//	values+=AnnotationFieldValue Boost?)* ")") Boost? | field=DefinitionType ":" (values+=DefinitionTypeValue | "("
		//	(UnaryExpression? values+=DefinitionTypeValue Boost?)* ")") Boost?));
		public ParserRule getRule() { return rule; }

		//UnaryExpression? (default=SimpleFieldValue Boost? // Default field
		//
		//| (field=SimpleField ":" (values+=SimpleFieldValue | "(" (UnaryExpression? values+=SimpleFieldValue Boost?)* ")") Boost?
		//| field=TypeField ":" (values+=TypeFieldValue | "(" (UnaryExpression? values+=TypeFieldValue Boost?)* ")") Boost? |
		//field=MethodField ":" (values+=MethodFieldValue | "(" (UnaryExpression? values+=MethodFieldValue Boost?)* ")") Boost? |
		//field=FilePathField ":" (values+=FilePathFieldValue | "(" (UnaryExpression? values+=FilePathFieldValue Boost?)* ")")
		//Boost? | field=NumberField ":" (values+=NumberFieldValue | "(" (UnaryExpression? values+=NumberFieldValue Boost?)* ")")
		//Boost? | field=ModifierField ":" (values+=ModifierFieldValue | "(" (UnaryExpression? values+=ModifierFieldValue
		//Boost?)* ")") Boost? | field=TimeField ":" (values+=TimeFieldValue | "(" (UnaryExpression? values+=TimeFieldValue
		//Boost?)* ")") Boost? | field=DocumentTypeField ":" (values+=DocumentTypeFieldValue | "(" (UnaryExpression?
		//values+=DocumentTypeFieldValue Boost?)* ")") Boost? | field=ProjectNameField ":" (values+=ProjectNameFieldValue | "("
		//(UnaryExpression? values+=ProjectNameFieldValue Boost?)* ")") Boost? | field=AnnotationField ":"
		//(values+=AnnotationFieldValue | "(" (UnaryExpression? values+=AnnotationFieldValue Boost?)* ")") Boost? |
		//field=DefinitionType ":" (values+=DefinitionTypeValue | "(" (UnaryExpression? values+=DefinitionTypeValue Boost?)* ")")
		//Boost?))
		public Group getGroup() { return cGroup; }

		//UnaryExpression?
		public RuleCall getUnaryExpressionParserRuleCall_0() { return cUnaryExpressionParserRuleCall_0; }

		//default=SimpleFieldValue Boost? // Default field
		//
		//| (field=SimpleField ":" (values+=SimpleFieldValue | "(" (UnaryExpression? values+=SimpleFieldValue Boost?)* ")") Boost?
		//| field=TypeField ":" (values+=TypeFieldValue | "(" (UnaryExpression? values+=TypeFieldValue Boost?)* ")") Boost? |
		//field=MethodField ":" (values+=MethodFieldValue | "(" (UnaryExpression? values+=MethodFieldValue Boost?)* ")") Boost? |
		//field=FilePathField ":" (values+=FilePathFieldValue | "(" (UnaryExpression? values+=FilePathFieldValue Boost?)* ")")
		//Boost? | field=NumberField ":" (values+=NumberFieldValue | "(" (UnaryExpression? values+=NumberFieldValue Boost?)* ")")
		//Boost? | field=ModifierField ":" (values+=ModifierFieldValue | "(" (UnaryExpression? values+=ModifierFieldValue
		//Boost?)* ")") Boost? | field=TimeField ":" (values+=TimeFieldValue | "(" (UnaryExpression? values+=TimeFieldValue
		//Boost?)* ")") Boost? | field=DocumentTypeField ":" (values+=DocumentTypeFieldValue | "(" (UnaryExpression?
		//values+=DocumentTypeFieldValue Boost?)* ")") Boost? | field=ProjectNameField ":" (values+=ProjectNameFieldValue | "("
		//(UnaryExpression? values+=ProjectNameFieldValue Boost?)* ")") Boost? | field=AnnotationField ":"
		//(values+=AnnotationFieldValue | "(" (UnaryExpression? values+=AnnotationFieldValue Boost?)* ")") Boost? |
		//field=DefinitionType ":" (values+=DefinitionTypeValue | "(" (UnaryExpression? values+=DefinitionTypeValue Boost?)* ")")
		//Boost?)
		public Alternatives getAlternatives_1() { return cAlternatives_1; }

		//default=SimpleFieldValue Boost?
		public Group getGroup_1_0() { return cGroup_1_0; }

		//default=SimpleFieldValue
		public Assignment getDefaultAssignment_1_0_0() { return cDefaultAssignment_1_0_0; }

		//SimpleFieldValue
		public RuleCall getDefaultSimpleFieldValueParserRuleCall_1_0_0_0() { return cDefaultSimpleFieldValueParserRuleCall_1_0_0_0; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_0_1() { return cBoostTerminalRuleCall_1_0_1; }

		//field=SimpleField ":" (values+=SimpleFieldValue | "(" (UnaryExpression? values+=SimpleFieldValue Boost?)* ")") Boost? |
		//field=TypeField ":" (values+=TypeFieldValue | "(" (UnaryExpression? values+=TypeFieldValue Boost?)* ")") Boost? |
		//field=MethodField ":" (values+=MethodFieldValue | "(" (UnaryExpression? values+=MethodFieldValue Boost?)* ")") Boost? |
		//field=FilePathField ":" (values+=FilePathFieldValue | "(" (UnaryExpression? values+=FilePathFieldValue Boost?)* ")")
		//Boost? | field=NumberField ":" (values+=NumberFieldValue | "(" (UnaryExpression? values+=NumberFieldValue Boost?)* ")")
		//Boost? | field=ModifierField ":" (values+=ModifierFieldValue | "(" (UnaryExpression? values+=ModifierFieldValue
		//Boost?)* ")") Boost? | field=TimeField ":" (values+=TimeFieldValue | "(" (UnaryExpression? values+=TimeFieldValue
		//Boost?)* ")") Boost? | field=DocumentTypeField ":" (values+=DocumentTypeFieldValue | "(" (UnaryExpression?
		//values+=DocumentTypeFieldValue Boost?)* ")") Boost? | field=ProjectNameField ":" (values+=ProjectNameFieldValue | "("
		//(UnaryExpression? values+=ProjectNameFieldValue Boost?)* ")") Boost? | field=AnnotationField ":"
		//(values+=AnnotationFieldValue | "(" (UnaryExpression? values+=AnnotationFieldValue Boost?)* ")") Boost? |
		//field=DefinitionType ":" (values+=DefinitionTypeValue | "(" (UnaryExpression? values+=DefinitionTypeValue Boost?)* ")")
		//Boost?
		public Alternatives getAlternatives_1_1() { return cAlternatives_1_1; }

		//field=SimpleField ":" (values+=SimpleFieldValue | "(" (UnaryExpression? values+=SimpleFieldValue Boost?)* ")") Boost?
		public Group getGroup_1_1_0() { return cGroup_1_1_0; }

		//field=SimpleField
		public Assignment getFieldAssignment_1_1_0_0() { return cFieldAssignment_1_1_0_0; }

		//SimpleField
		public RuleCall getFieldSimpleFieldParserRuleCall_1_1_0_0_0() { return cFieldSimpleFieldParserRuleCall_1_1_0_0_0; }

		//":"
		public Keyword getColonKeyword_1_1_0_1() { return cColonKeyword_1_1_0_1; }

		//values+=SimpleFieldValue | "(" (UnaryExpression? values+=SimpleFieldValue Boost?)* ")"
		public Alternatives getAlternatives_1_1_0_2() { return cAlternatives_1_1_0_2; }

		//values+=SimpleFieldValue
		public Assignment getValuesAssignment_1_1_0_2_0() { return cValuesAssignment_1_1_0_2_0; }

		//SimpleFieldValue
		public RuleCall getValuesSimpleFieldValueParserRuleCall_1_1_0_2_0_0() { return cValuesSimpleFieldValueParserRuleCall_1_1_0_2_0_0; }

		//"(" (UnaryExpression? values+=SimpleFieldValue Boost?)* ")"
		public Group getGroup_1_1_0_2_1() { return cGroup_1_1_0_2_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1_0_2_1_0() { return cLeftParenthesisKeyword_1_1_0_2_1_0; }

		//(UnaryExpression? values+=SimpleFieldValue Boost?)*
		public Group getGroup_1_1_0_2_1_1() { return cGroup_1_1_0_2_1_1; }

		//UnaryExpression?
		public RuleCall getUnaryExpressionParserRuleCall_1_1_0_2_1_1_0() { return cUnaryExpressionParserRuleCall_1_1_0_2_1_1_0; }

		//values+=SimpleFieldValue
		public Assignment getValuesAssignment_1_1_0_2_1_1_1() { return cValuesAssignment_1_1_0_2_1_1_1; }

		//SimpleFieldValue
		public RuleCall getValuesSimpleFieldValueParserRuleCall_1_1_0_2_1_1_1_0() { return cValuesSimpleFieldValueParserRuleCall_1_1_0_2_1_1_1_0; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_1_0_2_1_1_2() { return cBoostTerminalRuleCall_1_1_0_2_1_1_2; }

		//")"
		public Keyword getRightParenthesisKeyword_1_1_0_2_1_2() { return cRightParenthesisKeyword_1_1_0_2_1_2; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_1_0_3() { return cBoostTerminalRuleCall_1_1_0_3; }

		//field=TypeField ":" (values+=TypeFieldValue | "(" (UnaryExpression? values+=TypeFieldValue Boost?)* ")") Boost?
		public Group getGroup_1_1_1() { return cGroup_1_1_1; }

		//field=TypeField
		public Assignment getFieldAssignment_1_1_1_0() { return cFieldAssignment_1_1_1_0; }

		//TypeField
		public RuleCall getFieldTypeFieldParserRuleCall_1_1_1_0_0() { return cFieldTypeFieldParserRuleCall_1_1_1_0_0; }

		//":"
		public Keyword getColonKeyword_1_1_1_1() { return cColonKeyword_1_1_1_1; }

		//values+=TypeFieldValue | "(" (UnaryExpression? values+=TypeFieldValue Boost?)* ")"
		public Alternatives getAlternatives_1_1_1_2() { return cAlternatives_1_1_1_2; }

		//values+=TypeFieldValue
		public Assignment getValuesAssignment_1_1_1_2_0() { return cValuesAssignment_1_1_1_2_0; }

		//TypeFieldValue
		public RuleCall getValuesTypeFieldValueParserRuleCall_1_1_1_2_0_0() { return cValuesTypeFieldValueParserRuleCall_1_1_1_2_0_0; }

		//"(" (UnaryExpression? values+=TypeFieldValue Boost?)* ")"
		public Group getGroup_1_1_1_2_1() { return cGroup_1_1_1_2_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1_1_2_1_0() { return cLeftParenthesisKeyword_1_1_1_2_1_0; }

		//(UnaryExpression? values+=TypeFieldValue Boost?)*
		public Group getGroup_1_1_1_2_1_1() { return cGroup_1_1_1_2_1_1; }

		//UnaryExpression?
		public RuleCall getUnaryExpressionParserRuleCall_1_1_1_2_1_1_0() { return cUnaryExpressionParserRuleCall_1_1_1_2_1_1_0; }

		//values+=TypeFieldValue
		public Assignment getValuesAssignment_1_1_1_2_1_1_1() { return cValuesAssignment_1_1_1_2_1_1_1; }

		//TypeFieldValue
		public RuleCall getValuesTypeFieldValueParserRuleCall_1_1_1_2_1_1_1_0() { return cValuesTypeFieldValueParserRuleCall_1_1_1_2_1_1_1_0; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_1_1_2_1_1_2() { return cBoostTerminalRuleCall_1_1_1_2_1_1_2; }

		//")"
		public Keyword getRightParenthesisKeyword_1_1_1_2_1_2() { return cRightParenthesisKeyword_1_1_1_2_1_2; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_1_1_3() { return cBoostTerminalRuleCall_1_1_1_3; }

		//field=MethodField ":" (values+=MethodFieldValue | "(" (UnaryExpression? values+=MethodFieldValue Boost?)* ")") Boost?
		public Group getGroup_1_1_2() { return cGroup_1_1_2; }

		//field=MethodField
		public Assignment getFieldAssignment_1_1_2_0() { return cFieldAssignment_1_1_2_0; }

		//MethodField
		public RuleCall getFieldMethodFieldParserRuleCall_1_1_2_0_0() { return cFieldMethodFieldParserRuleCall_1_1_2_0_0; }

		//":"
		public Keyword getColonKeyword_1_1_2_1() { return cColonKeyword_1_1_2_1; }

		//values+=MethodFieldValue | "(" (UnaryExpression? values+=MethodFieldValue Boost?)* ")"
		public Alternatives getAlternatives_1_1_2_2() { return cAlternatives_1_1_2_2; }

		//values+=MethodFieldValue
		public Assignment getValuesAssignment_1_1_2_2_0() { return cValuesAssignment_1_1_2_2_0; }

		//MethodFieldValue
		public RuleCall getValuesMethodFieldValueParserRuleCall_1_1_2_2_0_0() { return cValuesMethodFieldValueParserRuleCall_1_1_2_2_0_0; }

		//"(" (UnaryExpression? values+=MethodFieldValue Boost?)* ")"
		public Group getGroup_1_1_2_2_1() { return cGroup_1_1_2_2_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1_2_2_1_0() { return cLeftParenthesisKeyword_1_1_2_2_1_0; }

		//(UnaryExpression? values+=MethodFieldValue Boost?)*
		public Group getGroup_1_1_2_2_1_1() { return cGroup_1_1_2_2_1_1; }

		//UnaryExpression?
		public RuleCall getUnaryExpressionParserRuleCall_1_1_2_2_1_1_0() { return cUnaryExpressionParserRuleCall_1_1_2_2_1_1_0; }

		//values+=MethodFieldValue
		public Assignment getValuesAssignment_1_1_2_2_1_1_1() { return cValuesAssignment_1_1_2_2_1_1_1; }

		//MethodFieldValue
		public RuleCall getValuesMethodFieldValueParserRuleCall_1_1_2_2_1_1_1_0() { return cValuesMethodFieldValueParserRuleCall_1_1_2_2_1_1_1_0; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_1_2_2_1_1_2() { return cBoostTerminalRuleCall_1_1_2_2_1_1_2; }

		//")"
		public Keyword getRightParenthesisKeyword_1_1_2_2_1_2() { return cRightParenthesisKeyword_1_1_2_2_1_2; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_1_2_3() { return cBoostTerminalRuleCall_1_1_2_3; }

		//field=FilePathField ":" (values+=FilePathFieldValue | "(" (UnaryExpression? values+=FilePathFieldValue Boost?)* ")")
		//Boost?
		public Group getGroup_1_1_3() { return cGroup_1_1_3; }

		//field=FilePathField
		public Assignment getFieldAssignment_1_1_3_0() { return cFieldAssignment_1_1_3_0; }

		//FilePathField
		public RuleCall getFieldFilePathFieldParserRuleCall_1_1_3_0_0() { return cFieldFilePathFieldParserRuleCall_1_1_3_0_0; }

		//":"
		public Keyword getColonKeyword_1_1_3_1() { return cColonKeyword_1_1_3_1; }

		//values+=FilePathFieldValue | "(" (UnaryExpression? values+=FilePathFieldValue Boost?)* ")"
		public Alternatives getAlternatives_1_1_3_2() { return cAlternatives_1_1_3_2; }

		//values+=FilePathFieldValue
		public Assignment getValuesAssignment_1_1_3_2_0() { return cValuesAssignment_1_1_3_2_0; }

		//FilePathFieldValue
		public RuleCall getValuesFilePathFieldValueParserRuleCall_1_1_3_2_0_0() { return cValuesFilePathFieldValueParserRuleCall_1_1_3_2_0_0; }

		//"(" (UnaryExpression? values+=FilePathFieldValue Boost?)* ")"
		public Group getGroup_1_1_3_2_1() { return cGroup_1_1_3_2_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1_3_2_1_0() { return cLeftParenthesisKeyword_1_1_3_2_1_0; }

		//(UnaryExpression? values+=FilePathFieldValue Boost?)*
		public Group getGroup_1_1_3_2_1_1() { return cGroup_1_1_3_2_1_1; }

		//UnaryExpression?
		public RuleCall getUnaryExpressionParserRuleCall_1_1_3_2_1_1_0() { return cUnaryExpressionParserRuleCall_1_1_3_2_1_1_0; }

		//values+=FilePathFieldValue
		public Assignment getValuesAssignment_1_1_3_2_1_1_1() { return cValuesAssignment_1_1_3_2_1_1_1; }

		//FilePathFieldValue
		public RuleCall getValuesFilePathFieldValueParserRuleCall_1_1_3_2_1_1_1_0() { return cValuesFilePathFieldValueParserRuleCall_1_1_3_2_1_1_1_0; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_1_3_2_1_1_2() { return cBoostTerminalRuleCall_1_1_3_2_1_1_2; }

		//")"
		public Keyword getRightParenthesisKeyword_1_1_3_2_1_2() { return cRightParenthesisKeyword_1_1_3_2_1_2; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_1_3_3() { return cBoostTerminalRuleCall_1_1_3_3; }

		//field=NumberField ":" (values+=NumberFieldValue | "(" (UnaryExpression? values+=NumberFieldValue Boost?)* ")") Boost?
		public Group getGroup_1_1_4() { return cGroup_1_1_4; }

		//field=NumberField
		public Assignment getFieldAssignment_1_1_4_0() { return cFieldAssignment_1_1_4_0; }

		//NumberField
		public RuleCall getFieldNumberFieldParserRuleCall_1_1_4_0_0() { return cFieldNumberFieldParserRuleCall_1_1_4_0_0; }

		//":"
		public Keyword getColonKeyword_1_1_4_1() { return cColonKeyword_1_1_4_1; }

		//values+=NumberFieldValue | "(" (UnaryExpression? values+=NumberFieldValue Boost?)* ")"
		public Alternatives getAlternatives_1_1_4_2() { return cAlternatives_1_1_4_2; }

		//values+=NumberFieldValue
		public Assignment getValuesAssignment_1_1_4_2_0() { return cValuesAssignment_1_1_4_2_0; }

		//NumberFieldValue
		public RuleCall getValuesNumberFieldValueParserRuleCall_1_1_4_2_0_0() { return cValuesNumberFieldValueParserRuleCall_1_1_4_2_0_0; }

		//"(" (UnaryExpression? values+=NumberFieldValue Boost?)* ")"
		public Group getGroup_1_1_4_2_1() { return cGroup_1_1_4_2_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1_4_2_1_0() { return cLeftParenthesisKeyword_1_1_4_2_1_0; }

		//(UnaryExpression? values+=NumberFieldValue Boost?)*
		public Group getGroup_1_1_4_2_1_1() { return cGroup_1_1_4_2_1_1; }

		//UnaryExpression?
		public RuleCall getUnaryExpressionParserRuleCall_1_1_4_2_1_1_0() { return cUnaryExpressionParserRuleCall_1_1_4_2_1_1_0; }

		//values+=NumberFieldValue
		public Assignment getValuesAssignment_1_1_4_2_1_1_1() { return cValuesAssignment_1_1_4_2_1_1_1; }

		//NumberFieldValue
		public RuleCall getValuesNumberFieldValueParserRuleCall_1_1_4_2_1_1_1_0() { return cValuesNumberFieldValueParserRuleCall_1_1_4_2_1_1_1_0; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_1_4_2_1_1_2() { return cBoostTerminalRuleCall_1_1_4_2_1_1_2; }

		//")"
		public Keyword getRightParenthesisKeyword_1_1_4_2_1_2() { return cRightParenthesisKeyword_1_1_4_2_1_2; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_1_4_3() { return cBoostTerminalRuleCall_1_1_4_3; }

		//field=ModifierField ":" (values+=ModifierFieldValue | "(" (UnaryExpression? values+=ModifierFieldValue Boost?)* ")")
		//Boost?
		public Group getGroup_1_1_5() { return cGroup_1_1_5; }

		//field=ModifierField
		public Assignment getFieldAssignment_1_1_5_0() { return cFieldAssignment_1_1_5_0; }

		//ModifierField
		public RuleCall getFieldModifierFieldParserRuleCall_1_1_5_0_0() { return cFieldModifierFieldParserRuleCall_1_1_5_0_0; }

		//":"
		public Keyword getColonKeyword_1_1_5_1() { return cColonKeyword_1_1_5_1; }

		//values+=ModifierFieldValue | "(" (UnaryExpression? values+=ModifierFieldValue Boost?)* ")"
		public Alternatives getAlternatives_1_1_5_2() { return cAlternatives_1_1_5_2; }

		//values+=ModifierFieldValue
		public Assignment getValuesAssignment_1_1_5_2_0() { return cValuesAssignment_1_1_5_2_0; }

		//ModifierFieldValue
		public RuleCall getValuesModifierFieldValueParserRuleCall_1_1_5_2_0_0() { return cValuesModifierFieldValueParserRuleCall_1_1_5_2_0_0; }

		//"(" (UnaryExpression? values+=ModifierFieldValue Boost?)* ")"
		public Group getGroup_1_1_5_2_1() { return cGroup_1_1_5_2_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1_5_2_1_0() { return cLeftParenthesisKeyword_1_1_5_2_1_0; }

		//(UnaryExpression? values+=ModifierFieldValue Boost?)*
		public Group getGroup_1_1_5_2_1_1() { return cGroup_1_1_5_2_1_1; }

		//UnaryExpression?
		public RuleCall getUnaryExpressionParserRuleCall_1_1_5_2_1_1_0() { return cUnaryExpressionParserRuleCall_1_1_5_2_1_1_0; }

		//values+=ModifierFieldValue
		public Assignment getValuesAssignment_1_1_5_2_1_1_1() { return cValuesAssignment_1_1_5_2_1_1_1; }

		//ModifierFieldValue
		public RuleCall getValuesModifierFieldValueParserRuleCall_1_1_5_2_1_1_1_0() { return cValuesModifierFieldValueParserRuleCall_1_1_5_2_1_1_1_0; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_1_5_2_1_1_2() { return cBoostTerminalRuleCall_1_1_5_2_1_1_2; }

		//")"
		public Keyword getRightParenthesisKeyword_1_1_5_2_1_2() { return cRightParenthesisKeyword_1_1_5_2_1_2; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_1_5_3() { return cBoostTerminalRuleCall_1_1_5_3; }

		//field=TimeField ":" (values+=TimeFieldValue | "(" (UnaryExpression? values+=TimeFieldValue Boost?)* ")") Boost?
		public Group getGroup_1_1_6() { return cGroup_1_1_6; }

		//field=TimeField
		public Assignment getFieldAssignment_1_1_6_0() { return cFieldAssignment_1_1_6_0; }

		//TimeField
		public RuleCall getFieldTimeFieldParserRuleCall_1_1_6_0_0() { return cFieldTimeFieldParserRuleCall_1_1_6_0_0; }

		//":"
		public Keyword getColonKeyword_1_1_6_1() { return cColonKeyword_1_1_6_1; }

		//values+=TimeFieldValue | "(" (UnaryExpression? values+=TimeFieldValue Boost?)* ")"
		public Alternatives getAlternatives_1_1_6_2() { return cAlternatives_1_1_6_2; }

		//values+=TimeFieldValue
		public Assignment getValuesAssignment_1_1_6_2_0() { return cValuesAssignment_1_1_6_2_0; }

		//TimeFieldValue
		public RuleCall getValuesTimeFieldValueParserRuleCall_1_1_6_2_0_0() { return cValuesTimeFieldValueParserRuleCall_1_1_6_2_0_0; }

		//"(" (UnaryExpression? values+=TimeFieldValue Boost?)* ")"
		public Group getGroup_1_1_6_2_1() { return cGroup_1_1_6_2_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1_6_2_1_0() { return cLeftParenthesisKeyword_1_1_6_2_1_0; }

		//(UnaryExpression? values+=TimeFieldValue Boost?)*
		public Group getGroup_1_1_6_2_1_1() { return cGroup_1_1_6_2_1_1; }

		//UnaryExpression?
		public RuleCall getUnaryExpressionParserRuleCall_1_1_6_2_1_1_0() { return cUnaryExpressionParserRuleCall_1_1_6_2_1_1_0; }

		//values+=TimeFieldValue
		public Assignment getValuesAssignment_1_1_6_2_1_1_1() { return cValuesAssignment_1_1_6_2_1_1_1; }

		//TimeFieldValue
		public RuleCall getValuesTimeFieldValueParserRuleCall_1_1_6_2_1_1_1_0() { return cValuesTimeFieldValueParserRuleCall_1_1_6_2_1_1_1_0; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_1_6_2_1_1_2() { return cBoostTerminalRuleCall_1_1_6_2_1_1_2; }

		//")"
		public Keyword getRightParenthesisKeyword_1_1_6_2_1_2() { return cRightParenthesisKeyword_1_1_6_2_1_2; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_1_6_3() { return cBoostTerminalRuleCall_1_1_6_3; }

		//field=DocumentTypeField ":" (values+=DocumentTypeFieldValue | "(" (UnaryExpression? values+=DocumentTypeFieldValue
		//Boost?)* ")") Boost?
		public Group getGroup_1_1_7() { return cGroup_1_1_7; }

		//field=DocumentTypeField
		public Assignment getFieldAssignment_1_1_7_0() { return cFieldAssignment_1_1_7_0; }

		//DocumentTypeField
		public RuleCall getFieldDocumentTypeFieldParserRuleCall_1_1_7_0_0() { return cFieldDocumentTypeFieldParserRuleCall_1_1_7_0_0; }

		//":"
		public Keyword getColonKeyword_1_1_7_1() { return cColonKeyword_1_1_7_1; }

		//values+=DocumentTypeFieldValue | "(" (UnaryExpression? values+=DocumentTypeFieldValue Boost?)* ")"
		public Alternatives getAlternatives_1_1_7_2() { return cAlternatives_1_1_7_2; }

		//values+=DocumentTypeFieldValue
		public Assignment getValuesAssignment_1_1_7_2_0() { return cValuesAssignment_1_1_7_2_0; }

		//DocumentTypeFieldValue
		public RuleCall getValuesDocumentTypeFieldValueParserRuleCall_1_1_7_2_0_0() { return cValuesDocumentTypeFieldValueParserRuleCall_1_1_7_2_0_0; }

		//"(" (UnaryExpression? values+=DocumentTypeFieldValue Boost?)* ")"
		public Group getGroup_1_1_7_2_1() { return cGroup_1_1_7_2_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1_7_2_1_0() { return cLeftParenthesisKeyword_1_1_7_2_1_0; }

		//(UnaryExpression? values+=DocumentTypeFieldValue Boost?)*
		public Group getGroup_1_1_7_2_1_1() { return cGroup_1_1_7_2_1_1; }

		//UnaryExpression?
		public RuleCall getUnaryExpressionParserRuleCall_1_1_7_2_1_1_0() { return cUnaryExpressionParserRuleCall_1_1_7_2_1_1_0; }

		//values+=DocumentTypeFieldValue
		public Assignment getValuesAssignment_1_1_7_2_1_1_1() { return cValuesAssignment_1_1_7_2_1_1_1; }

		//DocumentTypeFieldValue
		public RuleCall getValuesDocumentTypeFieldValueParserRuleCall_1_1_7_2_1_1_1_0() { return cValuesDocumentTypeFieldValueParserRuleCall_1_1_7_2_1_1_1_0; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_1_7_2_1_1_2() { return cBoostTerminalRuleCall_1_1_7_2_1_1_2; }

		//")"
		public Keyword getRightParenthesisKeyword_1_1_7_2_1_2() { return cRightParenthesisKeyword_1_1_7_2_1_2; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_1_7_3() { return cBoostTerminalRuleCall_1_1_7_3; }

		//field=ProjectNameField ":" (values+=ProjectNameFieldValue | "(" (UnaryExpression? values+=ProjectNameFieldValue Boost?)*
		//")") Boost?
		public Group getGroup_1_1_8() { return cGroup_1_1_8; }

		//field=ProjectNameField
		public Assignment getFieldAssignment_1_1_8_0() { return cFieldAssignment_1_1_8_0; }

		//ProjectNameField
		public RuleCall getFieldProjectNameFieldParserRuleCall_1_1_8_0_0() { return cFieldProjectNameFieldParserRuleCall_1_1_8_0_0; }

		//":"
		public Keyword getColonKeyword_1_1_8_1() { return cColonKeyword_1_1_8_1; }

		//values+=ProjectNameFieldValue | "(" (UnaryExpression? values+=ProjectNameFieldValue Boost?)* ")"
		public Alternatives getAlternatives_1_1_8_2() { return cAlternatives_1_1_8_2; }

		//values+=ProjectNameFieldValue
		public Assignment getValuesAssignment_1_1_8_2_0() { return cValuesAssignment_1_1_8_2_0; }

		//ProjectNameFieldValue
		public RuleCall getValuesProjectNameFieldValueParserRuleCall_1_1_8_2_0_0() { return cValuesProjectNameFieldValueParserRuleCall_1_1_8_2_0_0; }

		//"(" (UnaryExpression? values+=ProjectNameFieldValue Boost?)* ")"
		public Group getGroup_1_1_8_2_1() { return cGroup_1_1_8_2_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1_8_2_1_0() { return cLeftParenthesisKeyword_1_1_8_2_1_0; }

		//(UnaryExpression? values+=ProjectNameFieldValue Boost?)*
		public Group getGroup_1_1_8_2_1_1() { return cGroup_1_1_8_2_1_1; }

		//UnaryExpression?
		public RuleCall getUnaryExpressionParserRuleCall_1_1_8_2_1_1_0() { return cUnaryExpressionParserRuleCall_1_1_8_2_1_1_0; }

		//values+=ProjectNameFieldValue
		public Assignment getValuesAssignment_1_1_8_2_1_1_1() { return cValuesAssignment_1_1_8_2_1_1_1; }

		//ProjectNameFieldValue
		public RuleCall getValuesProjectNameFieldValueParserRuleCall_1_1_8_2_1_1_1_0() { return cValuesProjectNameFieldValueParserRuleCall_1_1_8_2_1_1_1_0; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_1_8_2_1_1_2() { return cBoostTerminalRuleCall_1_1_8_2_1_1_2; }

		//")"
		public Keyword getRightParenthesisKeyword_1_1_8_2_1_2() { return cRightParenthesisKeyword_1_1_8_2_1_2; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_1_8_3() { return cBoostTerminalRuleCall_1_1_8_3; }

		//field=AnnotationField ":" (values+=AnnotationFieldValue | "(" (UnaryExpression? values+=AnnotationFieldValue Boost?)*
		//")") Boost?
		public Group getGroup_1_1_9() { return cGroup_1_1_9; }

		//field=AnnotationField
		public Assignment getFieldAssignment_1_1_9_0() { return cFieldAssignment_1_1_9_0; }

		//AnnotationField
		public RuleCall getFieldAnnotationFieldParserRuleCall_1_1_9_0_0() { return cFieldAnnotationFieldParserRuleCall_1_1_9_0_0; }

		//":"
		public Keyword getColonKeyword_1_1_9_1() { return cColonKeyword_1_1_9_1; }

		//values+=AnnotationFieldValue | "(" (UnaryExpression? values+=AnnotationFieldValue Boost?)* ")"
		public Alternatives getAlternatives_1_1_9_2() { return cAlternatives_1_1_9_2; }

		//values+=AnnotationFieldValue
		public Assignment getValuesAssignment_1_1_9_2_0() { return cValuesAssignment_1_1_9_2_0; }

		//AnnotationFieldValue
		public RuleCall getValuesAnnotationFieldValueParserRuleCall_1_1_9_2_0_0() { return cValuesAnnotationFieldValueParserRuleCall_1_1_9_2_0_0; }

		//"(" (UnaryExpression? values+=AnnotationFieldValue Boost?)* ")"
		public Group getGroup_1_1_9_2_1() { return cGroup_1_1_9_2_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1_9_2_1_0() { return cLeftParenthesisKeyword_1_1_9_2_1_0; }

		//(UnaryExpression? values+=AnnotationFieldValue Boost?)*
		public Group getGroup_1_1_9_2_1_1() { return cGroup_1_1_9_2_1_1; }

		//UnaryExpression?
		public RuleCall getUnaryExpressionParserRuleCall_1_1_9_2_1_1_0() { return cUnaryExpressionParserRuleCall_1_1_9_2_1_1_0; }

		//values+=AnnotationFieldValue
		public Assignment getValuesAssignment_1_1_9_2_1_1_1() { return cValuesAssignment_1_1_9_2_1_1_1; }

		//AnnotationFieldValue
		public RuleCall getValuesAnnotationFieldValueParserRuleCall_1_1_9_2_1_1_1_0() { return cValuesAnnotationFieldValueParserRuleCall_1_1_9_2_1_1_1_0; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_1_9_2_1_1_2() { return cBoostTerminalRuleCall_1_1_9_2_1_1_2; }

		//")"
		public Keyword getRightParenthesisKeyword_1_1_9_2_1_2() { return cRightParenthesisKeyword_1_1_9_2_1_2; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_1_9_3() { return cBoostTerminalRuleCall_1_1_9_3; }

		//field=DefinitionType ":" (values+=DefinitionTypeValue | "(" (UnaryExpression? values+=DefinitionTypeValue Boost?)* ")")
		//Boost?
		public Group getGroup_1_1_10() { return cGroup_1_1_10; }

		//field=DefinitionType
		public Assignment getFieldAssignment_1_1_10_0() { return cFieldAssignment_1_1_10_0; }

		//DefinitionType
		public RuleCall getFieldDefinitionTypeParserRuleCall_1_1_10_0_0() { return cFieldDefinitionTypeParserRuleCall_1_1_10_0_0; }

		//":"
		public Keyword getColonKeyword_1_1_10_1() { return cColonKeyword_1_1_10_1; }

		//values+=DefinitionTypeValue | "(" (UnaryExpression? values+=DefinitionTypeValue Boost?)* ")"
		public Alternatives getAlternatives_1_1_10_2() { return cAlternatives_1_1_10_2; }

		//values+=DefinitionTypeValue
		public Assignment getValuesAssignment_1_1_10_2_0() { return cValuesAssignment_1_1_10_2_0; }

		//DefinitionTypeValue
		public RuleCall getValuesDefinitionTypeValueParserRuleCall_1_1_10_2_0_0() { return cValuesDefinitionTypeValueParserRuleCall_1_1_10_2_0_0; }

		//"(" (UnaryExpression? values+=DefinitionTypeValue Boost?)* ")"
		public Group getGroup_1_1_10_2_1() { return cGroup_1_1_10_2_1; }

		//"("
		public Keyword getLeftParenthesisKeyword_1_1_10_2_1_0() { return cLeftParenthesisKeyword_1_1_10_2_1_0; }

		//(UnaryExpression? values+=DefinitionTypeValue Boost?)*
		public Group getGroup_1_1_10_2_1_1() { return cGroup_1_1_10_2_1_1; }

		//UnaryExpression?
		public RuleCall getUnaryExpressionParserRuleCall_1_1_10_2_1_1_0() { return cUnaryExpressionParserRuleCall_1_1_10_2_1_1_0; }

		//values+=DefinitionTypeValue
		public Assignment getValuesAssignment_1_1_10_2_1_1_1() { return cValuesAssignment_1_1_10_2_1_1_1; }

		//DefinitionTypeValue
		public RuleCall getValuesDefinitionTypeValueParserRuleCall_1_1_10_2_1_1_1_0() { return cValuesDefinitionTypeValueParserRuleCall_1_1_10_2_1_1_1_0; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_1_10_2_1_1_2() { return cBoostTerminalRuleCall_1_1_10_2_1_1_2; }

		//")"
		public Keyword getRightParenthesisKeyword_1_1_10_2_1_2() { return cRightParenthesisKeyword_1_1_10_2_1_2; }

		//Boost?
		public RuleCall getBoostTerminalRuleCall_1_1_10_3() { return cBoostTerminalRuleCall_1_1_10_3; }
	}

	public class SimpleFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleField");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cValueFriendlyNameKeyword_0_0 = (Keyword)cValueAssignment_0.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cValueReturnVariableExpressionsKeyword_1_0 = (Keyword)cValueAssignment_1.eContents().get(0);
		private final Assignment cValueAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cValueAllDeclaredMethodNamesKeyword_2_0 = (Keyword)cValueAssignment_2.eContents().get(0);
		private final Assignment cValueAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final Keyword cValueDeclaredMethodNamesKeyword_3_0 = (Keyword)cValueAssignment_3.eContents().get(0);
		private final Assignment cValueAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final Keyword cValueDeclaredFieldNamesKeyword_4_0 = (Keyword)cValueAssignment_4.eContents().get(0);
		private final Assignment cValueAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final Keyword cValueAllDeclaredFieldNamesKeyword_5_0 = (Keyword)cValueAssignment_5.eContents().get(0);
		private final Assignment cValueAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final Keyword cValueFullTextKeyword_6_0 = (Keyword)cValueAssignment_6.eContents().get(0);
		private final Assignment cValueAssignment_7 = (Assignment)cAlternatives.eContents().get(7);
		private final Keyword cValueFieldsReadKeyword_7_0 = (Keyword)cValueAssignment_7.eContents().get(0);
		private final Assignment cValueAssignment_8 = (Assignment)cAlternatives.eContents().get(8);
		private final Keyword cValueFieldsWrittenKeyword_8_0 = (Keyword)cValueAssignment_8.eContents().get(0);
		private final Assignment cValueAssignment_9 = (Assignment)cAlternatives.eContents().get(9);
		private final Keyword cValueUsedFieldsInFinallyKeyword_9_0 = (Keyword)cValueAssignment_9.eContents().get(0);
		private final Assignment cValueAssignment_10 = (Assignment)cAlternatives.eContents().get(10);
		private final Keyword cValueUsedFieldsInTryKeyword_10_0 = (Keyword)cValueAssignment_10.eContents().get(0);
		private final Assignment cValueAssignment_11 = (Assignment)cAlternatives.eContents().get(11);
		private final Keyword cValueVariableNameKeyword_11_0 = (Keyword)cValueAssignment_11.eContents().get(0);
		private final Assignment cValueAssignment_12 = (Assignment)cAlternatives.eContents().get(12);
		private final Keyword cValueParameterTypesStructuralKeyword_12_0 = (Keyword)cValueAssignment_12.eContents().get(0);
		
		////Generated Rule. Do not modify!
		//
		//SimpleField:
		//	value="FriendlyName" | value="ReturnVariableExpressions" | value="AllDeclaredMethodNames" |
		//	value="DeclaredMethodNames" | value="DeclaredFieldNames" | value="AllDeclaredFieldNames" | value="FullText" |
		//	value="FieldsRead" | value="FieldsWritten" | value="UsedFieldsInFinally" | value="UsedFieldsInTry" |
		//	value="VariableName" | value="ParameterTypesStructural";
		public ParserRule getRule() { return rule; }

		//value="FriendlyName" | value="ReturnVariableExpressions" | value="AllDeclaredMethodNames" | value="DeclaredMethodNames"
		//| value="DeclaredFieldNames" | value="AllDeclaredFieldNames" | value="FullText" | value="FieldsRead" |
		//value="FieldsWritten" | value="UsedFieldsInFinally" | value="UsedFieldsInTry" | value="VariableName" |
		//value="ParameterTypesStructural"
		public Alternatives getAlternatives() { return cAlternatives; }

		//value="FriendlyName"
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }

		//"FriendlyName"
		public Keyword getValueFriendlyNameKeyword_0_0() { return cValueFriendlyNameKeyword_0_0; }

		//value="ReturnVariableExpressions"
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//"ReturnVariableExpressions"
		public Keyword getValueReturnVariableExpressionsKeyword_1_0() { return cValueReturnVariableExpressionsKeyword_1_0; }

		//value="AllDeclaredMethodNames"
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//"AllDeclaredMethodNames"
		public Keyword getValueAllDeclaredMethodNamesKeyword_2_0() { return cValueAllDeclaredMethodNamesKeyword_2_0; }

		//value="DeclaredMethodNames"
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//"DeclaredMethodNames"
		public Keyword getValueDeclaredMethodNamesKeyword_3_0() { return cValueDeclaredMethodNamesKeyword_3_0; }

		//value="DeclaredFieldNames"
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//"DeclaredFieldNames"
		public Keyword getValueDeclaredFieldNamesKeyword_4_0() { return cValueDeclaredFieldNamesKeyword_4_0; }

		//value="AllDeclaredFieldNames"
		public Assignment getValueAssignment_5() { return cValueAssignment_5; }

		//"AllDeclaredFieldNames"
		public Keyword getValueAllDeclaredFieldNamesKeyword_5_0() { return cValueAllDeclaredFieldNamesKeyword_5_0; }

		//value="FullText"
		public Assignment getValueAssignment_6() { return cValueAssignment_6; }

		//"FullText"
		public Keyword getValueFullTextKeyword_6_0() { return cValueFullTextKeyword_6_0; }

		//value="FieldsRead"
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }

		//"FieldsRead"
		public Keyword getValueFieldsReadKeyword_7_0() { return cValueFieldsReadKeyword_7_0; }

		//value="FieldsWritten"
		public Assignment getValueAssignment_8() { return cValueAssignment_8; }

		//"FieldsWritten"
		public Keyword getValueFieldsWrittenKeyword_8_0() { return cValueFieldsWrittenKeyword_8_0; }

		//value="UsedFieldsInFinally"
		public Assignment getValueAssignment_9() { return cValueAssignment_9; }

		//"UsedFieldsInFinally"
		public Keyword getValueUsedFieldsInFinallyKeyword_9_0() { return cValueUsedFieldsInFinallyKeyword_9_0; }

		//value="UsedFieldsInTry"
		public Assignment getValueAssignment_10() { return cValueAssignment_10; }

		//"UsedFieldsInTry"
		public Keyword getValueUsedFieldsInTryKeyword_10_0() { return cValueUsedFieldsInTryKeyword_10_0; }

		//value="VariableName"
		public Assignment getValueAssignment_11() { return cValueAssignment_11; }

		//"VariableName"
		public Keyword getValueVariableNameKeyword_11_0() { return cValueVariableNameKeyword_11_0; }

		//value="ParameterTypesStructural"
		public Assignment getValueAssignment_12() { return cValueAssignment_12; }

		//"ParameterTypesStructural"
		public Keyword getValueParameterTypesStructuralKeyword_12_0() { return cValueParameterTypesStructuralKeyword_12_0; }
	}

	public class TypeFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeField");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cValueFullyQualifiedNameKeyword_0_0 = (Keyword)cValueAssignment_0.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cValueImplementedTypesKeyword_1_0 = (Keyword)cValueAssignment_1.eContents().get(0);
		private final Assignment cValueAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cValueExtendedTypesKeyword_2_0 = (Keyword)cValueAssignment_2.eContents().get(0);
		private final Assignment cValueAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final Keyword cValueUsedTypesKeyword_3_0 = (Keyword)cValueAssignment_3.eContents().get(0);
		private final Assignment cValueAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final Keyword cValueUsedTypesInTryKeyword_4_0 = (Keyword)cValueAssignment_4.eContents().get(0);
		private final Assignment cValueAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final Keyword cValueUsedTypesInFinallyKeyword_5_0 = (Keyword)cValueAssignment_5.eContents().get(0);
		private final Assignment cValueAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final Keyword cValueParameterTypesKeyword_6_0 = (Keyword)cValueAssignment_6.eContents().get(0);
		private final Assignment cValueAssignment_7 = (Assignment)cAlternatives.eContents().get(7);
		private final Keyword cValueReturnTypeKeyword_7_0 = (Keyword)cValueAssignment_7.eContents().get(0);
		private final Assignment cValueAssignment_8 = (Assignment)cAlternatives.eContents().get(8);
		private final Keyword cValueInstanceofTypesKeyword_8_0 = (Keyword)cValueAssignment_8.eContents().get(0);
		private final Assignment cValueAssignment_9 = (Assignment)cAlternatives.eContents().get(9);
		private final Keyword cValueAllImplementedTypesKeyword_9_0 = (Keyword)cValueAssignment_9.eContents().get(0);
		private final Assignment cValueAssignment_10 = (Assignment)cAlternatives.eContents().get(10);
		private final Keyword cValueAllExtendedTypesKeyword_10_0 = (Keyword)cValueAssignment_10.eContents().get(0);
		private final Assignment cValueAssignment_11 = (Assignment)cAlternatives.eContents().get(11);
		private final Keyword cValueFieldTypeKeyword_11_0 = (Keyword)cValueAssignment_11.eContents().get(0);
		private final Assignment cValueAssignment_12 = (Assignment)cAlternatives.eContents().get(12);
		private final Keyword cValueCaughtTypeKeyword_12_0 = (Keyword)cValueAssignment_12.eContents().get(0);
		private final Assignment cValueAssignment_13 = (Assignment)cAlternatives.eContents().get(13);
		private final Keyword cValueDeclaredFieldTypesKeyword_13_0 = (Keyword)cValueAssignment_13.eContents().get(0);
		private final Assignment cValueAssignment_14 = (Assignment)cAlternatives.eContents().get(14);
		private final Keyword cValueDeclaringTypeKeyword_14_0 = (Keyword)cValueAssignment_14.eContents().get(0);
		private final Assignment cValueAssignment_15 = (Assignment)cAlternatives.eContents().get(15);
		private final Keyword cValueVariableTypeKeyword_15_0 = (Keyword)cValueAssignment_15.eContents().get(0);
		private final Assignment cValueAssignment_16 = (Assignment)cAlternatives.eContents().get(16);
		private final Keyword cValueCheckedExceptionsKeyword_16_0 = (Keyword)cValueAssignment_16.eContents().get(0);
		
		////Generated Rule. Do not modify!
		//
		//TypeField:
		//	value="FullyQualifiedName" | value="ImplementedTypes" | value="ExtendedTypes" | value="UsedTypes" |
		//	value="UsedTypesInTry" | value="UsedTypesInFinally" | value="ParameterTypes" | value="ReturnType" |
		//	value="InstanceofTypes" | value="AllImplementedTypes" | value="AllExtendedTypes" | value="FieldType" |
		//	value="CaughtType" | value="DeclaredFieldTypes" | value="DeclaringType" | value="VariableType" |
		//	value="CheckedExceptions";
		public ParserRule getRule() { return rule; }

		//value="FullyQualifiedName" | value="ImplementedTypes" | value="ExtendedTypes" | value="UsedTypes" |
		//value="UsedTypesInTry" | value="UsedTypesInFinally" | value="ParameterTypes" | value="ReturnType" |
		//value="InstanceofTypes" | value="AllImplementedTypes" | value="AllExtendedTypes" | value="FieldType" |
		//value="CaughtType" | value="DeclaredFieldTypes" | value="DeclaringType" | value="VariableType" |
		//value="CheckedExceptions"
		public Alternatives getAlternatives() { return cAlternatives; }

		//value="FullyQualifiedName"
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }

		//"FullyQualifiedName"
		public Keyword getValueFullyQualifiedNameKeyword_0_0() { return cValueFullyQualifiedNameKeyword_0_0; }

		//value="ImplementedTypes"
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//"ImplementedTypes"
		public Keyword getValueImplementedTypesKeyword_1_0() { return cValueImplementedTypesKeyword_1_0; }

		//value="ExtendedTypes"
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//"ExtendedTypes"
		public Keyword getValueExtendedTypesKeyword_2_0() { return cValueExtendedTypesKeyword_2_0; }

		//value="UsedTypes"
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//"UsedTypes"
		public Keyword getValueUsedTypesKeyword_3_0() { return cValueUsedTypesKeyword_3_0; }

		//value="UsedTypesInTry"
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//"UsedTypesInTry"
		public Keyword getValueUsedTypesInTryKeyword_4_0() { return cValueUsedTypesInTryKeyword_4_0; }

		//value="UsedTypesInFinally"
		public Assignment getValueAssignment_5() { return cValueAssignment_5; }

		//"UsedTypesInFinally"
		public Keyword getValueUsedTypesInFinallyKeyword_5_0() { return cValueUsedTypesInFinallyKeyword_5_0; }

		//value="ParameterTypes"
		public Assignment getValueAssignment_6() { return cValueAssignment_6; }

		//"ParameterTypes"
		public Keyword getValueParameterTypesKeyword_6_0() { return cValueParameterTypesKeyword_6_0; }

		//value="ReturnType"
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }

		//"ReturnType"
		public Keyword getValueReturnTypeKeyword_7_0() { return cValueReturnTypeKeyword_7_0; }

		//value="InstanceofTypes"
		public Assignment getValueAssignment_8() { return cValueAssignment_8; }

		//"InstanceofTypes"
		public Keyword getValueInstanceofTypesKeyword_8_0() { return cValueInstanceofTypesKeyword_8_0; }

		//value="AllImplementedTypes"
		public Assignment getValueAssignment_9() { return cValueAssignment_9; }

		//"AllImplementedTypes"
		public Keyword getValueAllImplementedTypesKeyword_9_0() { return cValueAllImplementedTypesKeyword_9_0; }

		//value="AllExtendedTypes"
		public Assignment getValueAssignment_10() { return cValueAssignment_10; }

		//"AllExtendedTypes"
		public Keyword getValueAllExtendedTypesKeyword_10_0() { return cValueAllExtendedTypesKeyword_10_0; }

		//value="FieldType"
		public Assignment getValueAssignment_11() { return cValueAssignment_11; }

		//"FieldType"
		public Keyword getValueFieldTypeKeyword_11_0() { return cValueFieldTypeKeyword_11_0; }

		//value="CaughtType"
		public Assignment getValueAssignment_12() { return cValueAssignment_12; }

		//"CaughtType"
		public Keyword getValueCaughtTypeKeyword_12_0() { return cValueCaughtTypeKeyword_12_0; }

		//value="DeclaredFieldTypes"
		public Assignment getValueAssignment_13() { return cValueAssignment_13; }

		//"DeclaredFieldTypes"
		public Keyword getValueDeclaredFieldTypesKeyword_13_0() { return cValueDeclaredFieldTypesKeyword_13_0; }

		//value="DeclaringType"
		public Assignment getValueAssignment_14() { return cValueAssignment_14; }

		//"DeclaringType"
		public Keyword getValueDeclaringTypeKeyword_14_0() { return cValueDeclaringTypeKeyword_14_0; }

		//value="VariableType"
		public Assignment getValueAssignment_15() { return cValueAssignment_15; }

		//"VariableType"
		public Keyword getValueVariableTypeKeyword_15_0() { return cValueVariableTypeKeyword_15_0; }

		//value="CheckedExceptions"
		public Assignment getValueAssignment_16() { return cValueAssignment_16; }

		//"CheckedExceptions"
		public Keyword getValueCheckedExceptionsKeyword_16_0() { return cValueCheckedExceptionsKeyword_16_0; }
	}

	public class MethodFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MethodField");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Assignment cValueAssignment_0 = (Assignment)cAlternatives.eContents().get(0);
		private final Keyword cValueUsedMethodsKeyword_0_0 = (Keyword)cValueAssignment_0.eContents().get(0);
		private final Assignment cValueAssignment_1 = (Assignment)cAlternatives.eContents().get(1);
		private final Keyword cValueUsedMethodsInTryKeyword_1_0 = (Keyword)cValueAssignment_1.eContents().get(0);
		private final Assignment cValueAssignment_2 = (Assignment)cAlternatives.eContents().get(2);
		private final Keyword cValueUsedMethodsInFinallyKeyword_2_0 = (Keyword)cValueAssignment_2.eContents().get(0);
		private final Assignment cValueAssignment_3 = (Assignment)cAlternatives.eContents().get(3);
		private final Keyword cValueOverriddenMethodsKeyword_3_0 = (Keyword)cValueAssignment_3.eContents().get(0);
		private final Assignment cValueAssignment_4 = (Assignment)cAlternatives.eContents().get(4);
		private final Keyword cValueDeclaredMethodsKeyword_4_0 = (Keyword)cValueAssignment_4.eContents().get(0);
		private final Assignment cValueAssignment_5 = (Assignment)cAlternatives.eContents().get(5);
		private final Keyword cValueDeclaringMethodKeyword_5_0 = (Keyword)cValueAssignment_5.eContents().get(0);
		private final Assignment cValueAssignment_6 = (Assignment)cAlternatives.eContents().get(6);
		private final Keyword cValueUsedAsParameterInMethodsKeyword_6_0 = (Keyword)cValueAssignment_6.eContents().get(0);
		private final Assignment cValueAssignment_7 = (Assignment)cAlternatives.eContents().get(7);
		private final Keyword cValueUsedAsTargetForMethodsKeyword_7_0 = (Keyword)cValueAssignment_7.eContents().get(0);
		
		////Generated Rule. Do not modify!
		//
		//MethodField:
		//	value="UsedMethods" | value="UsedMethodsInTry" | value="UsedMethodsInFinally" | value="OverriddenMethods" |
		//	value="DeclaredMethods" | value="DeclaringMethod" | value="UsedAsParameterInMethods" | value="UsedAsTargetForMethods";
		public ParserRule getRule() { return rule; }

		//value="UsedMethods" | value="UsedMethodsInTry" | value="UsedMethodsInFinally" | value="OverriddenMethods" |
		//value="DeclaredMethods" | value="DeclaringMethod" | value="UsedAsParameterInMethods" | value="UsedAsTargetForMethods"
		public Alternatives getAlternatives() { return cAlternatives; }

		//value="UsedMethods"
		public Assignment getValueAssignment_0() { return cValueAssignment_0; }

		//"UsedMethods"
		public Keyword getValueUsedMethodsKeyword_0_0() { return cValueUsedMethodsKeyword_0_0; }

		//value="UsedMethodsInTry"
		public Assignment getValueAssignment_1() { return cValueAssignment_1; }

		//"UsedMethodsInTry"
		public Keyword getValueUsedMethodsInTryKeyword_1_0() { return cValueUsedMethodsInTryKeyword_1_0; }

		//value="UsedMethodsInFinally"
		public Assignment getValueAssignment_2() { return cValueAssignment_2; }

		//"UsedMethodsInFinally"
		public Keyword getValueUsedMethodsInFinallyKeyword_2_0() { return cValueUsedMethodsInFinallyKeyword_2_0; }

		//value="OverriddenMethods"
		public Assignment getValueAssignment_3() { return cValueAssignment_3; }

		//"OverriddenMethods"
		public Keyword getValueOverriddenMethodsKeyword_3_0() { return cValueOverriddenMethodsKeyword_3_0; }

		//value="DeclaredMethods"
		public Assignment getValueAssignment_4() { return cValueAssignment_4; }

		//"DeclaredMethods"
		public Keyword getValueDeclaredMethodsKeyword_4_0() { return cValueDeclaredMethodsKeyword_4_0; }

		//value="DeclaringMethod"
		public Assignment getValueAssignment_5() { return cValueAssignment_5; }

		//"DeclaringMethod"
		public Keyword getValueDeclaringMethodKeyword_5_0() { return cValueDeclaringMethodKeyword_5_0; }

		//value="UsedAsParameterInMethods"
		public Assignment getValueAssignment_6() { return cValueAssignment_6; }

		//"UsedAsParameterInMethods"
		public Keyword getValueUsedAsParameterInMethodsKeyword_6_0() { return cValueUsedAsParameterInMethodsKeyword_6_0; }

		//value="UsedAsTargetForMethods"
		public Assignment getValueAssignment_7() { return cValueAssignment_7; }

		//"UsedAsTargetForMethods"
		public Keyword getValueUsedAsTargetForMethodsKeyword_7_0() { return cValueUsedAsTargetForMethodsKeyword_7_0; }
	}

	public class FilePathFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FilePathField");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cValueResourcePathKeyword_0 = (Keyword)cValueAssignment.eContents().get(0);
		
		////Generated Rule. Do not modify!
		//
		//FilePathField:
		//	value="ResourcePath";
		public ParserRule getRule() { return rule; }

		//value="ResourcePath"
		public Assignment getValueAssignment() { return cValueAssignment; }

		//"ResourcePath"
		public Keyword getValueResourcePathKeyword_0() { return cValueResourcePathKeyword_0; }
	}

	public class NumberFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NumberField");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cValueParameterCountKeyword_0 = (Keyword)cValueAssignment.eContents().get(0);
		
		////Generated Rule. Do not modify!
		//
		//NumberField:
		//	value="ParameterCount";
		public ParserRule getRule() { return rule; }

		//value="ParameterCount"
		public Assignment getValueAssignment() { return cValueAssignment; }

		//"ParameterCount"
		public Keyword getValueParameterCountKeyword_0() { return cValueParameterCountKeyword_0; }
	}

	public class ModifierFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModifierField");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cValueModifiersKeyword_0 = (Keyword)cValueAssignment.eContents().get(0);
		
		////Generated Rule. Do not modify!
		//
		//ModifierField:
		//	value="Modifiers";
		public ParserRule getRule() { return rule; }

		//value="Modifiers"
		public Assignment getValueAssignment() { return cValueAssignment; }

		//"Modifiers"
		public Keyword getValueModifiersKeyword_0() { return cValueModifiersKeyword_0; }
	}

	public class TimeFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TimeField");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cValueTimestampKeyword_0 = (Keyword)cValueAssignment.eContents().get(0);
		
		////Generated Rule. Do not modify!
		//
		//TimeField:
		//	value="Timestamp";
		public ParserRule getRule() { return rule; }

		//value="Timestamp"
		public Assignment getValueAssignment() { return cValueAssignment; }

		//"Timestamp"
		public Keyword getValueTimestampKeyword_0() { return cValueTimestampKeyword_0; }
	}

	public class DocumentTypeFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DocumentTypeField");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cValueTypeKeyword_0 = (Keyword)cValueAssignment.eContents().get(0);
		
		////Generated Rule. Do not modify!
		//
		//DocumentTypeField:
		//	value="Type";
		public ParserRule getRule() { return rule; }

		//value="Type"
		public Assignment getValueAssignment() { return cValueAssignment; }

		//"Type"
		public Keyword getValueTypeKeyword_0() { return cValueTypeKeyword_0; }
	}

	public class ProjectNameFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ProjectNameField");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cValueProjectNameKeyword_0 = (Keyword)cValueAssignment.eContents().get(0);
		
		////Generated Rule. Do not modify!
		//
		//ProjectNameField:
		//	value="ProjectName";
		public ParserRule getRule() { return rule; }

		//value="ProjectName"
		public Assignment getValueAssignment() { return cValueAssignment; }

		//"ProjectName"
		public Keyword getValueProjectNameKeyword_0() { return cValueProjectNameKeyword_0; }
	}

	public class AnnotationFieldElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnotationField");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cValueAnnotationsKeyword_0 = (Keyword)cValueAssignment.eContents().get(0);
		
		////Generated Rule. Do not modify!
		//
		//AnnotationField:
		//	value="Annotations";
		public ParserRule getRule() { return rule; }

		//value="Annotations"
		public Assignment getValueAssignment() { return cValueAssignment; }

		//"Annotations"
		public Keyword getValueAnnotationsKeyword_0() { return cValueAnnotationsKeyword_0; }
	}

	public class DefinitionTypeElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DefinitionType");
		private final Assignment cValueAssignment = (Assignment)rule.eContents().get(1);
		private final Keyword cValueVariableDefinitionKeyword_0 = (Keyword)cValueAssignment.eContents().get(0);
		
		////Generated Rule. Do not modify!
		//
		//DefinitionType:
		//	value="VariableDefinition";
		public ParserRule getRule() { return rule; }

		//value="VariableDefinition"
		public Assignment getValueAssignment() { return cValueAssignment; }

		//"VariableDefinition"
		public Keyword getValueVariableDefinitionKeyword_0() { return cValueVariableDefinitionKeyword_0; }
	}

	public class SimpleFieldValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "SimpleFieldValue");
		private final RuleCall cNameWithWCTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		/// *
		//
		//	End of generated rules.
		//
		//	* / SimpleFieldValue:
		//	NameWithWC;
		public ParserRule getRule() { return rule; }

		//NameWithWC
		public RuleCall getNameWithWCTerminalRuleCall() { return cNameWithWCTerminalRuleCall; }
	}

	public class MethodFieldValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "MethodFieldValue");
		private final RuleCall cNameWithWCTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//MethodFieldValue:
		//	NameWithWC;
		public ParserRule getRule() { return rule; }

		//NameWithWC
		public RuleCall getNameWithWCTerminalRuleCall() { return cNameWithWCTerminalRuleCall; }
	}

	public class ProjectNameFieldValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ProjectNameFieldValue");
		private final RuleCall cNameWithWCTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//ProjectNameFieldValue:
		//	NameWithWC;
		public ParserRule getRule() { return rule; }

		//NameWithWC
		public RuleCall getNameWithWCTerminalRuleCall() { return cNameWithWCTerminalRuleCall; }
	}

	public class NumberFieldValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "NumberFieldValue");
		private final RuleCall cINTTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//NumberFieldValue:
		//	INT;
		public ParserRule getRule() { return rule; }

		//INT
		public RuleCall getINTTerminalRuleCall() { return cINTTerminalRuleCall; }
	}

	public class ModifierFieldValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "ModifierFieldValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cPrivateKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cPublicKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cStaticKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cFinalKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cAbstractKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		private final Keyword cProtectedKeyword_5 = (Keyword)cAlternatives.eContents().get(5);
		
		//ModifierFieldValue:
		//	"private" | "public" | "static" | "final" | "abstract" | "protected";
		public ParserRule getRule() { return rule; }

		//"private" | "public" | "static" | "final" | "abstract" | "protected"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"private"
		public Keyword getPrivateKeyword_0() { return cPrivateKeyword_0; }

		//"public"
		public Keyword getPublicKeyword_1() { return cPublicKeyword_1; }

		//"static"
		public Keyword getStaticKeyword_2() { return cStaticKeyword_2; }

		//"final"
		public Keyword getFinalKeyword_3() { return cFinalKeyword_3; }

		//"abstract"
		public Keyword getAbstractKeyword_4() { return cAbstractKeyword_4; }

		//"protected"
		public Keyword getProtectedKeyword_5() { return cProtectedKeyword_5; }
	}

	public class TimeFieldValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TimeFieldValue");
		private final RuleCall cNameWithWCTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//TimeFieldValue:
		//	NameWithWC;
		public ParserRule getRule() { return rule; }

		//NameWithWC
		public RuleCall getNameWithWCTerminalRuleCall() { return cNameWithWCTerminalRuleCall; }
	}

	public class DocumentTypeFieldValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DocumentTypeFieldValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cClassKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cMethodKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cFieldKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cTrycatchKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cVarusageKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		
		//DocumentTypeFieldValue:
		//	"class" | "method" | "field" | "trycatch" | "varusage";
		public ParserRule getRule() { return rule; }

		//"class" | "method" | "field" | "trycatch" | "varusage"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"class"
		public Keyword getClassKeyword_0() { return cClassKeyword_0; }

		//"method"
		public Keyword getMethodKeyword_1() { return cMethodKeyword_1; }

		//"field"
		public Keyword getFieldKeyword_2() { return cFieldKeyword_2; }

		//"trycatch"
		public Keyword getTrycatchKeyword_3() { return cTrycatchKeyword_3; }

		//"varusage"
		public Keyword getVarusageKeyword_4() { return cVarusageKeyword_4; }
	}

	public class AnnotationFieldValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "AnnotationFieldValue");
		private final RuleCall cNameWithWCTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//AnnotationFieldValue:
		//	NameWithWC;
		public ParserRule getRule() { return rule; }

		//NameWithWC
		public RuleCall getNameWithWCTerminalRuleCall() { return cNameWithWCTerminalRuleCall; }
	}

	public class TypeFieldValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "TypeFieldValue");
		private final RuleCall cNameWithWCTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		//TypeFieldValue:
		//	NameWithWC;
		public ParserRule getRule() { return rule; }

		//NameWithWC
		public RuleCall getNameWithWCTerminalRuleCall() { return cNameWithWCTerminalRuleCall; }
	}

	public class DefinitionTypeValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "DefinitionTypeValue");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cParameterKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cNullLiteralKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cMethodInvocationKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cInstanceCreationKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		private final Keyword cUninitializedKeyword_4 = (Keyword)cAlternatives.eContents().get(4);
		
		//DefinitionTypeValue:
		//	"parameter" | "nullLiteral" | "methodInvocation" | "instanceCreation" | "uninitialized";
		public ParserRule getRule() { return rule; }

		//"parameter" | "nullLiteral" | "methodInvocation" | "instanceCreation" | "uninitialized"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"parameter"
		public Keyword getParameterKeyword_0() { return cParameterKeyword_0; }

		//"nullLiteral"
		public Keyword getNullLiteralKeyword_1() { return cNullLiteralKeyword_1; }

		//"methodInvocation"
		public Keyword getMethodInvocationKeyword_2() { return cMethodInvocationKeyword_2; }

		//"instanceCreation"
		public Keyword getInstanceCreationKeyword_3() { return cInstanceCreationKeyword_3; }

		//"uninitialized"
		public Keyword getUninitializedKeyword_4() { return cUninitializedKeyword_4; }
	}

	public class UnaryExpressionElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "UnaryExpression");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final Keyword cHyphenMinusKeyword_0 = (Keyword)cAlternatives.eContents().get(0);
		private final Keyword cNOTKeyword_1 = (Keyword)cAlternatives.eContents().get(1);
		private final Keyword cExclamationMarkKeyword_2 = (Keyword)cAlternatives.eContents().get(2);
		private final Keyword cPlusSignKeyword_3 = (Keyword)cAlternatives.eContents().get(3);
		
		//UnaryExpression:
		//	"-" | "NOT" | "!" | "+";
		public ParserRule getRule() { return rule; }

		//"-" | "NOT" | "!" | "+"
		public Alternatives getAlternatives() { return cAlternatives; }

		//"-"
		public Keyword getHyphenMinusKeyword_0() { return cHyphenMinusKeyword_0; }

		//"NOT"
		public Keyword getNOTKeyword_1() { return cNOTKeyword_1; }

		//"!"
		public Keyword getExclamationMarkKeyword_2() { return cExclamationMarkKeyword_2; }

		//"+"
		public Keyword getPlusSignKeyword_3() { return cPlusSignKeyword_3; }
	}

	public class FilePathFieldValueElements extends AbstractParserRuleElementFinder {
		private final ParserRule rule = (ParserRule) GrammarUtil.findRuleForName(getGrammar(), "FilePathFieldValue");
		private final RuleCall cPathWithWCTerminalRuleCall = (RuleCall)rule.eContents().get(1);
		
		////-----------------
		//
		//FilePathFieldValue:
		//	PathWithWC;
		public ParserRule getRule() { return rule; }

		//PathWithWC
		public RuleCall getPathWithWCTerminalRuleCall() { return cPathWithWCTerminalRuleCall; }
	}
	
	
	public class BinaryOrElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "BinaryOr");
		private final Alternatives cAlternatives = (Alternatives)rule.eContents().get(1);
		private final EnumLiteralDeclaration cOr1EnumLiteralDeclaration_0 = (EnumLiteralDeclaration)cAlternatives.eContents().get(0);
		private final Keyword cOr1ORKeyword_0_0 = (Keyword)cOr1EnumLiteralDeclaration_0.eContents().get(0);
		private final EnumLiteralDeclaration cOr2EnumLiteralDeclaration_1 = (EnumLiteralDeclaration)cAlternatives.eContents().get(1);
		private final Keyword cOr2VerticalLineVerticalLineKeyword_1_0 = (Keyword)cOr2EnumLiteralDeclaration_1.eContents().get(0);
		
		//enum BinaryOr returns BinaryExp:
		//	or1="OR" | or2="||";
		public EnumRule getRule() { return rule; }

		//or1="OR" | or2="||"
		public Alternatives getAlternatives() { return cAlternatives; }

		//or1="OR"
		public EnumLiteralDeclaration getOr1EnumLiteralDeclaration_0() { return cOr1EnumLiteralDeclaration_0; }

		//"OR"
		public Keyword getOr1ORKeyword_0_0() { return cOr1ORKeyword_0_0; }

		//or2="||"
		public EnumLiteralDeclaration getOr2EnumLiteralDeclaration_1() { return cOr2EnumLiteralDeclaration_1; }

		//"||"
		public Keyword getOr2VerticalLineVerticalLineKeyword_1_0() { return cOr2VerticalLineVerticalLineKeyword_1_0; }
	}

	public class BinaryAndElements extends AbstractEnumRuleElementFinder {
		private final EnumRule rule = (EnumRule) GrammarUtil.findRuleForName(getGrammar(), "BinaryAnd");
		private final EnumLiteralDeclaration cAnd1EnumLiteralDeclaration = (EnumLiteralDeclaration)rule.eContents().get(1);
		private final Keyword cAnd1ANDKeyword_0 = (Keyword)cAnd1EnumLiteralDeclaration.eContents().get(0);
		
		//enum BinaryAnd returns BinaryExp:
		//	and1="AND";
		public EnumRule getRule() { return rule; }

		//and1="AND"
		public EnumLiteralDeclaration getAnd1EnumLiteralDeclaration() { return cAnd1EnumLiteralDeclaration; }

		//"AND"
		public Keyword getAnd1ANDKeyword_0() { return cAnd1ANDKeyword_0; }
	}
	
	private OrExpElements pOrExp;
	private AndExpElements pAndExp;
	private PrimaryElements pPrimary;
	private ClauseExpressionElements pClauseExpression;
	private SimpleFieldElements pSimpleField;
	private TypeFieldElements pTypeField;
	private MethodFieldElements pMethodField;
	private FilePathFieldElements pFilePathField;
	private NumberFieldElements pNumberField;
	private ModifierFieldElements pModifierField;
	private TimeFieldElements pTimeField;
	private DocumentTypeFieldElements pDocumentTypeField;
	private ProjectNameFieldElements pProjectNameField;
	private AnnotationFieldElements pAnnotationField;
	private DefinitionTypeElements pDefinitionType;
	private SimpleFieldValueElements pSimpleFieldValue;
	private MethodFieldValueElements pMethodFieldValue;
	private ProjectNameFieldValueElements pProjectNameFieldValue;
	private NumberFieldValueElements pNumberFieldValue;
	private ModifierFieldValueElements pModifierFieldValue;
	private TimeFieldValueElements pTimeFieldValue;
	private DocumentTypeFieldValueElements pDocumentTypeFieldValue;
	private AnnotationFieldValueElements pAnnotationFieldValue;
	private TypeFieldValueElements pTypeFieldValue;
	private DefinitionTypeValueElements pDefinitionTypeValue;
	private BinaryOrElements unknownRuleBinaryOr;
	private BinaryAndElements unknownRuleBinaryAnd;
	private UnaryExpressionElements pUnaryExpression;
	private TerminalRule tBoost;
	private TerminalRule tNameWithWC;
	private TerminalRule tPathWithWC;
	private FilePathFieldValueElements pFilePathFieldValue;
	
	private final GrammarProvider grammarProvider;

	private TerminalsGrammarAccess gaTerminals;

	@Inject
	public LuceneQueryGrammarAccess(GrammarProvider grammarProvider,
		TerminalsGrammarAccess gaTerminals) {
		this.grammarProvider = grammarProvider;
		this.gaTerminals = gaTerminals;
	}
	
	public Grammar getGrammar() {	
		return grammarProvider.getGrammar(this);
	}
	

	public TerminalsGrammarAccess getTerminalsGrammarAccess() {
		return gaTerminals;
	}

	
	/// * * 
	//
	// *   Query  ::= ( Clause )*
	//
	// *   Clause ::= ["+", "-"] [<TERM> ":"] ( <TERM> | "(" Query ")" )
	//
	// * * / // Right associativity. Why? See http://blog.efftinge.de/2010/08/parsing-expressions-with-xtext.html
	//
	//OrExp returns Expression:
	//	AndExp ({OrExp.left=current} or=BinaryOr? right=OrExp)?;
	public OrExpElements getOrExpAccess() {
		return (pOrExp != null) ? pOrExp : (pOrExp = new OrExpElements());
	}
	
	public ParserRule getOrExpRule() {
		return getOrExpAccess().getRule();
	}

	//// Right associativity. Why? See http://blog.efftinge.de/2010/08/parsing-expressions-with-xtext.html
	//
	//AndExp returns Expression:
	//	Primary ({AndExp.left=current} and=BinaryAnd right=AndExp)?;
	public AndExpElements getAndExpAccess() {
		return (pAndExp != null) ? pAndExp : (pAndExp = new AndExpElements());
	}
	
	public ParserRule getAndExpRule() {
		return getAndExpAccess().getRule();
	}

	//Primary returns Expression:
	//	value=ClauseExpression | UnaryExpression? "(" OrExp ")" Boost?;
	public PrimaryElements getPrimaryAccess() {
		return (pPrimary != null) ? pPrimary : (pPrimary = new PrimaryElements());
	}
	
	public ParserRule getPrimaryRule() {
		return getPrimaryAccess().getRule();
	}

	/// *
	//
	//	The following rules are generated. Do not modify. Modify source file instead.
	//
	// * / //Generated Rule. Do not modify!
	//
	//ClauseExpression:
	//	UnaryExpression? (default=SimpleFieldValue Boost? // Default field
	//
	//	| (field=SimpleField ":" (values+=SimpleFieldValue | "(" (UnaryExpression? values+=SimpleFieldValue Boost?)* ")")
	//	Boost? | field=TypeField ":" (values+=TypeFieldValue | "(" (UnaryExpression? values+=TypeFieldValue Boost?)* ")")
	//	Boost? | field=MethodField ":" (values+=MethodFieldValue | "(" (UnaryExpression? values+=MethodFieldValue Boost?)*
	//	")") Boost? | field=FilePathField ":" (values+=FilePathFieldValue | "(" (UnaryExpression? values+=FilePathFieldValue
	//	Boost?)* ")") Boost? | field=NumberField ":" (values+=NumberFieldValue | "(" (UnaryExpression?
	//	values+=NumberFieldValue Boost?)* ")") Boost? | field=ModifierField ":" (values+=ModifierFieldValue | "("
	//	(UnaryExpression? values+=ModifierFieldValue Boost?)* ")") Boost? | field=TimeField ":" (values+=TimeFieldValue | "("
	//	(UnaryExpression? values+=TimeFieldValue Boost?)* ")") Boost? | field=DocumentTypeField ":"
	//	(values+=DocumentTypeFieldValue | "(" (UnaryExpression? values+=DocumentTypeFieldValue Boost?)* ")") Boost? |
	//	field=ProjectNameField ":" (values+=ProjectNameFieldValue | "(" (UnaryExpression? values+=ProjectNameFieldValue
	//	Boost?)* ")") Boost? | field=AnnotationField ":" (values+=AnnotationFieldValue | "(" (UnaryExpression?
	//	values+=AnnotationFieldValue Boost?)* ")") Boost? | field=DefinitionType ":" (values+=DefinitionTypeValue | "("
	//	(UnaryExpression? values+=DefinitionTypeValue Boost?)* ")") Boost?));
	public ClauseExpressionElements getClauseExpressionAccess() {
		return (pClauseExpression != null) ? pClauseExpression : (pClauseExpression = new ClauseExpressionElements());
	}
	
	public ParserRule getClauseExpressionRule() {
		return getClauseExpressionAccess().getRule();
	}

	////Generated Rule. Do not modify!
	//
	//SimpleField:
	//	value="FriendlyName" | value="ReturnVariableExpressions" | value="AllDeclaredMethodNames" |
	//	value="DeclaredMethodNames" | value="DeclaredFieldNames" | value="AllDeclaredFieldNames" | value="FullText" |
	//	value="FieldsRead" | value="FieldsWritten" | value="UsedFieldsInFinally" | value="UsedFieldsInTry" |
	//	value="VariableName" | value="ParameterTypesStructural";
	public SimpleFieldElements getSimpleFieldAccess() {
		return (pSimpleField != null) ? pSimpleField : (pSimpleField = new SimpleFieldElements());
	}
	
	public ParserRule getSimpleFieldRule() {
		return getSimpleFieldAccess().getRule();
	}

	////Generated Rule. Do not modify!
	//
	//TypeField:
	//	value="FullyQualifiedName" | value="ImplementedTypes" | value="ExtendedTypes" | value="UsedTypes" |
	//	value="UsedTypesInTry" | value="UsedTypesInFinally" | value="ParameterTypes" | value="ReturnType" |
	//	value="InstanceofTypes" | value="AllImplementedTypes" | value="AllExtendedTypes" | value="FieldType" |
	//	value="CaughtType" | value="DeclaredFieldTypes" | value="DeclaringType" | value="VariableType" |
	//	value="CheckedExceptions";
	public TypeFieldElements getTypeFieldAccess() {
		return (pTypeField != null) ? pTypeField : (pTypeField = new TypeFieldElements());
	}
	
	public ParserRule getTypeFieldRule() {
		return getTypeFieldAccess().getRule();
	}

	////Generated Rule. Do not modify!
	//
	//MethodField:
	//	value="UsedMethods" | value="UsedMethodsInTry" | value="UsedMethodsInFinally" | value="OverriddenMethods" |
	//	value="DeclaredMethods" | value="DeclaringMethod" | value="UsedAsParameterInMethods" | value="UsedAsTargetForMethods";
	public MethodFieldElements getMethodFieldAccess() {
		return (pMethodField != null) ? pMethodField : (pMethodField = new MethodFieldElements());
	}
	
	public ParserRule getMethodFieldRule() {
		return getMethodFieldAccess().getRule();
	}

	////Generated Rule. Do not modify!
	//
	//FilePathField:
	//	value="ResourcePath";
	public FilePathFieldElements getFilePathFieldAccess() {
		return (pFilePathField != null) ? pFilePathField : (pFilePathField = new FilePathFieldElements());
	}
	
	public ParserRule getFilePathFieldRule() {
		return getFilePathFieldAccess().getRule();
	}

	////Generated Rule. Do not modify!
	//
	//NumberField:
	//	value="ParameterCount";
	public NumberFieldElements getNumberFieldAccess() {
		return (pNumberField != null) ? pNumberField : (pNumberField = new NumberFieldElements());
	}
	
	public ParserRule getNumberFieldRule() {
		return getNumberFieldAccess().getRule();
	}

	////Generated Rule. Do not modify!
	//
	//ModifierField:
	//	value="Modifiers";
	public ModifierFieldElements getModifierFieldAccess() {
		return (pModifierField != null) ? pModifierField : (pModifierField = new ModifierFieldElements());
	}
	
	public ParserRule getModifierFieldRule() {
		return getModifierFieldAccess().getRule();
	}

	////Generated Rule. Do not modify!
	//
	//TimeField:
	//	value="Timestamp";
	public TimeFieldElements getTimeFieldAccess() {
		return (pTimeField != null) ? pTimeField : (pTimeField = new TimeFieldElements());
	}
	
	public ParserRule getTimeFieldRule() {
		return getTimeFieldAccess().getRule();
	}

	////Generated Rule. Do not modify!
	//
	//DocumentTypeField:
	//	value="Type";
	public DocumentTypeFieldElements getDocumentTypeFieldAccess() {
		return (pDocumentTypeField != null) ? pDocumentTypeField : (pDocumentTypeField = new DocumentTypeFieldElements());
	}
	
	public ParserRule getDocumentTypeFieldRule() {
		return getDocumentTypeFieldAccess().getRule();
	}

	////Generated Rule. Do not modify!
	//
	//ProjectNameField:
	//	value="ProjectName";
	public ProjectNameFieldElements getProjectNameFieldAccess() {
		return (pProjectNameField != null) ? pProjectNameField : (pProjectNameField = new ProjectNameFieldElements());
	}
	
	public ParserRule getProjectNameFieldRule() {
		return getProjectNameFieldAccess().getRule();
	}

	////Generated Rule. Do not modify!
	//
	//AnnotationField:
	//	value="Annotations";
	public AnnotationFieldElements getAnnotationFieldAccess() {
		return (pAnnotationField != null) ? pAnnotationField : (pAnnotationField = new AnnotationFieldElements());
	}
	
	public ParserRule getAnnotationFieldRule() {
		return getAnnotationFieldAccess().getRule();
	}

	////Generated Rule. Do not modify!
	//
	//DefinitionType:
	//	value="VariableDefinition";
	public DefinitionTypeElements getDefinitionTypeAccess() {
		return (pDefinitionType != null) ? pDefinitionType : (pDefinitionType = new DefinitionTypeElements());
	}
	
	public ParserRule getDefinitionTypeRule() {
		return getDefinitionTypeAccess().getRule();
	}

	/// *
	//
	//	End of generated rules.
	//
	//	* / SimpleFieldValue:
	//	NameWithWC;
	public SimpleFieldValueElements getSimpleFieldValueAccess() {
		return (pSimpleFieldValue != null) ? pSimpleFieldValue : (pSimpleFieldValue = new SimpleFieldValueElements());
	}
	
	public ParserRule getSimpleFieldValueRule() {
		return getSimpleFieldValueAccess().getRule();
	}

	//MethodFieldValue:
	//	NameWithWC;
	public MethodFieldValueElements getMethodFieldValueAccess() {
		return (pMethodFieldValue != null) ? pMethodFieldValue : (pMethodFieldValue = new MethodFieldValueElements());
	}
	
	public ParserRule getMethodFieldValueRule() {
		return getMethodFieldValueAccess().getRule();
	}

	//ProjectNameFieldValue:
	//	NameWithWC;
	public ProjectNameFieldValueElements getProjectNameFieldValueAccess() {
		return (pProjectNameFieldValue != null) ? pProjectNameFieldValue : (pProjectNameFieldValue = new ProjectNameFieldValueElements());
	}
	
	public ParserRule getProjectNameFieldValueRule() {
		return getProjectNameFieldValueAccess().getRule();
	}

	//NumberFieldValue:
	//	INT;
	public NumberFieldValueElements getNumberFieldValueAccess() {
		return (pNumberFieldValue != null) ? pNumberFieldValue : (pNumberFieldValue = new NumberFieldValueElements());
	}
	
	public ParserRule getNumberFieldValueRule() {
		return getNumberFieldValueAccess().getRule();
	}

	//ModifierFieldValue:
	//	"private" | "public" | "static" | "final" | "abstract" | "protected";
	public ModifierFieldValueElements getModifierFieldValueAccess() {
		return (pModifierFieldValue != null) ? pModifierFieldValue : (pModifierFieldValue = new ModifierFieldValueElements());
	}
	
	public ParserRule getModifierFieldValueRule() {
		return getModifierFieldValueAccess().getRule();
	}

	//TimeFieldValue:
	//	NameWithWC;
	public TimeFieldValueElements getTimeFieldValueAccess() {
		return (pTimeFieldValue != null) ? pTimeFieldValue : (pTimeFieldValue = new TimeFieldValueElements());
	}
	
	public ParserRule getTimeFieldValueRule() {
		return getTimeFieldValueAccess().getRule();
	}

	//DocumentTypeFieldValue:
	//	"class" | "method" | "field" | "trycatch" | "varusage";
	public DocumentTypeFieldValueElements getDocumentTypeFieldValueAccess() {
		return (pDocumentTypeFieldValue != null) ? pDocumentTypeFieldValue : (pDocumentTypeFieldValue = new DocumentTypeFieldValueElements());
	}
	
	public ParserRule getDocumentTypeFieldValueRule() {
		return getDocumentTypeFieldValueAccess().getRule();
	}

	//AnnotationFieldValue:
	//	NameWithWC;
	public AnnotationFieldValueElements getAnnotationFieldValueAccess() {
		return (pAnnotationFieldValue != null) ? pAnnotationFieldValue : (pAnnotationFieldValue = new AnnotationFieldValueElements());
	}
	
	public ParserRule getAnnotationFieldValueRule() {
		return getAnnotationFieldValueAccess().getRule();
	}

	//TypeFieldValue:
	//	NameWithWC;
	public TypeFieldValueElements getTypeFieldValueAccess() {
		return (pTypeFieldValue != null) ? pTypeFieldValue : (pTypeFieldValue = new TypeFieldValueElements());
	}
	
	public ParserRule getTypeFieldValueRule() {
		return getTypeFieldValueAccess().getRule();
	}

	//DefinitionTypeValue:
	//	"parameter" | "nullLiteral" | "methodInvocation" | "instanceCreation" | "uninitialized";
	public DefinitionTypeValueElements getDefinitionTypeValueAccess() {
		return (pDefinitionTypeValue != null) ? pDefinitionTypeValue : (pDefinitionTypeValue = new DefinitionTypeValueElements());
	}
	
	public ParserRule getDefinitionTypeValueRule() {
		return getDefinitionTypeValueAccess().getRule();
	}

	//enum BinaryOr returns BinaryExp:
	//	or1="OR" | or2="||";
	public BinaryOrElements getBinaryOrAccess() {
		return (unknownRuleBinaryOr != null) ? unknownRuleBinaryOr : (unknownRuleBinaryOr = new BinaryOrElements());
	}
	
	public EnumRule getBinaryOrRule() {
		return getBinaryOrAccess().getRule();
	}

	//enum BinaryAnd returns BinaryExp:
	//	and1="AND";
	public BinaryAndElements getBinaryAndAccess() {
		return (unknownRuleBinaryAnd != null) ? unknownRuleBinaryAnd : (unknownRuleBinaryAnd = new BinaryAndElements());
	}
	
	public EnumRule getBinaryAndRule() {
		return getBinaryAndAccess().getRule();
	}

	//UnaryExpression:
	//	"-" | "NOT" | "!" | "+";
	public UnaryExpressionElements getUnaryExpressionAccess() {
		return (pUnaryExpression != null) ? pUnaryExpression : (pUnaryExpression = new UnaryExpressionElements());
	}
	
	public ParserRule getUnaryExpressionRule() {
		return getUnaryExpressionAccess().getRule();
	}

	//terminal Boost:
	//	"^" "0".."9"+ ("." "0".."9"+)?;
	public TerminalRule getBoostRule() {
		return (tBoost != null) ? tBoost : (tBoost = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "Boost"));
	} 

	//terminal NameWithWC:
	//	("a".."z" | "A".."Z" | "_" | "*" | "?" | "<" | ">" | "[" | "]") ("a".."z" | "A".."Z" | "_" | "0".."9" | "*" | "?" |
	//	"<" | ">" | "[" | "]" | ".")*;
	public TerminalRule getNameWithWCRule() {
		return (tNameWithWC != null) ? tNameWithWC : (tNameWithWC = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "NameWithWC"));
	} 

	//terminal PathWithWC:
	//	("A".."Z" ":" | ("a".."z" | "A".."Z" | "_" | "/")) ("a".."z" | "A".."Z" | "_" | "0".."9" | "*" | "?" | "." | "/")*;
	public TerminalRule getPathWithWCRule() {
		return (tPathWithWC != null) ? tPathWithWC : (tPathWithWC = (TerminalRule) GrammarUtil.findRuleForName(getGrammar(), "PathWithWC"));
	} 

	////-----------------
	//
	//FilePathFieldValue:
	//	PathWithWC;
	public FilePathFieldValueElements getFilePathFieldValueAccess() {
		return (pFilePathFieldValue != null) ? pFilePathFieldValue : (pFilePathFieldValue = new FilePathFieldValueElements());
	}
	
	public ParserRule getFilePathFieldValueRule() {
		return getFilePathFieldValueAccess().getRule();
	}

	//terminal ID:
	//	"^"? ("a".."z" | "A".."Z" | "_") ("a".."z" | "A".."Z" | "_" | "0".."9")*;
	public TerminalRule getIDRule() {
		return gaTerminals.getIDRule();
	} 

	//terminal INT returns ecore::EInt:
	//	"0".."9"+;
	public TerminalRule getINTRule() {
		return gaTerminals.getINTRule();
	} 

	//terminal STRING:
	//	"\"" ("\\" ("b" | "t" | "n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\""))* "\"" | "\'" ("\\" ("b" | "t" |
	//	"n" | "f" | "r" | "u" | "\"" | "\'" | "\\") | !("\\" | "\'"))* "\'";
	public TerminalRule getSTRINGRule() {
		return gaTerminals.getSTRINGRule();
	} 

	//terminal ML_COMMENT:
	//	"/ *"->"* /";
	public TerminalRule getML_COMMENTRule() {
		return gaTerminals.getML_COMMENTRule();
	} 

	//terminal SL_COMMENT:
	//	"//" !("\n" | "\r")* ("\r"? "\n")?;
	public TerminalRule getSL_COMMENTRule() {
		return gaTerminals.getSL_COMMENTRule();
	} 

	//terminal WS:
	//	(" " | "\t" | "\r" | "\n")+;
	public TerminalRule getWSRule() {
		return gaTerminals.getWSRule();
	} 

	//terminal ANY_OTHER:
	//	.;
	public TerminalRule getANY_OTHERRule() {
		return gaTerminals.getANY_OTHERRule();
	} 
}
