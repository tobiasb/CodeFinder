/*
* generated by Xtext
*/
grammar InternalQL1;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.eclipselabs.recommenders.codesearch.rcp.dslQL1.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.eclipselabs.recommenders.codesearch.rcp.dslQL1.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.eclipselabs.recommenders.codesearch.rcp.dslQL1.services.QL1GrammarAccess;

}

@parser::members {
 
 	private QL1GrammarAccess grammarAccess;
 	
    public void setGrammarAccess(QL1GrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleMethodPattern
entryRuleMethodPattern 
:
{ before(grammarAccess.getMethodPatternRule()); }
	 ruleMethodPattern
{ after(grammarAccess.getMethodPatternRule()); } 
	 EOF 
;

// Rule MethodPattern
ruleMethodPattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodPatternAccess().getDefinitionAssignment()); }
(rule__MethodPattern__DefinitionAssignment)
{ after(grammarAccess.getMethodPatternAccess().getDefinitionAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodPatternDefinition
entryRuleMethodPatternDefinition 
:
{ before(grammarAccess.getMethodPatternDefinitionRule()); }
	 ruleMethodPatternDefinition
{ after(grammarAccess.getMethodPatternDefinitionRule()); } 
	 EOF 
;

// Rule MethodPatternDefinition
ruleMethodPatternDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodPatternDefinitionAccess().getGroup()); }
(rule__MethodPatternDefinition__Group__0)
{ after(grammarAccess.getMethodPatternDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterDefinition
entryRuleParameterDefinition 
:
{ before(grammarAccess.getParameterDefinitionRule()); }
	 ruleParameterDefinition
{ after(grammarAccess.getParameterDefinitionRule()); } 
	 EOF 
;

// Rule ParameterDefinition
ruleParameterDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterDefinitionAccess().getGroup()); }
(rule__ParameterDefinition__Group__0)
{ after(grammarAccess.getParameterDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModifier
entryRuleModifier 
:
{ before(grammarAccess.getModifierRule()); }
	 ruleModifier
{ after(grammarAccess.getModifierRule()); } 
	 EOF 
;

// Rule Modifier
ruleModifier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModifierAccess().getGroup()); }
(rule__Modifier__Group__0)
{ after(grammarAccess.getModifierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleModifierValue
entryRuleModifierValue 
:
{ before(grammarAccess.getModifierValueRule()); }
	 ruleModifierValue
{ after(grammarAccess.getModifierValueRule()); } 
	 EOF 
;

// Rule ModifierValue
ruleModifierValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModifierValueAccess().getAlternatives()); }
(rule__ModifierValue__Alternatives)
{ after(grammarAccess.getModifierValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReturnType
entryRuleReturnType 
:
{ before(grammarAccess.getReturnTypeRule()); }
	 ruleReturnType
{ after(grammarAccess.getReturnTypeRule()); } 
	 EOF 
;

// Rule ReturnType
ruleReturnType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReturnTypeAccess().getValueAssignment()); }
(rule__ReturnType__ValueAssignment)
{ after(grammarAccess.getReturnTypeAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterElementHolder
entryRuleParameterElementHolder 
:
{ before(grammarAccess.getParameterElementHolderRule()); }
	 ruleParameterElementHolder
{ after(grammarAccess.getParameterElementHolderRule()); } 
	 EOF 
;

// Rule ParameterElementHolder
ruleParameterElementHolder
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterElementHolderAccess().getAlternatives()); }
(rule__ParameterElementHolder__Alternatives)
{ after(grammarAccess.getParameterElementHolderAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSingleElement
entryRuleSingleElement 
:
{ before(grammarAccess.getSingleElementRule()); }
	 ruleSingleElement
{ after(grammarAccess.getSingleElementRule()); } 
	 EOF 
;

// Rule SingleElement
ruleSingleElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSingleElementAccess().getValueAssignment()); }
(rule__SingleElement__ValueAssignment)
{ after(grammarAccess.getSingleElementAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMultiElement
entryRuleMultiElement 
:
{ before(grammarAccess.getMultiElementRule()); }
	 ruleMultiElement
{ after(grammarAccess.getMultiElementRule()); } 
	 EOF 
;

// Rule MultiElement
ruleMultiElement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMultiElementAccess().getGroup()); }
(rule__MultiElement__Group__0)
{ after(grammarAccess.getMultiElementAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterType
entryRuleParameterType 
:
{ before(grammarAccess.getParameterTypeRule()); }
	 ruleParameterType
{ after(grammarAccess.getParameterTypeRule()); } 
	 EOF 
;

// Rule ParameterType
ruleParameterType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterTypeAccess().getAlternatives()); }
(rule__ParameterType__Alternatives)
{ after(grammarAccess.getParameterTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleThrows
entryRuleThrows 
:
{ before(grammarAccess.getThrowsRule()); }
	 ruleThrows
{ after(grammarAccess.getThrowsRule()); } 
	 EOF 
;

// Rule Throws
ruleThrows
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getThrowsAccess().getGroup()); }
(rule__Throws__Group__0)
{ after(grammarAccess.getThrowsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodName
entryRuleMethodName 
:
{ before(grammarAccess.getMethodNameRule()); }
	 ruleMethodName
{ after(grammarAccess.getMethodNameRule()); } 
	 EOF 
;

// Rule MethodName
ruleMethodName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodNameAccess().getValueAssignment()); }
(rule__MethodName__ValueAssignment)
{ after(grammarAccess.getMethodNameAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimpleFieldValue
entryRuleSimpleFieldValue 
:
{ before(grammarAccess.getSimpleFieldValueRule()); }
	 ruleSimpleFieldValue
{ after(grammarAccess.getSimpleFieldValueRule()); } 
	 EOF 
;

// Rule SimpleFieldValue
ruleSimpleFieldValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimpleFieldValueAccess().getNameWithWCTerminalRuleCall()); }
	RULE_NAMEWITHWC
{ after(grammarAccess.getSimpleFieldValueAccess().getNameWithWCTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeFieldValue
entryRuleTypeFieldValue 
:
{ before(grammarAccess.getTypeFieldValueRule()); }
	 ruleTypeFieldValue
{ after(grammarAccess.getTypeFieldValueRule()); } 
	 EOF 
;

// Rule TypeFieldValue
ruleTypeFieldValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeFieldValueAccess().getAlternatives()); }
(rule__TypeFieldValue__Alternatives)
{ after(grammarAccess.getTypeFieldValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__ModifierValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierValueAccess().getValueAssignment_0()); }
(rule__ModifierValue__ValueAssignment_0)
{ after(grammarAccess.getModifierValueAccess().getValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getModifierValueAccess().getValueAssignment_1()); }
(rule__ModifierValue__ValueAssignment_1)
{ after(grammarAccess.getModifierValueAccess().getValueAssignment_1()); }
)

    |(
{ before(grammarAccess.getModifierValueAccess().getValueAssignment_2()); }
(rule__ModifierValue__ValueAssignment_2)
{ after(grammarAccess.getModifierValueAccess().getValueAssignment_2()); }
)

    |(
{ before(grammarAccess.getModifierValueAccess().getValueAssignment_3()); }
(rule__ModifierValue__ValueAssignment_3)
{ after(grammarAccess.getModifierValueAccess().getValueAssignment_3()); }
)

    |(
{ before(grammarAccess.getModifierValueAccess().getValueAssignment_4()); }
(rule__ModifierValue__ValueAssignment_4)
{ after(grammarAccess.getModifierValueAccess().getValueAssignment_4()); }
)

    |(
{ before(grammarAccess.getModifierValueAccess().getValueAssignment_5()); }
(rule__ModifierValue__ValueAssignment_5)
{ after(grammarAccess.getModifierValueAccess().getValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterElementHolder__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterElementHolderAccess().getElementAssignment_0()); }
(rule__ParameterElementHolder__ElementAssignment_0)
{ after(grammarAccess.getParameterElementHolderAccess().getElementAssignment_0()); }
)

    |(
{ before(grammarAccess.getParameterElementHolderAccess().getElementAssignment_1()); }
(rule__ParameterElementHolder__ElementAssignment_1)
{ after(grammarAccess.getParameterElementHolderAccess().getElementAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterTypeAccess().getValueAssignment_0()); }
(rule__ParameterType__ValueAssignment_0)
{ after(grammarAccess.getParameterTypeAccess().getValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getParameterTypeAccess().getValueAssignment_1()); }
(rule__ParameterType__ValueAssignment_1)
{ after(grammarAccess.getParameterTypeAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeFieldValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeFieldValueAccess().getVoidKeyword_0()); }

	'void' 

{ after(grammarAccess.getTypeFieldValueAccess().getVoidKeyword_0()); }
)

    |(
{ before(grammarAccess.getTypeFieldValueAccess().getNameWithWCTerminalRuleCall_1()); }
	RULE_NAMEWITHWC
{ after(grammarAccess.getTypeFieldValueAccess().getNameWithWCTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__MethodPatternDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodPatternDefinition__Group__0__Impl
	rule__MethodPatternDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodPatternDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodPatternDefinitionAccess().getModifierAssignment_0()); }
(rule__MethodPatternDefinition__ModifierAssignment_0)
{ after(grammarAccess.getMethodPatternDefinitionAccess().getModifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodPatternDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodPatternDefinition__Group__1__Impl
	rule__MethodPatternDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodPatternDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodPatternDefinitionAccess().getReturnTypeAssignment_1()); }
(rule__MethodPatternDefinition__ReturnTypeAssignment_1)
{ after(grammarAccess.getMethodPatternDefinitionAccess().getReturnTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodPatternDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodPatternDefinition__Group__2__Impl
	rule__MethodPatternDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodPatternDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodPatternDefinitionAccess().getMethodNameAssignment_2()); }
(rule__MethodPatternDefinition__MethodNameAssignment_2)
{ after(grammarAccess.getMethodPatternDefinitionAccess().getMethodNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodPatternDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodPatternDefinition__Group__3__Impl
	rule__MethodPatternDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodPatternDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodPatternDefinitionAccess().getParameterDefinitionAssignment_3()); }
(rule__MethodPatternDefinition__ParameterDefinitionAssignment_3)?
{ after(grammarAccess.getMethodPatternDefinitionAccess().getParameterDefinitionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodPatternDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodPatternDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodPatternDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodPatternDefinitionAccess().getThrowsClauseAssignment_4()); }
(rule__MethodPatternDefinition__ThrowsClauseAssignment_4)?
{ after(grammarAccess.getMethodPatternDefinitionAccess().getThrowsClauseAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ParameterDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDefinition__Group__0__Impl
	rule__ParameterDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDefinitionAccess().getParameterDefinitionAction_0()); }
(

)
{ after(grammarAccess.getParameterDefinitionAccess().getParameterDefinitionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDefinition__Group__1__Impl
	rule__ParameterDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDefinitionAccess().getLeftParenthesisKeyword_1()); }

	'(' 

{ after(grammarAccess.getParameterDefinitionAccess().getLeftParenthesisKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDefinition__Group__2__Impl
	rule__ParameterDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDefinitionAccess().getGroup_2()); }
(rule__ParameterDefinition__Group_2__0)?
{ after(grammarAccess.getParameterDefinitionAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDefinition__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDefinitionAccess().getRightParenthesisKeyword_3()); }

	')' 

{ after(grammarAccess.getParameterDefinitionAccess().getRightParenthesisKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ParameterDefinition__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDefinition__Group_2__0__Impl
	rule__ParameterDefinition__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDefinition__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDefinitionAccess().getParameterElementholderAssignment_2_0()); }
(rule__ParameterDefinition__ParameterElementholderAssignment_2_0)
{ after(grammarAccess.getParameterDefinitionAccess().getParameterElementholderAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDefinition__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDefinition__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDefinition__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDefinitionAccess().getGroup_2_1()); }
(rule__ParameterDefinition__Group_2_1__0)*
{ after(grammarAccess.getParameterDefinitionAccess().getGroup_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterDefinition__Group_2_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDefinition__Group_2_1__0__Impl
	rule__ParameterDefinition__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDefinition__Group_2_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDefinitionAccess().getCommaKeyword_2_1_0()); }

	',' 

{ after(grammarAccess.getParameterDefinitionAccess().getCommaKeyword_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterDefinition__Group_2_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterDefinition__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDefinition__Group_2_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDefinitionAccess().getParameterElementholderAssignment_2_1_1()); }
(rule__ParameterDefinition__ParameterElementholderAssignment_2_1_1)
{ after(grammarAccess.getParameterDefinitionAccess().getParameterElementholderAssignment_2_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Modifier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modifier__Group__0__Impl
	rule__Modifier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierAccess().getModifierAction_0()); }
(

)
{ after(grammarAccess.getModifierAccess().getModifierAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Modifier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Modifier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierAccess().getModifiersAssignment_1()); }
(rule__Modifier__ModifiersAssignment_1)*
{ after(grammarAccess.getModifierAccess().getModifiersAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__MultiElement__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiElement__Group__0__Impl
	rule__MultiElement__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiElement__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiElementAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getMultiElementAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiElement__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiElement__Group__1__Impl
	rule__MultiElement__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiElement__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiElementAccess().getElementsAssignment_1()); }
(rule__MultiElement__ElementsAssignment_1)
{ after(grammarAccess.getMultiElementAccess().getElementsAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiElement__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiElement__Group__2__Impl
	rule__MultiElement__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiElement__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiElementAccess().getGroup_2()); }
(rule__MultiElement__Group_2__0)*
{ after(grammarAccess.getMultiElementAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiElement__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiElement__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiElement__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiElementAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getMultiElementAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MultiElement__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiElement__Group_2__0__Impl
	rule__MultiElement__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiElement__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiElementAccess().getVerticalLineKeyword_2_0()); }

	'|' 

{ after(grammarAccess.getMultiElementAccess().getVerticalLineKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MultiElement__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MultiElement__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MultiElement__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiElementAccess().getElementsAssignment_2_1()); }
(rule__MultiElement__ElementsAssignment_2_1)
{ after(grammarAccess.getMultiElementAccess().getElementsAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Throws__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Throws__Group__0__Impl
	rule__Throws__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Throws__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowsAccess().getThrowsKeyword_0()); }

	'throws' 

{ after(grammarAccess.getThrowsAccess().getThrowsKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Throws__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Throws__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Throws__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowsAccess().getValueAssignment_1()); }
(rule__Throws__ValueAssignment_1)
{ after(grammarAccess.getThrowsAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__MethodPattern__DefinitionAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodPatternAccess().getDefinitionMethodPatternDefinitionParserRuleCall_0()); }
	ruleMethodPatternDefinition{ after(grammarAccess.getMethodPatternAccess().getDefinitionMethodPatternDefinitionParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodPatternDefinition__ModifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodPatternDefinitionAccess().getModifierModifierParserRuleCall_0_0()); }
	ruleModifier{ after(grammarAccess.getMethodPatternDefinitionAccess().getModifierModifierParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodPatternDefinition__ReturnTypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodPatternDefinitionAccess().getReturnTypeReturnTypeParserRuleCall_1_0()); }
	ruleReturnType{ after(grammarAccess.getMethodPatternDefinitionAccess().getReturnTypeReturnTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodPatternDefinition__MethodNameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodPatternDefinitionAccess().getMethodNameMethodNameParserRuleCall_2_0()); }
	ruleMethodName{ after(grammarAccess.getMethodPatternDefinitionAccess().getMethodNameMethodNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodPatternDefinition__ParameterDefinitionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodPatternDefinitionAccess().getParameterDefinitionParameterDefinitionParserRuleCall_3_0()); }
	ruleParameterDefinition{ after(grammarAccess.getMethodPatternDefinitionAccess().getParameterDefinitionParameterDefinitionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodPatternDefinition__ThrowsClauseAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodPatternDefinitionAccess().getThrowsClauseThrowsParserRuleCall_4_0()); }
	ruleThrows{ after(grammarAccess.getMethodPatternDefinitionAccess().getThrowsClauseThrowsParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDefinition__ParameterElementholderAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDefinitionAccess().getParameterElementholderParameterElementHolderParserRuleCall_2_0_0()); }
	ruleParameterElementHolder{ after(grammarAccess.getParameterDefinitionAccess().getParameterElementholderParameterElementHolderParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterDefinition__ParameterElementholderAssignment_2_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterDefinitionAccess().getParameterElementholderParameterElementHolderParserRuleCall_2_1_1_0()); }
	ruleParameterElementHolder{ after(grammarAccess.getParameterDefinitionAccess().getParameterElementholderParameterElementHolderParserRuleCall_2_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Modifier__ModifiersAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierAccess().getModifiersModifierValueParserRuleCall_1_0()); }
	ruleModifierValue{ after(grammarAccess.getModifierAccess().getModifiersModifierValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierValue__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierValueAccess().getValueStaticKeyword_0_0()); }
(
{ before(grammarAccess.getModifierValueAccess().getValueStaticKeyword_0_0()); }

	'static' 

{ after(grammarAccess.getModifierValueAccess().getValueStaticKeyword_0_0()); }
)

{ after(grammarAccess.getModifierValueAccess().getValueStaticKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierValue__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierValueAccess().getValuePrivateKeyword_1_0()); }
(
{ before(grammarAccess.getModifierValueAccess().getValuePrivateKeyword_1_0()); }

	'private' 

{ after(grammarAccess.getModifierValueAccess().getValuePrivateKeyword_1_0()); }
)

{ after(grammarAccess.getModifierValueAccess().getValuePrivateKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierValue__ValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierValueAccess().getValuePublicKeyword_2_0()); }
(
{ before(grammarAccess.getModifierValueAccess().getValuePublicKeyword_2_0()); }

	'public' 

{ after(grammarAccess.getModifierValueAccess().getValuePublicKeyword_2_0()); }
)

{ after(grammarAccess.getModifierValueAccess().getValuePublicKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierValue__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierValueAccess().getValueFinalKeyword_3_0()); }
(
{ before(grammarAccess.getModifierValueAccess().getValueFinalKeyword_3_0()); }

	'final' 

{ after(grammarAccess.getModifierValueAccess().getValueFinalKeyword_3_0()); }
)

{ after(grammarAccess.getModifierValueAccess().getValueFinalKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierValue__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierValueAccess().getValueAbstractKeyword_4_0()); }
(
{ before(grammarAccess.getModifierValueAccess().getValueAbstractKeyword_4_0()); }

	'abstract' 

{ after(grammarAccess.getModifierValueAccess().getValueAbstractKeyword_4_0()); }
)

{ after(grammarAccess.getModifierValueAccess().getValueAbstractKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ModifierValue__ValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModifierValueAccess().getValueProtectedKeyword_5_0()); }
(
{ before(grammarAccess.getModifierValueAccess().getValueProtectedKeyword_5_0()); }

	'protected' 

{ after(grammarAccess.getModifierValueAccess().getValueProtectedKeyword_5_0()); }
)

{ after(grammarAccess.getModifierValueAccess().getValueProtectedKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReturnType__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReturnTypeAccess().getValueTypeFieldValueParserRuleCall_0()); }
	ruleTypeFieldValue{ after(grammarAccess.getReturnTypeAccess().getValueTypeFieldValueParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterElementHolder__ElementAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterElementHolderAccess().getElementSingleElementParserRuleCall_0_0()); }
	ruleSingleElement{ after(grammarAccess.getParameterElementHolderAccess().getElementSingleElementParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterElementHolder__ElementAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterElementHolderAccess().getElementMultiElementParserRuleCall_1_0()); }
	ruleMultiElement{ after(grammarAccess.getParameterElementHolderAccess().getElementMultiElementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SingleElement__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSingleElementAccess().getValueParameterTypeParserRuleCall_0()); }
	ruleParameterType{ after(grammarAccess.getSingleElementAccess().getValueParameterTypeParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiElement__ElementsAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiElementAccess().getElementsSingleElementParserRuleCall_1_0()); }
	ruleSingleElement{ after(grammarAccess.getMultiElementAccess().getElementsSingleElementParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MultiElement__ElementsAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMultiElementAccess().getElementsSingleElementParserRuleCall_2_1_0()); }
	ruleSingleElement{ after(grammarAccess.getMultiElementAccess().getElementsSingleElementParserRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterType__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterTypeAccess().getValueTypeFieldValueParserRuleCall_0_0()); }
	ruleTypeFieldValue{ after(grammarAccess.getParameterTypeAccess().getValueTypeFieldValueParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterType__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterTypeAccess().getValueFullStopFullStopKeyword_1_0()); }
(
{ before(grammarAccess.getParameterTypeAccess().getValueFullStopFullStopKeyword_1_0()); }

	'..' 

{ after(grammarAccess.getParameterTypeAccess().getValueFullStopFullStopKeyword_1_0()); }
)

{ after(grammarAccess.getParameterTypeAccess().getValueFullStopFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Throws__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getThrowsAccess().getValueTypeFieldValueParserRuleCall_1_0()); }
	ruleTypeFieldValue{ after(grammarAccess.getThrowsAccess().getValueTypeFieldValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodName__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodNameAccess().getValueSimpleFieldValueParserRuleCall_0()); }
	ruleSimpleFieldValue{ after(grammarAccess.getMethodNameAccess().getValueSimpleFieldValueParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_NAMEWITHWC : ('a'..'z'|'A'..'Z'|'_'|'*'|'?') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'*'|'?'|'.'|'/')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


