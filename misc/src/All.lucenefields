packages "org.eclipselabs.recommenders.codesearch.rcp" "org.eclipselabs.recommenders.codesearch.rcp.dsl.ui"
class Fields 

SimpleField {
	FULLY_QUALIFIED_NAME 		= "FullyQualifiedName" 
	{ class, method, field, trycatch }

	FRIENDLY_NAME 				= "FriendlyName" 
	{ class, method, field, trycatch }
	
	RETURN_VARIABLE_EXPRESSIONS = "ReturnVariableExpressions" 
	{ method }

	ALL_DELCARED_METHOD_NAMES 	= "AllDeclaredMethodNames"
	{ class }
	
	DECLARED_METHODS_NAMES 		= "DeclaredMethodNames"
	{ class }
	
	DECLARED_FIELD_NAMES	 	= "DeclaredFieldNames"
	{ class, method,trycatch }
	
	ALL_DECLARED_FIELD_NAMES 	= "AllDeclaredFieldNames"
	{ class, method, trycatch }
	
	FULL_TEXT 					= "FullText"
	{ class, method, field, trycatch }
	
	FIELDS_READ 				= "FieldsRead"
	{ class, method, trycatch }
	
	FIELDS_WRITTEN				= "FieldsWritten"
	{ method, trycatch }
	
	USED_FIELDS_IN_FINALLY		= "UsedFieldsInFinally"
	{ trycatch }
	
	USED_FIELDS_IN_TRY			= "UsedFieldsInTry"
	{ trycatch }
	
	VARIABLE_NAME				= "VariableName"
	{ varusage }
}

TypeField {
	IMPLEMENTED_TYPES 			= "ImplementedTypes" 
	{ class } 
  
	EXTENDED_TYPE 				= "ExtendedTypes" 
	{ class }
	 
	USED_TYPES					= "UsedTypes"
	{ class, method, field, trycatch }
	
	USED_TYPES_IN_TRY 			= "UsedTypesInTry" 
	{ trycatch }
	
	USED_TYPES_IN_FINALLY		= "UsedTypesInFinally" 
	{ trycatch }
	
	PARAMETER_TYPES 			= "ParameterTypes" 
	{ method }
	
	RETURN_TYPE					= "ReturnType" 
	{ method }
	
	INSTANCEOF_TYPES			= "InstanceofTypes" 
	{ class, method, trycatch }
	
	ALL_IMPLEMENTED_TYPES 		= "AllImplementedTypes"
	{ class }
	
	ALL_EXTENDED_TYPES 			= "AllExtendedTypes"
	{ class }
	
	FIELD_TYPE 					= "FieldType"
	{ field }
	
	CAUGHT_TYPE 				= "CaughtType"
	{ trycatch }
	
	DECLARED_FIELD_TYPES 		= "DeclaredFieldTypes"
	{ class, method, trycatch }
	
	DECLARING_TYPE 				= "DeclaringType"
	{ method, field, trycatch }
	
	VARIABLE_TYPE				= "VariableType"
	{ varusage }
} 

MethodField {
	USED_METHODS 				= "UsedMethods" 
	{ class, method, trycatch }
	
	USED_METHODS_IN_TRY 		= "UsedMethodsInTry" 
	{ trycatch }
	
	USED_METHODS_IN_FINALLY 	= "UsedMethodsInFinally"
	{ trycatch }
	
	OVERRIDDEN_METHODS	 		= "OverriddenMethods"
	{ class }
	
	DECLARED_METHODS 			= "DeclaredMethods" 
	{ class }
	
	DECLARING_METHOD			= "DeclaringMethod"
	{ varusage }
	
	USED_AS_PARAMETER_IN_METHODS="UsedAsParameterInMethods"
	{ varusage }
	
	USED_AS_TAGET_FOR_METHODS	="UsedAsTargetForMethods"
	{ varusage }
}

FilePathField {
	RESOURCE_PATH 				= "ResourcePath"
	{ class, method, field, trycatch }
}
 
NumberField {
	PARAMETER_COUNT 			= "ParameterCount" 
	{ method }
}

ModifierField {	
	MODIFIERS 					= "Modifiers"
	{ class, method, field }
}

TimeField {
	TIMESTAMP 					= "Timestamp"
	{ class, method, field, trycatch }
}

DocumentTypeField {
	TYPE 						= "Type" 
	{ class, method, field, trycatch, varusage }
}

ProjectNameField {	
	PROJECT_NAME 				= "ProjectName"
	{ class, method, field, trycatch }
}

AnnotationField {	
	ANNOTATIONS					= "Annotations"
	{ class }
}

DefinitionType {
	VARIABLE_DEFINITION					= "VariableDefinition"
	{ varusage }
}